{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/jquery-3.4.1.min.js","path":"js/jquery-3.4.1.min.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff2","path":"css/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"source/apple-touch-icon.png","path":"apple-touch-icon.png","modified":0,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"source/favicon.png","path":"favicon.png","modified":0,"renderable":0},{"_id":"source/images/banner.jpg","path":"images/banner.jpg","modified":0,"renderable":0},{"_id":"source/images/Linux挂载Mount/dir_3.png","path":"images/Linux挂载Mount/dir_3.png","modified":0,"renderable":0},{"_id":"source/images/Linux挂载Mount/dirtree.gif","path":"images/Linux挂载Mount/dirtree.gif","modified":0,"renderable":0},{"_id":"source/images/color_space/Additive.png","path":"images/color_space/Additive.png","modified":0,"renderable":0},{"_id":"source/images/color_space/Fluorescentlamps.png","path":"images/color_space/Fluorescentlamps.png","modified":0,"renderable":0},{"_id":"source/images/color_space/Incandescentlight.png","path":"images/color_space/Incandescentlight.png","modified":0,"renderable":0},{"_id":"source/images/color_space/Subtractive.png","path":"images/color_space/Subtractive.png","modified":0,"renderable":0},{"_id":"source/images/color_space/XYZgamut.png","path":"images/color_space/XYZgamut.png","modified":0,"renderable":0},{"_id":"source/images/color_space/addsubcolor.png","path":"images/color_space/addsubcolor.png","modified":0,"renderable":0},{"_id":"source/images/color_space/colorMatchingFunctions.png","path":"images/color_space/colorMatchingFunctions.png","modified":0,"renderable":0},{"_id":"source/images/color_space/colormatchingfunc.png","path":"images/color_space/colormatchingfunc.png","modified":0,"renderable":0},{"_id":"source/images/color_space/illuminantE.png","path":"images/color_space/illuminantE.png","modified":0,"renderable":0},{"_id":"source/images/color_space/lumfunc.png","path":"images/color_space/lumfunc.png","modified":0,"renderable":0},{"_id":"source/images/color_space/spd.png","path":"images/color_space/spd.png","modified":0,"renderable":0},{"_id":"source/images/color_space/spd1.png","path":"images/color_space/spd1.png","modified":0,"renderable":0},{"_id":"source/images/color_space/spectrum1.png","path":"images/color_space/spectrum1.png","modified":0,"renderable":0},{"_id":"source/images/color_space/spectrum2.png","path":"images/color_space/spectrum2.png","modified":0,"renderable":0},{"_id":"source/images/color_space/spectrumFormulas.png","path":"images/color_space/spectrumFormulas.png","modified":0,"renderable":0},{"_id":"source/images/color_space/xyzgraph.gif","path":"images/color_space/xyzgraph.gif","modified":0,"renderable":0},{"_id":"source/images/color_space/xyzgraph.png","path":"images/color_space/xyzgraph.png","modified":0,"renderable":0},{"_id":"source/images/color_space/xyygraph.gif","path":"images/color_space/xyygraph.gif","modified":0,"renderable":0},{"_id":"source/images/color_space/yellow.png","path":"images/color_space/yellow.png","modified":0,"renderable":0},{"_id":"source/images/平面波动方程实现线条波动效果/harmonic.png","path":"images/平面波动方程实现线条波动效果/harmonic.png","modified":0,"renderable":0},{"_id":"source/images/平面波动方程实现线条波动效果/waveViewLong.gif","path":"images/平面波动方程实现线条波动效果/waveViewLong.gif","modified":0,"renderable":0},{"_id":"source/images/平面波动方程实现线条波动效果/waveViewOther.gif","path":"images/平面波动方程实现线条波动效果/waveViewOther.gif","modified":0,"renderable":0},{"_id":"source/images/平面波动方程实现线条波动效果/waveViewZheXian.gif","path":"images/平面波动方程实现线条波动效果/waveViewZheXian.gif","modified":0,"renderable":0},{"_id":"source/images/平面波动方程实现线条波动效果/waveWater.gif","path":"images/平面波动方程实现线条波动效果/waveWater.gif","modified":0,"renderable":0},{"_id":"source/images/平面波动方程实现线条波动效果/waveWater5.gif","path":"images/平面波动方程实现线条波动效果/waveWater5.gif","modified":0,"renderable":0},{"_id":"source/images/秋天野果/10.jpeg","path":"images/秋天野果/10.jpeg","modified":0,"renderable":0},{"_id":"source/images/秋天野果/11.jpeg","path":"images/秋天野果/11.jpeg","modified":0,"renderable":0},{"_id":"source/images/秋天野果/12.jpeg","path":"images/秋天野果/12.jpeg","modified":0,"renderable":0},{"_id":"source/images/秋天野果/1.jpeg","path":"images/秋天野果/1.jpeg","modified":0,"renderable":0},{"_id":"source/images/秋天野果/13.jpeg","path":"images/秋天野果/13.jpeg","modified":0,"renderable":0},{"_id":"source/images/秋天野果/14.jpeg","path":"images/秋天野果/14.jpeg","modified":0,"renderable":0},{"_id":"source/images/秋天野果/15.jpeg","path":"images/秋天野果/15.jpeg","modified":0,"renderable":0},{"_id":"source/images/秋天野果/16.jpeg","path":"images/秋天野果/16.jpeg","modified":0,"renderable":0},{"_id":"source/images/秋天野果/17.jpeg","path":"images/秋天野果/17.jpeg","modified":0,"renderable":0},{"_id":"source/images/秋天野果/18.jpeg","path":"images/秋天野果/18.jpeg","modified":0,"renderable":0},{"_id":"source/images/秋天野果/2.jpeg","path":"images/秋天野果/2.jpeg","modified":0,"renderable":0},{"_id":"source/images/秋天野果/3.jpeg","path":"images/秋天野果/3.jpeg","modified":0,"renderable":0},{"_id":"source/images/秋天野果/4.jpeg","path":"images/秋天野果/4.jpeg","modified":0,"renderable":0},{"_id":"source/images/秋天野果/5.jpeg","path":"images/秋天野果/5.jpeg","modified":0,"renderable":0},{"_id":"source/images/秋天野果/6.jpeg","path":"images/秋天野果/6.jpeg","modified":0,"renderable":0},{"_id":"source/images/秋天野果/7.jpeg","path":"images/秋天野果/7.jpeg","modified":0,"renderable":0},{"_id":"source/images/秋天野果/8.jpeg","path":"images/秋天野果/8.jpeg","modified":0,"renderable":0},{"_id":"source/images/秋天野果/9.jpeg","path":"images/秋天野果/9.jpeg","modified":0,"renderable":0},{"_id":"source/images/秋天野果/0title_banner.png","path":"images/秋天野果/0title_banner.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/.DS_Store","hash":"234075739099f89eb538b14834856a16a7c22771","modified":1661222965302},{"_id":"source/apple-touch-icon.png","hash":"42fc21ac62b1b0d3fe7e4e73af85261e7203a373","modified":1633932990790},{"_id":"source/favicon.ico","hash":"5b075aecfb32d472e26e7e9d693e20463c185c08","modified":1633932990790},{"_id":"source/favicon.png","hash":"b2368495b806bdaee6b5f11246021923edc2e674","modified":1633932990790},{"_id":"source/HTML/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1661159684852},{"_id":"source/_posts/SSH远程登录和SCP远程文件传输.md","hash":"a676a2328cf16710889559d5050d02997ca91cc7","modified":1657110147473},{"_id":"source/_posts/Vim中使用查找和替换.md","hash":"9694f8c303ba14a9839367f18d2e067cfa9cba76","modified":1633932990789},{"_id":"source/_posts/在Mac上读写NTFS.md","hash":"cdc6a1ec3469b6564cebc57b1fd960e5b613f85c","modified":1657110911929},{"_id":"source/_posts/平面波动方程实现线条波动效果.md","hash":"0aced8fdfc4635692259e61bd2a113a006172ed0","modified":1633932990789},{"_id":"source/_posts/.DS_Store","hash":"5798340dc18dec1ec6e09826e087a47393799dbb","modified":1661221183003},{"_id":"source/_posts/颜色和颜色空间之颜色.md","hash":"7fcdd0d7e96323104f7d8a0718e9ee5b2ac724d1","modified":1633932990789},{"_id":"source/HTML/秋天的野果.html","hash":"4c59b9e0631f91be110b010732297e4dfc742ca5","modified":1661164631865},{"_id":"source/_draft/_Linux命令_PS_任务管理.md","hash":"d718fbd9ff0fa4c359186552919d791dbc3dddb2","modified":1634732560800},{"_id":"source/_draft/_Linux命令_crontab_计划任务.md","hash":"d98ea31be4755d766a48bd44380e9c71b6d11318","modified":1640829615104},{"_id":"source/_draft/_Linux文件系统.md","hash":"9a5d857057424d25634e024e551fc93ccba828c2","modified":1635854123081},{"_id":"source/images/.DS_Store","hash":"7c7f12139aea855dc2461b847082430acd948455","modified":1661226102870},{"_id":"source/_draft/.DS_Store","hash":"b6446e8c47ef1361e94d99fddf8be15f5d12edc2","modified":1660817834365},{"_id":"source/_posts/Linux/Linux命令_APT_包管理.md","hash":"02e6708c28fc4435ddd9c58aefaba58f0756a792","modified":1657110091434},{"_id":"source/_draft/_Linux挂载Mount.md","hash":"3461bd64a93bc3add7c7fb4f2d9d68496447a9a6","modified":1648033744588},{"_id":"source/_posts/Linux/Linux命令_PS_任务管理.md","hash":"2cb6960cc6e0bd15e17f4483bfb1f4e7e320077b","modified":1657110617031},{"_id":"source/_posts/Linux/Linux挂载Mount.md","hash":"462e168f287e222bdac90cadea1ecbf183f9af32","modified":1657110650164},{"_id":"source/_posts/Linux/Linux文件系统.md","hash":"68ada346d0ee6c7f016779a59ab58cf0d23cf49a","modified":1657110679494},{"_id":"source/_posts/Linux/Linux命令_crontab_计划任务.md","hash":"f4f3e2460ee7dc5587e070ae7f51ab1185066fd3","modified":1657110592955},{"_id":"source/_posts/Linux/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1657108899083},{"_id":"source/images/color_space/Additive.png","hash":"ca20dd60fb6e81e04d8b524328d2b3a7147fece4","modified":1633932990791},{"_id":"source/images/Linux挂载Mount/dirtree.gif","hash":"508c04a89658d662512c6525d12e31bc109eb3ef","modified":1635249746600},{"_id":"source/images/Linux挂载Mount/dir_3.png","hash":"3ba6d218c3ee7fb839ad8956a66cc624a43eb653","modified":1635249760476},{"_id":"source/images/color_space/Incandescentlight.png","hash":"4c2f0ec88d6179ef4439e044154f101513a94fb3","modified":1633932990793},{"_id":"source/images/color_space/Fluorescentlamps.png","hash":"6d91d0b44e7cac8a5ccdac42712fa5afca628524","modified":1633932990792},{"_id":"source/images/color_space/Subtractive.png","hash":"8eeca9289f991e24fc91c3cbc4791a9d06c41c8e","modified":1633932990793},{"_id":"source/images/color_space/addsubcolor.png","hash":"88d8028f5e292e552cf3623ccb5aaaf2efc1b8bc","modified":1633932990795},{"_id":"source/images/color_space/colormatchingfunc.png","hash":"f2411ec71796edab34e7052cd6c879243eb025b2","modified":1633932990796},{"_id":"source/images/color_space/colorMatchingFunctions.png","hash":"2ac2db0a0508376545511a8bb43d087d8fd0963b","modified":1633932990796},{"_id":"source/images/color_space/illuminantE.png","hash":"41f48e8b311e5f9826f1656ef72cb50499ae3cb7","modified":1633932990796},{"_id":"source/images/color_space/lumfunc.png","hash":"88f39a9f2e1cdf3a5d6b1b0a42ca601fc4ac2af2","modified":1633932990797},{"_id":"source/images/color_space/index.html","hash":"ab87ad6437b711dc7ca37855ba14e50294f1f3aa","modified":1633932990797},{"_id":"source/images/color_space/spd.png","hash":"22b6b5ba362a39b1c95e1666acfd5205bbf089f4","modified":1633932990798},{"_id":"source/images/color_space/spectrum1.png","hash":"76dfeb848c72b939605d42a48cf714c07dad112e","modified":1633932990799},{"_id":"source/images/color_space/spectrum2.png","hash":"772372a0933de5c00abe1200a3650888fe458d07","modified":1633932990799},{"_id":"source/images/color_space/spectrumFormulas.png","hash":"9a804b6260183101ad12262c8b3a0f13743c339d","modified":1633932990800},{"_id":"source/images/color_space/yellow.png","hash":"3412ba022ba5c36c5e0287fe34d08d8ffc256c7f","modified":1633932990825},{"_id":"source/images/平面波动方程实现线条波动效果/waveViewOther.gif","hash":"c14839d453d71a75c1382cc1303fc02b55a422d8","modified":1633932990827},{"_id":"source/images/平面波动方程实现线条波动效果/harmonic.png","hash":"405c63ea649bb5d09b8d0dbe929c11c66411064d","modified":1633932990826},{"_id":"source/images/平面波动方程实现线条波动效果/waveViewLong.gif","hash":"7c1f2e00d874cd7f770af6af24de3b12b0a47fc9","modified":1633932990826},{"_id":"source/images/平面波动方程实现线条波动效果/waveViewZheXian.gif","hash":"4f992dee5d8b9aa93051a0aac76d775efb4b4a1b","modified":1633932990827},{"_id":"source/images/平面波动方程实现线条波动效果/waveWater5.gif","hash":"240b9e9d65e19ccebaee53fe394dbfe9f544983b","modified":1633932990828},{"_id":"source/images/平面波动方程实现线条波动效果/waveWater.gif","hash":"7c1f2e00d874cd7f770af6af24de3b12b0a47fc9","modified":1633932990827},{"_id":"source/images/秋天野果/.DS_Store","hash":"bb1d788cd04cb8f33f2a691397a97a9b6a4a0227","modified":1661225996070},{"_id":"source/images/秋天野果/10.jpeg","hash":"dff67a3375b53bb2add7a3f2472dd1048e4b01a2","modified":1660812232605},{"_id":"source/images/秋天野果/11.jpeg","hash":"62bc0b478c50014fc70d3587e9be11d745c0d8f6","modified":1661225679308},{"_id":"source/images/秋天野果/12.jpeg","hash":"c21b4f7dedc0e3266089d7f7dbe890a6ee8d0d2b","modified":1660812336387},{"_id":"source/images/秋天野果/1.jpeg","hash":"414fe9dfa0f047e47ea7ab610e46c521728447ad","modified":1661225160621},{"_id":"source/images/秋天野果/13.jpeg","hash":"5d045b7df0fe5e1bed852deccd34642ab625cc6d","modified":1660812813693},{"_id":"source/images/秋天野果/14.jpeg","hash":"9b37a9e7dbf2a2d5c2fc54f4f6714345eb501bb5","modified":1661225160698},{"_id":"source/images/秋天野果/16.jpeg","hash":"018cfab8f8427d895be3b5cf0892a11e1d8499db","modified":1660812652414},{"_id":"source/images/秋天野果/15.jpeg","hash":"b6fa8d9d34f9fe260807528b26bf87526e2b9a92","modified":1660812543944},{"_id":"source/images/秋天野果/17.jpeg","hash":"04bd9c4fb4c563c4408f92fc930d2651c201ab14","modified":1660812723028},{"_id":"source/images/秋天野果/18.jpeg","hash":"813805a470b7653617979097a7f700a6cacd9910","modified":1660812777703},{"_id":"source/images/秋天野果/4.jpeg","hash":"d6dbef5c54afda09b98ca369f270af9f939d1a13","modified":1660812152169},{"_id":"source/images/秋天野果/5.jpeg","hash":"b27e256b1bb0ad84292217cbf25344d59bd22438","modified":1661225160706},{"_id":"source/images/秋天野果/6.jpeg","hash":"a15a4c3f6e48fb06206884b5a4c9d04774d3776f","modified":1661225160634},{"_id":"source/images/秋天野果/7.jpeg","hash":"65bf18b6379a1eb304ce483a99e763a56256d446","modified":1660811617486},{"_id":"source/images/秋天野果/9.jpeg","hash":"fd5b4e803a8449db77b12c9a02c125c9841a2cb1","modified":1660812190494},{"_id":"source/images/color_space/XYZgamut.png","hash":"4cba08feb0a4f65335825a213dd2ed4e33ab0f33","modified":1633932990794},{"_id":"source/images/color_space/spd1.png","hash":"5c4cacdf15b450e7b99dc70aee0178809cb8b49c","modified":1633932990799},{"_id":"source/images/color_space/xyzgraph.png","hash":"436593ce0f7bd56842e6c2fb3feb797a2bdfb054","modified":1633932990825},{"_id":"source/images/秋天野果/2.jpeg","hash":"b61b78944634f9659747b2aa4d9e5d008dde7758","modified":1661225160713},{"_id":"source/images/秋天野果/3.jpeg","hash":"e60d2485847bf17bd7feb712c6649c1b98244cf6","modified":1661225576385},{"_id":"source/images/banner.jpg","hash":"6deea7f9efa0b3030348d802e7496bac651d3fa6","modified":1661222411418},{"_id":"source/images/秋天野果/8.jpeg","hash":"e853bce8c14d9d553c763531d68db516b8b988cc","modified":1661225160691},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1633933330377},{"_id":"themes/landscape/.gitignore","hash":"4c78c751a5bbca6b54ad06922947573c967d51c8","modified":1633933330376},{"_id":"themes/landscape/.npmignore","hash":"4c40eab00f24304ca400313319c58d461788ff5e","modified":1633933330376},{"_id":"themes/landscape/README.md","hash":"d2772ece6d4422ccdaa0359c3e07588834044052","modified":1633933330377},{"_id":"themes/landscape/package.json","hash":"9a94875cbf4c27fbe2e63da0496242addc6d2876","modified":1633933330389},{"_id":"themes/landscape/_config.yml","hash":"42b26e43ef9db02222453379cfe63f7d1ff154bd","modified":1633934607306},{"_id":"themes/landscape/.github/dependabot.yml","hash":"25b0257a0db2c5b6a5756d8990bc2cba12f54fc5","modified":1633933330376},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1633933330377},{"_id":"themes/landscape/languages/de-DE.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1633933330377},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1633933330378},{"_id":"themes/landscape/languages/en-US.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1633933330378},{"_id":"themes/landscape/languages/en-GB.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1633933330378},{"_id":"themes/landscape/languages/en.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1633933330378},{"_id":"themes/landscape/languages/es-ES.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1633933330378},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1633933330378},{"_id":"themes/landscape/languages/fr-FR.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1633933330379},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1633933330379},{"_id":"themes/landscape/languages/hu-HU.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":1633933330379},{"_id":"themes/landscape/languages/hu.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":1633933330379},{"_id":"themes/landscape/languages/it-IT.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":1633933330379},{"_id":"themes/landscape/languages/it.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":1633933330379},{"_id":"themes/landscape/languages/ja-JP.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1633933330380},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1633933330380},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1633933330380},{"_id":"themes/landscape/languages/ko-KR.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1633933330380},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1633933330381},{"_id":"themes/landscape/languages/nl-NL.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1633933330381},{"_id":"themes/landscape/languages/mn-MN.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":1633933330380},{"_id":"themes/landscape/languages/mn.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":1633933330380},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1633933330381},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1633933330381},{"_id":"themes/landscape/languages/pt-PT.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1633933330381},{"_id":"themes/landscape/languages/ru-RU.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1633933330381},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1633933330381},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"1efd95774f401c80193eac6ee3f1794bfe93dc5a","modified":1633933330382},{"_id":"themes/landscape/languages/tr.yml","hash":"a1cdbfa17682d7a971de8ab8588bf57c74224b5b","modified":1633933330382},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1633933330388},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1633933330382},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1633933330388},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1633933330388},{"_id":"themes/landscape/layout/layout.ejs","hash":"0d1765036e4874500e68256fedb7470e96eeb6ee","modified":1633933330388},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1633933330389},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1633933330389},{"_id":"themes/landscape/scripts/fancybox.js","hash":"c857d7a5e4a5d71c743a009c5932bf84229db428","modified":1633933330389},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1633933330389},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1633933330383},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"414914ebb159fac1922b056b905e570ac7521925","modified":1633933330382},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"7cb70a7a54f8c7ae49b10d1f37c0a9b74eab8826","modified":1633933330383},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"3656eb692254346671abc03cb3ba1459829e0dce","modified":1633933330383},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"dfd555c00e85ffc4207c88968d12b219c1f086ec","modified":1633933330383},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1633933330383},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1633933330384},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"f215d92a882247a7cc5ea80b241bedfcec0ea6ca","modified":1633933330384},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"c1acd247e14588cdf101a69460cb8319c18cd078","modified":1633933330384},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1633933330386},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1633933330386},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1633933330384},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1633933330386},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1633933330387},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"60c4b012dcc656438ff59997e60367e5a21ab746","modified":1633933330387},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1633933330390},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1633933330387},{"_id":"themes/landscape/source/css/_variables.styl","hash":"581b0cbefdaa5f894922133989dd2d3bf71ded79","modified":1633933330393},{"_id":"themes/landscape/source/css/style.styl","hash":"9c451e5efd72c5bb8b56e8c2b94be731e99db05b","modified":1633933330415},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1633933330415},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1633933330385},{"_id":"themes/landscape/source/js/script.js","hash":"998ed4c5b147e1299bf62beebf33514474f28112","modified":1633933330417},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1633933330385},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1633933330385},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"f1458584b679545830b75bef2526e2f3eb931045","modified":1633933330385},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"4d7e62574ddf46de9b41605fe3140d77b5ddb26d","modified":1633933330386},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1633933330385},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1633933330390},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"80759482d07063c091e940f964a1cf6693d3d406","modified":1633933330391},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1633933330391},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1633933330391},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1633933330391},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1633933330391},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1633933330392},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1633933330392},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1633933330392},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1633933330392},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1633933330392},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1633933330393},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1633933330416},{"_id":"themes/landscape/source/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1633933330417},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1633933330408},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1633933330408},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1633933330398},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1633933330396},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1633933330406},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1633933330414},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1633933330403},{"_id":"source/images/color_space/xyygraph.gif","hash":"a79343258b369f433916902bf83d152af50cecfb","modified":1633932990810},{"_id":"source/images/color_space/xyzgraph.gif","hash":"ca3455b3b7077cdb5a68a3d3644f7851cddcd27a","modified":1633932990824},{"_id":"public/2022/01/04/在Mac上读写NTFS/index.html","hash":"ddbd15da7b43fdc5f33b498c7e7ef057136e2ab9","modified":1661226133739},{"_id":"public/HTML/秋天的野果.html","hash":"b04d9eef967c6035c71fcfbb7c00928a670b553e","modified":1661226133739},{"_id":"public/2021/10/18/Linux/Linux命令_PS_任务管理/index.html","hash":"73ef392b3d4bd7f43ddc8f9e1d0871c0763178be","modified":1661226133739},{"_id":"public/archives/index.html","hash":"ea6efbffd791c6ea810ac6e81b69386ee342a619","modified":1661226133739},{"_id":"public/archives/2016/index.html","hash":"ec7a5d42730e698343adaf1ac625d92e8a915276","modified":1661226133739},{"_id":"public/archives/2016/05/index.html","hash":"f28d68262132ff48539e148aa51b8cd105b79341","modified":1661226133739},{"_id":"public/archives/2017/index.html","hash":"f3e4b48269f4573564bbda35536d35c5de0eb28d","modified":1661226133739},{"_id":"public/archives/2017/08/index.html","hash":"e5e2ad5042a3ed924c9c197f4816c3b67e521069","modified":1661226133739},{"_id":"public/archives/2021/index.html","hash":"64aa6621dc8744f3b1f8e2920f2e4267bdec0855","modified":1661226133739},{"_id":"public/archives/2021/10/index.html","hash":"0e6bc461623fd74db163db0c6d5c9a71ee6f8279","modified":1661226133739},{"_id":"public/archives/2022/index.html","hash":"78f41cb97f62534b47db5700b5a0ca1a1073524b","modified":1661226133739},{"_id":"public/archives/2022/01/index.html","hash":"8d5fe8062c0a378b9fb4c3b459cb56c96c9049b6","modified":1661226133739},{"_id":"public/categories/vim/index.html","hash":"73efd2f9930896fe5dbbd9713e7caa85ec80a2d9","modified":1661226133739},{"_id":"public/categories/Mac/index.html","hash":"5ebead757018c90389ce2505a77a9f7f4c7344f1","modified":1661226133739},{"_id":"public/categories/Animation/index.html","hash":"ae42a813aa54d219efb01275d94ba5442c2741ff","modified":1661226133739},{"_id":"public/categories/Core-Graphics/index.html","hash":"7527d40d272c48662b9d51f177cb22fda46c439d","modified":1661226133739},{"_id":"public/categories/Linux/index.html","hash":"770086b53aa1a64299fb81a54a0cc1dcb05e96ce","modified":1661226133739},{"_id":"public/categories/Animation/Core-Graphics/index.html","hash":"9b98b5ae25c9ec950489d612ef53b9b7d019350f","modified":1661226133739},{"_id":"public/tags/vim/index.html","hash":"79dc34e05f71201a15366a0084fc493b6eae32cf","modified":1661226133739},{"_id":"public/tags/Mac/index.html","hash":"31b6379cbe67668795bd476148cee6f7f4fc3555","modified":1661226133739},{"_id":"public/tags/NTFS/index.html","hash":"9742736990b5b9f2974cb6ee7d0908bf9006605b","modified":1661226133739},{"_id":"public/tags/Animation/index.html","hash":"76aae3e5da19470e21d9853398c6a51363adb1ad","modified":1661226133739},{"_id":"public/tags/颜色/index.html","hash":"e27cb705751bd3135c6a97173018a204e4b6c622","modified":1661226133739},{"_id":"public/tags/Color-Space/index.html","hash":"8149367d156fbaa71742084dd2e7d8adc83d91de","modified":1661226133739},{"_id":"public/tags/Linux/index.html","hash":"a7dd78ed94ff10ffa0f44434228d7d2454ec0dc2","modified":1661226133739},{"_id":"public/tags/APT/index.html","hash":"b0c300c67c83f95e4231052f5aa5117a14ee03eb","modified":1661226133739},{"_id":"public/tags/Cron/index.html","hash":"0855baa3727092645406d1dc2088b1eca5bc8697","modified":1661226133739},{"_id":"public/tags/ps/index.html","hash":"500e7291b67c678edfe2790084903535c8243242","modified":1661226133739},{"_id":"public/tags/ssh/index.html","hash":"f2a9cd08d4a73518adc066a8041ec91d6058e6bc","modified":1661226133739},{"_id":"public/tags/scp/index.html","hash":"8fec60ba9a7f469bca4b96082500556a2f16fd29","modified":1661226133739},{"_id":"public/tags/Mount/index.html","hash":"ce1e30aa4dbce9b0bfbaa37af3db29abf1788344","modified":1661226133739},{"_id":"public/images/color_space/index.html","hash":"253853b4bcf7ab8b2dd5dda639c21348115616e2","modified":1661226133739},{"_id":"public/2021/10/21/Linux/Linux挂载Mount/index.html","hash":"e8437fbe4eeb11cb41891a0ec2dd4495c759dc4b","modified":1661226133739},{"_id":"public/2021/10/20/Linux/Linux命令_APT_包管理/index.html","hash":"6c4821da0a8c612306847073697c5a61a1192122","modified":1661226133739},{"_id":"public/2021/10/19/Linux/Linux文件系统/index.html","hash":"46408f3e9f057dfd2a8ed0c2807d2f90ec35f9f9","modified":1661226133739},{"_id":"public/2021/10/19/Linux/Linux命令_crontab_计划任务/index.html","hash":"2e2754f637f857bb997814b5b6f3375c8f68d60c","modified":1661226133739},{"_id":"public/2017/08/26/Vim中使用查找和替换/index.html","hash":"ab9a6e805f82cb0b284a0159dfab8e3ac5725035","modified":1661226133739},{"_id":"public/2017/08/26/SSH远程登录和SCP远程文件传输/index.html","hash":"ac57db9d21537dae29067ec259c63f2c7e0afbde","modified":1661226133739},{"_id":"public/2017/08/23/颜色和颜色空间之颜色/index.html","hash":"cf079ffc028d98556bf000722ba52a2c229e4613","modified":1661226133739},{"_id":"public/2016/05/27/平面波动方程实现线条波动效果/index.html","hash":"b04173848e770a626dea32c6c9c4017c602873f9","modified":1661226133739},{"_id":"public/index.html","hash":"2f4d5d8cbff6365bc6e8ce1e14c1e63cdb30bcdc","modified":1661226487745},{"_id":"public/favicon.ico","hash":"5b075aecfb32d472e26e7e9d693e20463c185c08","modified":1661162316521},{"_id":"public/favicon.png","hash":"b2368495b806bdaee6b5f11246021923edc2e674","modified":1661162316521},{"_id":"public/apple-touch-icon.png","hash":"42fc21ac62b1b0d3fe7e4e73af85261e7203a373","modified":1661162316521},{"_id":"public/images/Linux挂载Mount/dirtree.gif","hash":"508c04a89658d662512c6525d12e31bc109eb3ef","modified":1661162316521},{"_id":"public/images/Linux挂载Mount/dir_3.png","hash":"3ba6d218c3ee7fb839ad8956a66cc624a43eb653","modified":1661162316521},{"_id":"public/images/color_space/Additive.png","hash":"ca20dd60fb6e81e04d8b524328d2b3a7147fece4","modified":1661162316521},{"_id":"public/images/color_space/Fluorescentlamps.png","hash":"6d91d0b44e7cac8a5ccdac42712fa5afca628524","modified":1661162316521},{"_id":"public/images/color_space/Subtractive.png","hash":"8eeca9289f991e24fc91c3cbc4791a9d06c41c8e","modified":1661162316521},{"_id":"public/images/color_space/colormatchingfunc.png","hash":"f2411ec71796edab34e7052cd6c879243eb025b2","modified":1661162316521},{"_id":"public/images/color_space/colorMatchingFunctions.png","hash":"2ac2db0a0508376545511a8bb43d087d8fd0963b","modified":1661162316521},{"_id":"public/images/color_space/illuminantE.png","hash":"41f48e8b311e5f9826f1656ef72cb50499ae3cb7","modified":1661162316521},{"_id":"public/images/color_space/addsubcolor.png","hash":"88d8028f5e292e552cf3623ccb5aaaf2efc1b8bc","modified":1661162316521},{"_id":"public/images/color_space/lumfunc.png","hash":"88f39a9f2e1cdf3a5d6b1b0a42ca601fc4ac2af2","modified":1661162316521},{"_id":"public/images/color_space/spectrum1.png","hash":"76dfeb848c72b939605d42a48cf714c07dad112e","modified":1661162316521},{"_id":"public/images/color_space/spd.png","hash":"22b6b5ba362a39b1c95e1666acfd5205bbf089f4","modified":1661162316521},{"_id":"public/images/color_space/Incandescentlight.png","hash":"4c2f0ec88d6179ef4439e044154f101513a94fb3","modified":1661162316521},{"_id":"public/images/color_space/spectrum2.png","hash":"772372a0933de5c00abe1200a3650888fe458d07","modified":1661162316521},{"_id":"public/images/color_space/spectrumFormulas.png","hash":"9a804b6260183101ad12262c8b3a0f13743c339d","modified":1661162316521},{"_id":"public/images/color_space/yellow.png","hash":"3412ba022ba5c36c5e0287fe34d08d8ffc256c7f","modified":1661162316521},{"_id":"public/images/平面波动方程实现线条波动效果/waveViewZheXian.gif","hash":"4f992dee5d8b9aa93051a0aac76d775efb4b4a1b","modified":1661162316521},{"_id":"public/images/平面波动方程实现线条波动效果/waveViewOther.gif","hash":"c14839d453d71a75c1382cc1303fc02b55a422d8","modified":1661162316521},{"_id":"public/images/平面波动方程实现线条波动效果/waveWater.gif","hash":"7c1f2e00d874cd7f770af6af24de3b12b0a47fc9","modified":1661162316521},{"_id":"public/images/平面波动方程实现线条波动效果/waveWater5.gif","hash":"240b9e9d65e19ccebaee53fe394dbfe9f544983b","modified":1661162316521},{"_id":"public/images/秋天野果/10.jpeg","hash":"dff67a3375b53bb2add7a3f2472dd1048e4b01a2","modified":1661226133739},{"_id":"public/images/秋天野果/12.jpeg","hash":"c21b4f7dedc0e3266089d7f7dbe890a6ee8d0d2b","modified":1661226133739},{"_id":"public/images/秋天野果/13.jpeg","hash":"5d045b7df0fe5e1bed852deccd34642ab625cc6d","modified":1661226133739},{"_id":"public/images/秋天野果/14.jpeg","hash":"9b37a9e7dbf2a2d5c2fc54f4f6714345eb501bb5","modified":1661226133739},{"_id":"public/images/秋天野果/15.jpeg","hash":"b6fa8d9d34f9fe260807528b26bf87526e2b9a92","modified":1661226133739},{"_id":"public/images/平面波动方程实现线条波动效果/harmonic.png","hash":"405c63ea649bb5d09b8d0dbe929c11c66411064d","modified":1661162316521},{"_id":"public/images/秋天野果/16.jpeg","hash":"018cfab8f8427d895be3b5cf0892a11e1d8499db","modified":1661226133739},{"_id":"public/images/平面波动方程实现线条波动效果/waveViewLong.gif","hash":"7c1f2e00d874cd7f770af6af24de3b12b0a47fc9","modified":1661162316521},{"_id":"public/images/秋天野果/17.jpeg","hash":"04bd9c4fb4c563c4408f92fc930d2651c201ab14","modified":1661226133739},{"_id":"public/images/秋天野果/18.jpeg","hash":"813805a470b7653617979097a7f700a6cacd9910","modified":1661226133739},{"_id":"public/images/秋天野果/4.jpeg","hash":"d6dbef5c54afda09b98ca369f270af9f939d1a13","modified":1661226133739},{"_id":"public/images/秋天野果/5.jpeg","hash":"b27e256b1bb0ad84292217cbf25344d59bd22438","modified":1661226133739},{"_id":"public/images/秋天野果/6.jpeg","hash":"a15a4c3f6e48fb06206884b5a4c9d04774d3776f","modified":1661226133739},{"_id":"public/images/秋天野果/7.jpeg","hash":"65bf18b6379a1eb304ce483a99e763a56256d446","modified":1661226133739},{"_id":"public/images/秋天野果/9.jpeg","hash":"fd5b4e803a8449db77b12c9a02c125c9841a2cb1","modified":1661226133739},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1661162316521},{"_id":"public/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1661162316521},{"_id":"public/images/秋天野果/1.jpeg","hash":"414fe9dfa0f047e47ea7ab610e46c521728447ad","modified":1661226133739},{"_id":"public/images/秋天野果/11.jpeg","hash":"62bc0b478c50014fc70d3587e9be11d745c0d8f6","modified":1661226133739},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1661162316521},{"_id":"public/js/script.js","hash":"998ed4c5b147e1299bf62beebf33514474f28112","modified":1661162316521},{"_id":"public/css/style.css","hash":"0b7b1e1ff6f82999901e4857bacd5f80d187a8ed","modified":1661162316521},{"_id":"public/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1661162316521},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1661162316521},{"_id":"public/images/color_space/xyzgraph.png","hash":"436593ce0f7bd56842e6c2fb3feb797a2bdfb054","modified":1661162316521},{"_id":"public/images/color_space/XYZgamut.png","hash":"4cba08feb0a4f65335825a213dd2ed4e33ab0f33","modified":1661162316521},{"_id":"public/images/color_space/spd1.png","hash":"5c4cacdf15b450e7b99dc70aee0178809cb8b49c","modified":1661162316521},{"_id":"public/images/秋天野果/2.jpeg","hash":"b61b78944634f9659747b2aa4d9e5d008dde7758","modified":1661226133739},{"_id":"public/images/秋天野果/3.jpeg","hash":"e60d2485847bf17bd7feb712c6649c1b98244cf6","modified":1661226133739},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1661162316521},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1661162316521},{"_id":"public/images/banner.jpg","hash":"6deea7f9efa0b3030348d802e7496bac651d3fa6","modified":1661226133739},{"_id":"public/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1661162316521},{"_id":"public/images/秋天野果/8.jpeg","hash":"e853bce8c14d9d553c763531d68db516b8b988cc","modified":1661226133739},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1661162316521},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1661162316521},{"_id":"public/images/color_space/xyygraph.gif","hash":"a79343258b369f433916902bf83d152af50cecfb","modified":1661162316521},{"_id":"public/images/color_space/xyzgraph.gif","hash":"ca3455b3b7077cdb5a68a3d3644f7851cddcd27a","modified":1661162316521},{"_id":"source/_posts/秋天野果.md","hash":"4375ccf5b425d65c2d23a631211be32cd51fc3c1","modified":1661220550143},{"_id":"public/categories/生活/index.html","hash":"8324fe93d42b7960af78f7236f72099778ff9d28","modified":1661226133739},{"_id":"public/archives/page/2/index.html","hash":"467cb3bdf668391e083b65bc4bfb46f5d358e538","modified":1661226133739},{"_id":"public/tags/生活/index.html","hash":"b856f0ec353ade70e8cf655e59afb7b0b35b23de","modified":1661226133739},{"_id":"public/tags/小时候/index.html","hash":"d127e2d2a8821133a7546365ed4bcae7d97d45d7","modified":1661226133739},{"_id":"public/archives/2022/08/index.html","hash":"5b8d4f71c7e93f304e24282fc496712b781c378b","modified":1661226133739},{"_id":"public/2022/08/20/秋天野果/index.html","hash":"fb4484f1605eb7928ebf28631c23d14ff1c8ad14","modified":1661220553545},{"_id":"public/page/2/index.html","hash":"79c9143b72c383cb56b8cbe56b7fce608c6a5ec1","modified":1661226133739},{"_id":"source/_posts/Life/秋天野果.md","hash":"8dcf158eacf5a2751c90d240306c5ff6a9a60e09","modified":1661226760850},{"_id":"source/images/秋天野果/0title_banner.png","hash":"1fe67bfb36402990fc54520d38128d064008f484","modified":1661221091083},{"_id":"public/2022/08/20/Life/秋天野果/index.html","hash":"fac9d0e05b19f8f71b23c536db9696efc8c79b20","modified":1661226771977},{"_id":"public/images/秋天野果/0title_banner.png","hash":"1fe67bfb36402990fc54520d38128d064008f484","modified":1661226133739}],"Category":[{"name":"vim","_id":"cl74l5j5i00032a3711zm3rov"},{"name":"Mac","_id":"cl74l5j5n00082a37as843b67"},{"name":"Animation","_id":"cl74l5j5p000e2a37d9sw0nob"},{"name":"Core Graphics","_id":"cl74l5j5s000j2a37diii5jh8"},{"name":"Linux","_id":"cl74l5j5t000n2a377s8edznv"},{"name":"Core Graphics","parent":"cl74l5j5p000e2a37d9sw0nob","_id":"cl74l5j5x00112a376u5q7ifx"},{"name":"生活","_id":"cl75jsxcp0001wr37exo7cvn4"}],"Data":[],"Page":[{"_content":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  \n  \n  <title>颜色和颜色空间之颜色 | Hut&#39;s left Blog</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n  <meta name=\"description\" content=\"白色代表学术诚实和肉体之爱的纯净；红色代表艺术激情、政治信念、血气之勇；蓝色代表在音乐和数学上的内省发现、医疗助人以及万物的基本结构；翠绿代表和自然共鸣、和技术同乐以及对受威胁生命的保护；黑色代表人类神秘的创作，这是德姆・瑞亚的民族颜色的含义。我喜欢蓝色，你喜欢绿色，人家喜欢黑色，这在日常颜色真的很简单，只需要感性的感受它的美就可以。但当我看到“颜色空间”，进而去想理解颜色的时候，发现我们对颜\">\n<meta property=\"og:type\" content=\"article\">\n<meta property=\"og:title\" content=\"颜色和颜色空间之颜色\">\n<meta property=\"og:url\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/index.html\">\n<meta property=\"og:site_name\" content=\"Hut&#39;s left Blog\">\n<meta property=\"og:description\" content=\"白色代表学术诚实和肉体之爱的纯净；红色代表艺术激情、政治信念、血气之勇；蓝色代表在音乐和数学上的内省发现、医疗助人以及万物的基本结构；翠绿代表和自然共鸣、和技术同乐以及对受威胁生命的保护；黑色代表人类神秘的创作，这是德姆・瑞亚的民族颜色的含义。我喜欢蓝色，你喜欢绿色，人家喜欢黑色，这在日常颜色真的很简单，只需要感性的感受它的美就可以。但当我看到“颜色空间”，进而去想理解颜色的时候，发现我们对颜\">\n<meta property=\"og:locale\" content=\"en_US\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/spectrum1.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/Additive.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/yellow.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/Subtractive.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/spectrum2.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/lumfunc.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/Fluorescentlamps.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/Incandescentlight.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/spd.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/illuminantE.png\">\n<meta property=\"article:published_time\" content=\"2017-08-23T02:48:18.000Z\">\n<meta property=\"article:modified_time\" content=\"2020-11-24T04:10:53.326Z\">\n<meta property=\"article:author\" content=\"John Doe\">\n<meta property=\"article:tag\" content=\"颜色\">\n<meta property=\"article:tag\" content=\"Color Space\">\n<meta name=\"twitter:card\" content=\"summary\">\n<meta name=\"twitter:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/spectrum1.png\">\n  \n    <link rel=\"alternate\" href=\"/atom.xml\" title=\"Hut's left Blog\" type=\"application/atom+xml\">\n  \n  \n    <link rel=\"shortcut icon\" href=\"/favicon.png\">\n  \n  \n    \n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/typeface-source-code-pro@0.0.71/index.min.css\">\n\n  \n  \n<link rel=\"stylesheet\" href=\"/css/style.css\">\n\n  \n    \n<link rel=\"stylesheet\" href=\"/fancybox/jquery.fancybox.min.css\">\n\n  \n<meta name=\"generator\" content=\"Hexo 5.2.0\"></head>\n\n<body>\n  <div id=\"container\">\n    <div id=\"wrap\">\n      <header id=\"header\">\n  <div id=\"banner\"></div>\n  <div id=\"header-outer\" class=\"outer\">\n    <div id=\"header-title\" class=\"inner\">\n      <h1 id=\"logo-wrap\">\n        <a href=\"/\" id=\"logo\">Hut&#39;s left Blog</a>\n      </h1>\n      \n    </div>\n    <div id=\"header-inner\" class=\"inner\">\n      <nav id=\"main-nav\">\n        <a id=\"main-nav-toggle\" class=\"nav-icon\"></a>\n        \n          <a class=\"main-nav-link\" href=\"/\">Home</a>\n        \n          <a class=\"main-nav-link\" href=\"/archives\">Archives</a>\n        \n      </nav>\n      <nav id=\"sub-nav\">\n        \n          <a id=\"nav-rss-link\" class=\"nav-icon\" href=\"/atom.xml\" title=\"RSS Feed\"></a>\n        \n        <a id=\"nav-search-btn\" class=\"nav-icon\" title=\"Search\"></a>\n      </nav>\n      <div id=\"search-form-wrap\">\n        <form action=\"//google.com/search\" method=\"get\" accept-charset=\"UTF-8\" class=\"search-form\"><input type=\"search\" name=\"q\" class=\"search-form-input\" placeholder=\"Search\"><button type=\"submit\" class=\"search-form-submit\">&#xF002;</button><input type=\"hidden\" name=\"sitesearch\" value=\"https://stoull.github.io\"></form>\n      </div>\n    </div>\n  </div>\n</header>\n\n      <div class=\"outer\">\n        <section id=\"main\"><article id=\"post-颜色和颜色空间之颜色\" class=\"h-entry article article-type-post\" itemprop=\"blogPost\" itemscope itemtype=\"https://schema.org/BlogPosting\">\n  <div class=\"article-meta\">\n    <a href=\"/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/\" class=\"article-date\">\n  <time class=\"dt-published\" datetime=\"2017-08-23T02:48:18.000Z\" itemprop=\"datePublished\">2017-08-23</time>\n</a>\n    \n  <div class=\"article-category\">\n    <a class=\"article-category-link\" href=\"/categories/Core-Graphics/\">Core Graphics</a>\n  </div>\n\n  </div>\n  <div class=\"article-inner\">\n    \n    \n      <header class=\"article-header\">\n        \n  \n    <h1 class=\"p-name article-title\" itemprop=\"headline name\">\n      颜色和颜色空间之颜色\n    </h1>\n  \n\n      </header>\n    \n    <div class=\"e-content article-entry\" itemprop=\"articleBody\">\n      \n        <!--# 颜色和颜色空间之颜色-->\n\n<p>白色代表学术诚实和肉体之爱的纯净；红色代表艺术激情、政治信念、血气之勇；蓝色代表在音乐和数学上的内省发现、医疗助人以及万物的基本结构；翠绿代表和自然共鸣、和技术同乐以及对受威胁生命的保护；黑色代表人类神秘的创作，这是德姆・瑞亚的民族颜色的含义。我喜欢蓝色，你喜欢绿色，人家喜欢黑色，这在日常颜色真的很简单，只需要感性的感受它的美就可以。但当我看到“颜色空间”，进而去想理解颜色的时候，发现我们对颜色的描述真的是很复杂，涉及到光的物理性质，以及的生理结构等方面。</p>\n<h2 id=\"什么是颜色\"><a href=\"#什么是颜色\" class=\"headerlink\" title=\"什么是颜色\"></a>什么是颜色</h2><h3 id=\"光\"><a href=\"#光\" class=\"headerlink\" title=\"光\"></a>光</h3><p>我们能看各种颜色的大千世界，一切都始于光。所要明白颜色是什么，我们先得明白光是什么东西。光有粒子性和波动性，但在研究颜色的问题上，都使用光的波动性来研究，即光是一种波，物理学上叫电磁波。由于有不同波长的电磁波，就产生不同颜色的光，比如蓝色光中光波的波长比红色光中光波的波长短些。<br>光波的波长用希腊字母 λ 表示，可见光的波长大概时380-740纳米，大于740纳米和小于380纳米的光波人类的眼睛就看不到了，比如紫外线或红外线，但有些动物的眼睛可以感知到。人类可见光谱如下：<br><img src=\"./spectrum1.png\" alt=\"可见光谱\"><br>白光是由所有可见光颜色组合而成的（牛顿使棱镜实验），所以拿可见光谱中所有的光，并按合适的比例进行混合就可造出白光。</p>\n<a id=\"more\"></a>\n<h3 id=\"人的睛眼\"><a href=\"#人的睛眼\" class=\"headerlink\" title=\"人的睛眼\"></a>人的睛眼</h3><p>人的睛眼视网膜上有两类主要的光感细胞，视锥细胞 和 视杆细胞。</p>\n<p>**<a target=\"_blank\" rel=\"noopener\" href=\"https://zh.wikipedia.org/wiki/%E8%A7%86%E9%94%A5%E7%BB%86%E8%83%9E\">视锥细胞（cone cell ）</a>**：主要分布在视网膜中心，视锥细胞主要负责颜色识别，并且在相对较亮的光照下更能发挥作用。</p>\n<p>**<a target=\"_blank\" rel=\"noopener\" href=\"https://zh.wikipedia.org/wiki/%E8%A7%86%E6%9D%86%E7%BB%86%E8%83%9E\">视杆细胞（rod cells）</a>**：主要分布在视网膜边上，且较视锥细胞对光更敏感，几乎主要全部用于夜视力。</p>\n<p>视锥细胞有三种（亲红，亲绿，亲蓝视色素），而且每一种都对特定的可见光范围敏感。这三种视锥细胞刚好大约分别对红色，绿色，和蓝色最为敏感，而这三种颜色也是计算机显示器构造颜色的三原色。所以说视锥细胞负责颜色识别（或者叫三原色识别）。</p>\n<h3 id=\"原色以及增减色原理\"><a href=\"#原色以及增减色原理\" class=\"headerlink\" title=\"原色以及增减色原理\"></a>原色以及增减色原理</h3><p><strong>原色有两种定义：</strong></p>\n<p><strong>1. 红色，绿色，蓝色。</strong>增色法中的原色，计算机或照明行业使用方法。</p>\n<blockquote>\n<p>因为上面提到的生理的原因（视锥细胞对红色，绿色，和蓝色最为敏感），因此使用红，绿，蓝作为三原色,这三种颜色是相互独立的，任何一种都不能使用其它二种颜色混合。使用此三原色按比例混合成其它的颜色。</p>\n<p>红色+绿色=黄色</p>\n<p>绿色+蓝色=青色</p>\n<p>红色+蓝色=品红</p>\n<p>红色+绿色+蓝色=白色</p>\n<p>黄色、青色、品红都是由两种及色相混合而成，所以它们又称相加二次色。</p>\n<p><img src=\"./Additive.png\" alt=\"增色法图\"></p>\n</blockquote>\n<p><strong>2. 黄色，品红，青色。</strong>减色法中的原色，绘画艺术方面使用此方法。</p>\n<blockquote>\n<p>在白光照射下，青色颜料能吸收红色而反射青色，黄色颜料吸收蓝色而反射黄色，品红颜料吸收绿色而反射品红<br>如下图黄色的产生。白光（红+绿+蓝）照射黄色颜料，其中的蓝色光成份被吸收，反射回红和绿色成份的光，而红色光加绿色光我们的眼睛即感知为黄色。</p>\n<p><img src=\"./yellow.png\" alt=\"减色法黄色的产生\"></p>\n<p>白色-红色=青色</p>\n<p>白色-绿色=品红</p>\n<p>白色-蓝色=黄色</p>\n<p>另外，如果把青色和黄色两种颜料混合，在白光照射下，由于颜料吸收了红色和蓝色，而反射了绿色，对于颜料的混合我们表示如下：</p>\n</blockquote>\n<blockquote>\n<p>颜料(黄色+青色)=白色-红色-蓝色=绿色</p>\n</blockquote>\n<blockquote>\n<p>颜料(品红+青色)=白色-红色-绿色=蓝色</p>\n<p>颜料(黄色+品红)=白色-绿色-蓝色=红色</p>\n<p><img src=\"./Subtractive.png\" alt=\"减色法图\"></p>\n</blockquote>\n<p>资料:</p>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://zh.wikipedia.org/wiki/%E4%B8%89%E5%8E%9F%E8%89%B2%E5%85%89%E6%A8%A1%E5%BC%8F#RGB.E9.A2.9C.E8.89.B2.E6.A8.A1.E5.9E.8B.E7.90.86.E8.AE.BA.E4.B8.8E.E5.BA.94.E7.94.A8.E7.9A.84.E5.8E.86.E5.8F.B2\">三原色光模式</a></p>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"http://www.ebaomonthly.com/window/photo/lesson/color_01.htm\">色彩原理</a></p>\n<h3 id=\"颜色的亮度\"><a href=\"#颜色的亮度\" class=\"headerlink\" title=\"颜色的亮度\"></a>颜色的亮度</h3><p>人的眼睛感受颜色的亮度是不一样的，感受有些颜色会比别的颜色亮一些，比如我们会感觉蓝色暗些，而绿色最亮。一般来说在波长555纳米到560纳米之间的颜色，人类感觉最亮。如下图：</p>\n<p><img src=\"./spectrum2.png\" alt=\"颜色的亮度\"></p>\n<p>在用色相（Hue）, 饱和度（Saturation）, 和亮度（Lightness）描述颜色的时候，就需指定这种颜色的亮度。人类眼睛对可见光颜色的亮度感觉可以用光度函数（luminosity function）来描述：</p>\n<p><img src=\"./lumfunc.png\" alt=\"光度函数\"></p>\n<h3 id=\"光谱功率分布（Spectral-Power-Distribution）\"><a href=\"#光谱功率分布（Spectral-Power-Distribution）\" class=\"headerlink\" title=\"光谱功率分布（Spectral Power Distribution）\"></a>光谱功率分布（Spectral Power Distribution）</h3><p><strong>光谱图：</strong></p>\n<p>我们周围的灯看起来都特别的白，但每一种灯都不可能等量的发出可见光谱中所有的光。荧光灯发出发出的大部分颜色的光是差不多的，但有几个波段的光特别的强。白炽灯强列的发出所有颜色的光，波长越长越强烈（这是为什么白炽灯看起起偏黄的原因），而且有大部分超出了可见光的部分，也就是产生大量的红外线。这也是为什么白炽灯会浪费电的原因。</p>\n<p><img src=\"./Fluorescentlamps.png\" alt=\"荧光灯光谱图\"> <img src=\"./Incandescentlight.png\" alt=\"白炽灯光谱图\"></p>\n<p>每一灯的的颜色成份都是独一无二的，就像人的指纹一样，这叫灯的光谱图或光谱功率分布Spectral Power Distribution（SPD）。</p>\n<p><strong>白然光：</strong> 因为我们地球就靠太阳照亮的，太阳光我们也称之为白然光（natural lighting），所以太阳的光谱图是一个特别的光谱图。因为我们眼睛经过了千万年去适应太阳光，所以如果我们造的灯的光谱能接近太阳光的光谱，我们就可以说这灯叫自然光灯，质量特别好。如果灯能一直发出类似太阳光谱的的灯，它这灯就可以叫做太阳灯了。</p>\n<p><strong>D65:</strong> 但是太阳光光谱的测定受各种因素的影响，比如我在北极测，他在喜马拉雅测，他在太平洋中央测，你在下雨天测，这样每个人测出来的太阳光光谱肯定是不一样的，这样人们对太阳光的定义就不一样了。所以国际照明委员会（International Commission on Illumination）定义了一个标准叫<strong>D65</strong>，符合欧洲、太平洋周边地区视觉颜色标准，模拟平均北天空日光，这标准大概就是北欧天气好的时候太阳光的样子。D65也叫标准日光光谱。</p>\n<blockquote>\n<p><em>ICE 还定义了其它标准比如 D50, D75等，有兴趣可看看 <a target=\"_blank\" rel=\"noopener\" href=\"https://en.wikipedia.org/wiki/Standard_illuminant\">主要标准光源资料</a></em></p>\n</blockquote>\n<h4 id=\"物体的SDP\"><a href=\"#物体的SDP\" class=\"headerlink\" title=\"物体的SDP\"></a>物体的SDP</h4><p>不仅是发光物体有独有颜色光谱曲线，不会发光的物体也有独一无二的光谱反射率曲线(spectral reflectance curve)。因为不发光的物体不发光，它会吸收部分照射它的光，并反射回未吸收的那部分，这部也会被我们看到。每一个物体都有其特别的光谱反射率曲线。如下为A（黄油），B(西红柿)，C（大白菜）的光谱反射率曲线：</p>\n<p><img src=\"./spd.png\" alt=\"光谱反射率曲线\"> </p>\n<p>国际照明委员会也定义了一个非常有用的标准 <strong>显色指数（Color Rendering Index）</strong>：光源对物体的显色能力称为显色性，是通过与同色温的参考或基准光源（白炽灯或画光）下物体外观颜色的比较。</p>\n<blockquote>\n<p>色温<br>色温有时候会用来描述颜色，就像我们会蓝色比黄色冷。这个名词原本描述的现象是，当一个物体的温度达到一定值会发出可见光，而这可见光的颜色取决于这个物体温度的大小。这个现象叫黑体辐射。太阳可看成一个黑体，它的温度大概是5700K。</p>\n</blockquote>\n<h3 id=\"什么是白色？\"><a href=\"#什么是白色？\" class=\"headerlink\" title=\"什么是白色？\"></a>什么是白色？</h3><p>当可见光谱中所有成份的光都等量时，就是标准的白色。这种光源在现实之中是不存在的，那的光谱图叫<strong>E标准光源(E illuminant)</strong>,对应ICE标准光源中的E光源。</p>\n<p><img src=\"./illuminantE.png\"></p>\n<p>学习资料：</p>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"http://www.scratchapixel.com/lessons/digital-imaging/colors/introduction\">Scratchapixel: Introduction to Light, Color and Color Space</a></p>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://developer.apple.com/library/content/documentation/GraphicsImaging/Conceptual/csintro/csintro_ovrvw/csintro_ovrvw.html#//apple_ref/doc/uid/TP30001148-CH205-BBCBDGDD\">Apple: Color: A Brief Overview</a></p>\n\n      \n    </div>\n    <footer class=\"article-footer\">\n      <a data-url=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/\" data-id=\"ckhvgc1ol0000o9gs9c4q1jrz\" data-title=\"颜色和颜色空间之颜色\" class=\"article-share-link\">Share</a>\n      \n      \n      \n  <ul class=\"article-tag-list\" itemprop=\"keywords\"><li class=\"article-tag-list-item\"><a class=\"article-tag-list-link\" href=\"/tags/Color-Space/\" rel=\"tag\">Color Space</a></li><li class=\"article-tag-list-item\"><a class=\"article-tag-list-link\" href=\"/tags/%E9%A2%9C%E8%89%B2/\" rel=\"tag\">颜色</a></li></ul>\n\n    </footer>\n  </div>\n  \n    \n<nav id=\"article-nav\">\n  \n    <a href=\"/2017/08/26/Vim%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%9F%A5%E6%89%BE%E5%92%8C%E6%9B%BF%E6%8D%A2/\" id=\"article-nav-newer\" class=\"article-nav-link-wrap\">\n      <strong class=\"article-nav-caption\">Newer</strong>\n      <div class=\"article-nav-title\">\n        \n          Vim 中使用查找和替换\n        \n      </div>\n    </a>\n  \n  \n</nav>\n\n  \n</article>\n\n\n</section>\n        \n          <aside id=\"sidebar\">\n  \n    \n  <div class=\"widget-wrap\">\n    <h3 class=\"widget-title\">Categories</h3>\n    <div class=\"widget\">\n      <ul class=\"category-list\"><li class=\"category-list-item\"><a class=\"category-list-link\" href=\"/categories/Core-Graphics/\">Core Graphics</a></li><li class=\"category-list-item\"><a class=\"category-list-link\" href=\"/categories/bash/\">bash</a></li><li class=\"category-list-item\"><a class=\"category-list-link\" href=\"/categories/vim/\">vim</a></li></ul>\n    </div>\n  </div>\n\n\n  \n    \n  <div class=\"widget-wrap\">\n    <h3 class=\"widget-title\">Tags</h3>\n    <div class=\"widget\">\n      <ul class=\"tag-list\" itemprop=\"keywords\"><li class=\"tag-list-item\"><a class=\"tag-list-link\" href=\"/tags/Color-Space/\" rel=\"tag\">Color Space</a></li><li class=\"tag-list-item\"><a class=\"tag-list-link\" href=\"/tags/scp/\" rel=\"tag\">scp</a></li><li class=\"tag-list-item\"><a class=\"tag-list-link\" href=\"/tags/ssh/\" rel=\"tag\">ssh</a></li><li class=\"tag-list-item\"><a class=\"tag-list-link\" href=\"/tags/vim/\" rel=\"tag\">vim</a></li><li class=\"tag-list-item\"><a class=\"tag-list-link\" href=\"/tags/%E9%A2%9C%E8%89%B2/\" rel=\"tag\">颜色</a></li></ul>\n    </div>\n  </div>\n\n\n  \n    \n  <div class=\"widget-wrap\">\n    <h3 class=\"widget-title\">Tag Cloud</h3>\n    <div class=\"widget tagcloud\">\n      <a href=\"/tags/Color-Space/\" style=\"font-size: 10px;\">Color Space</a> <a href=\"/tags/scp/\" style=\"font-size: 10px;\">scp</a> <a href=\"/tags/ssh/\" style=\"font-size: 10px;\">ssh</a> <a href=\"/tags/vim/\" style=\"font-size: 10px;\">vim</a> <a href=\"/tags/%E9%A2%9C%E8%89%B2/\" style=\"font-size: 10px;\">颜色</a>\n    </div>\n  </div>\n\n  \n    \n  <div class=\"widget-wrap\">\n    <h3 class=\"widget-title\">Archives</h3>\n    <div class=\"widget\">\n      <ul class=\"archive-list\"><li class=\"archive-list-item\"><a class=\"archive-list-link\" href=\"/archives/2017/08/\">August 2017</a></li></ul>\n    </div>\n  </div>\n\n\n  \n    \n  <div class=\"widget-wrap\">\n    <h3 class=\"widget-title\">Recent Posts</h3>\n    <div class=\"widget\">\n      <ul>\n        \n          <li>\n            <a href=\"/2017/08/26/SSH%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95%E5%92%8CSCP%E8%BF%9C%E7%A8%8B%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93/\">SSH远程登录和SCP远程文件传输</a>\n          </li>\n        \n          <li>\n            <a href=\"/2017/08/26/Vim%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%9F%A5%E6%89%BE%E5%92%8C%E6%9B%BF%E6%8D%A2/\">Vim 中使用查找和替换</a>\n          </li>\n        \n          <li>\n            <a href=\"/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/\">颜色和颜色空间之颜色</a>\n          </li>\n        \n      </ul>\n    </div>\n  </div>\n\n  \n</aside>\n        \n      </div>\n      <footer id=\"footer\">\n  \n  <div class=\"outer\">\n    <div id=\"footer-info\" class=\"inner\">\n      \n      &copy; 2020 John Doe<br>\n      Powered by <a href=\"https://hexo.io/\" target=\"_blank\">Hexo</a>\n    </div>\n  </div>\n</footer>\n\n    </div>\n    <nav id=\"mobile-nav\">\n  \n    <a href=\"/\" class=\"mobile-nav-link\">Home</a>\n  \n    <a href=\"/archives\" class=\"mobile-nav-link\">Archives</a>\n  \n</nav>\n    \n\n\n<script src=\"/js/jquery-3.4.1.min.js\"></script>\n\n\n\n  \n<script src=\"/fancybox/jquery.fancybox.min.js\"></script>\n\n\n\n\n<script src=\"/js/script.js\"></script>\n\n\n\n\n\n  </div>\n</body>\n</html>","source":"images/color_space/index.html","raw":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  \n  \n  <title>颜色和颜色空间之颜色 | Hut&#39;s left Blog</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n  <meta name=\"description\" content=\"白色代表学术诚实和肉体之爱的纯净；红色代表艺术激情、政治信念、血气之勇；蓝色代表在音乐和数学上的内省发现、医疗助人以及万物的基本结构；翠绿代表和自然共鸣、和技术同乐以及对受威胁生命的保护；黑色代表人类神秘的创作，这是德姆・瑞亚的民族颜色的含义。我喜欢蓝色，你喜欢绿色，人家喜欢黑色，这在日常颜色真的很简单，只需要感性的感受它的美就可以。但当我看到“颜色空间”，进而去想理解颜色的时候，发现我们对颜\">\n<meta property=\"og:type\" content=\"article\">\n<meta property=\"og:title\" content=\"颜色和颜色空间之颜色\">\n<meta property=\"og:url\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/index.html\">\n<meta property=\"og:site_name\" content=\"Hut&#39;s left Blog\">\n<meta property=\"og:description\" content=\"白色代表学术诚实和肉体之爱的纯净；红色代表艺术激情、政治信念、血气之勇；蓝色代表在音乐和数学上的内省发现、医疗助人以及万物的基本结构；翠绿代表和自然共鸣、和技术同乐以及对受威胁生命的保护；黑色代表人类神秘的创作，这是德姆・瑞亚的民族颜色的含义。我喜欢蓝色，你喜欢绿色，人家喜欢黑色，这在日常颜色真的很简单，只需要感性的感受它的美就可以。但当我看到“颜色空间”，进而去想理解颜色的时候，发现我们对颜\">\n<meta property=\"og:locale\" content=\"en_US\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/spectrum1.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/Additive.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/yellow.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/Subtractive.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/spectrum2.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/lumfunc.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/Fluorescentlamps.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/Incandescentlight.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/spd.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/illuminantE.png\">\n<meta property=\"article:published_time\" content=\"2017-08-23T02:48:18.000Z\">\n<meta property=\"article:modified_time\" content=\"2020-11-24T04:10:53.326Z\">\n<meta property=\"article:author\" content=\"John Doe\">\n<meta property=\"article:tag\" content=\"颜色\">\n<meta property=\"article:tag\" content=\"Color Space\">\n<meta name=\"twitter:card\" content=\"summary\">\n<meta name=\"twitter:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/spectrum1.png\">\n  \n    <link rel=\"alternate\" href=\"/atom.xml\" title=\"Hut's left Blog\" type=\"application/atom+xml\">\n  \n  \n    <link rel=\"shortcut icon\" href=\"/favicon.png\">\n  \n  \n    \n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/typeface-source-code-pro@0.0.71/index.min.css\">\n\n  \n  \n<link rel=\"stylesheet\" href=\"/css/style.css\">\n\n  \n    \n<link rel=\"stylesheet\" href=\"/fancybox/jquery.fancybox.min.css\">\n\n  \n<meta name=\"generator\" content=\"Hexo 5.2.0\"></head>\n\n<body>\n  <div id=\"container\">\n    <div id=\"wrap\">\n      <header id=\"header\">\n  <div id=\"banner\"></div>\n  <div id=\"header-outer\" class=\"outer\">\n    <div id=\"header-title\" class=\"inner\">\n      <h1 id=\"logo-wrap\">\n        <a href=\"/\" id=\"logo\">Hut&#39;s left Blog</a>\n      </h1>\n      \n    </div>\n    <div id=\"header-inner\" class=\"inner\">\n      <nav id=\"main-nav\">\n        <a id=\"main-nav-toggle\" class=\"nav-icon\"></a>\n        \n          <a class=\"main-nav-link\" href=\"/\">Home</a>\n        \n          <a class=\"main-nav-link\" href=\"/archives\">Archives</a>\n        \n      </nav>\n      <nav id=\"sub-nav\">\n        \n          <a id=\"nav-rss-link\" class=\"nav-icon\" href=\"/atom.xml\" title=\"RSS Feed\"></a>\n        \n        <a id=\"nav-search-btn\" class=\"nav-icon\" title=\"Search\"></a>\n      </nav>\n      <div id=\"search-form-wrap\">\n        <form action=\"//google.com/search\" method=\"get\" accept-charset=\"UTF-8\" class=\"search-form\"><input type=\"search\" name=\"q\" class=\"search-form-input\" placeholder=\"Search\"><button type=\"submit\" class=\"search-form-submit\">&#xF002;</button><input type=\"hidden\" name=\"sitesearch\" value=\"https://stoull.github.io\"></form>\n      </div>\n    </div>\n  </div>\n</header>\n\n      <div class=\"outer\">\n        <section id=\"main\"><article id=\"post-颜色和颜色空间之颜色\" class=\"h-entry article article-type-post\" itemprop=\"blogPost\" itemscope itemtype=\"https://schema.org/BlogPosting\">\n  <div class=\"article-meta\">\n    <a href=\"/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/\" class=\"article-date\">\n  <time class=\"dt-published\" datetime=\"2017-08-23T02:48:18.000Z\" itemprop=\"datePublished\">2017-08-23</time>\n</a>\n    \n  <div class=\"article-category\">\n    <a class=\"article-category-link\" href=\"/categories/Core-Graphics/\">Core Graphics</a>\n  </div>\n\n  </div>\n  <div class=\"article-inner\">\n    \n    \n      <header class=\"article-header\">\n        \n  \n    <h1 class=\"p-name article-title\" itemprop=\"headline name\">\n      颜色和颜色空间之颜色\n    </h1>\n  \n\n      </header>\n    \n    <div class=\"e-content article-entry\" itemprop=\"articleBody\">\n      \n        <!--# 颜色和颜色空间之颜色-->\n\n<p>白色代表学术诚实和肉体之爱的纯净；红色代表艺术激情、政治信念、血气之勇；蓝色代表在音乐和数学上的内省发现、医疗助人以及万物的基本结构；翠绿代表和自然共鸣、和技术同乐以及对受威胁生命的保护；黑色代表人类神秘的创作，这是德姆・瑞亚的民族颜色的含义。我喜欢蓝色，你喜欢绿色，人家喜欢黑色，这在日常颜色真的很简单，只需要感性的感受它的美就可以。但当我看到“颜色空间”，进而去想理解颜色的时候，发现我们对颜色的描述真的是很复杂，涉及到光的物理性质，以及的生理结构等方面。</p>\n<h2 id=\"什么是颜色\"><a href=\"#什么是颜色\" class=\"headerlink\" title=\"什么是颜色\"></a>什么是颜色</h2><h3 id=\"光\"><a href=\"#光\" class=\"headerlink\" title=\"光\"></a>光</h3><p>我们能看各种颜色的大千世界，一切都始于光。所要明白颜色是什么，我们先得明白光是什么东西。光有粒子性和波动性，但在研究颜色的问题上，都使用光的波动性来研究，即光是一种波，物理学上叫电磁波。由于有不同波长的电磁波，就产生不同颜色的光，比如蓝色光中光波的波长比红色光中光波的波长短些。<br>光波的波长用希腊字母 λ 表示，可见光的波长大概时380-740纳米，大于740纳米和小于380纳米的光波人类的眼睛就看不到了，比如紫外线或红外线，但有些动物的眼睛可以感知到。人类可见光谱如下：<br><img src=\"./spectrum1.png\" alt=\"可见光谱\"><br>白光是由所有可见光颜色组合而成的（牛顿使棱镜实验），所以拿可见光谱中所有的光，并按合适的比例进行混合就可造出白光。</p>\n<a id=\"more\"></a>\n<h3 id=\"人的睛眼\"><a href=\"#人的睛眼\" class=\"headerlink\" title=\"人的睛眼\"></a>人的睛眼</h3><p>人的睛眼视网膜上有两类主要的光感细胞，视锥细胞 和 视杆细胞。</p>\n<p>**<a target=\"_blank\" rel=\"noopener\" href=\"https://zh.wikipedia.org/wiki/%E8%A7%86%E9%94%A5%E7%BB%86%E8%83%9E\">视锥细胞（cone cell ）</a>**：主要分布在视网膜中心，视锥细胞主要负责颜色识别，并且在相对较亮的光照下更能发挥作用。</p>\n<p>**<a target=\"_blank\" rel=\"noopener\" href=\"https://zh.wikipedia.org/wiki/%E8%A7%86%E6%9D%86%E7%BB%86%E8%83%9E\">视杆细胞（rod cells）</a>**：主要分布在视网膜边上，且较视锥细胞对光更敏感，几乎主要全部用于夜视力。</p>\n<p>视锥细胞有三种（亲红，亲绿，亲蓝视色素），而且每一种都对特定的可见光范围敏感。这三种视锥细胞刚好大约分别对红色，绿色，和蓝色最为敏感，而这三种颜色也是计算机显示器构造颜色的三原色。所以说视锥细胞负责颜色识别（或者叫三原色识别）。</p>\n<h3 id=\"原色以及增减色原理\"><a href=\"#原色以及增减色原理\" class=\"headerlink\" title=\"原色以及增减色原理\"></a>原色以及增减色原理</h3><p><strong>原色有两种定义：</strong></p>\n<p><strong>1. 红色，绿色，蓝色。</strong>增色法中的原色，计算机或照明行业使用方法。</p>\n<blockquote>\n<p>因为上面提到的生理的原因（视锥细胞对红色，绿色，和蓝色最为敏感），因此使用红，绿，蓝作为三原色,这三种颜色是相互独立的，任何一种都不能使用其它二种颜色混合。使用此三原色按比例混合成其它的颜色。</p>\n<p>红色+绿色=黄色</p>\n<p>绿色+蓝色=青色</p>\n<p>红色+蓝色=品红</p>\n<p>红色+绿色+蓝色=白色</p>\n<p>黄色、青色、品红都是由两种及色相混合而成，所以它们又称相加二次色。</p>\n<p><img src=\"./Additive.png\" alt=\"增色法图\"></p>\n</blockquote>\n<p><strong>2. 黄色，品红，青色。</strong>减色法中的原色，绘画艺术方面使用此方法。</p>\n<blockquote>\n<p>在白光照射下，青色颜料能吸收红色而反射青色，黄色颜料吸收蓝色而反射黄色，品红颜料吸收绿色而反射品红<br>如下图黄色的产生。白光（红+绿+蓝）照射黄色颜料，其中的蓝色光成份被吸收，反射回红和绿色成份的光，而红色光加绿色光我们的眼睛即感知为黄色。</p>\n<p><img src=\"./yellow.png\" alt=\"减色法黄色的产生\"></p>\n<p>白色-红色=青色</p>\n<p>白色-绿色=品红</p>\n<p>白色-蓝色=黄色</p>\n<p>另外，如果把青色和黄色两种颜料混合，在白光照射下，由于颜料吸收了红色和蓝色，而反射了绿色，对于颜料的混合我们表示如下：</p>\n</blockquote>\n<blockquote>\n<p>颜料(黄色+青色)=白色-红色-蓝色=绿色</p>\n</blockquote>\n<blockquote>\n<p>颜料(品红+青色)=白色-红色-绿色=蓝色</p>\n<p>颜料(黄色+品红)=白色-绿色-蓝色=红色</p>\n<p><img src=\"./Subtractive.png\" alt=\"减色法图\"></p>\n</blockquote>\n<p>资料:</p>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://zh.wikipedia.org/wiki/%E4%B8%89%E5%8E%9F%E8%89%B2%E5%85%89%E6%A8%A1%E5%BC%8F#RGB.E9.A2.9C.E8.89.B2.E6.A8.A1.E5.9E.8B.E7.90.86.E8.AE.BA.E4.B8.8E.E5.BA.94.E7.94.A8.E7.9A.84.E5.8E.86.E5.8F.B2\">三原色光模式</a></p>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"http://www.ebaomonthly.com/window/photo/lesson/color_01.htm\">色彩原理</a></p>\n<h3 id=\"颜色的亮度\"><a href=\"#颜色的亮度\" class=\"headerlink\" title=\"颜色的亮度\"></a>颜色的亮度</h3><p>人的眼睛感受颜色的亮度是不一样的，感受有些颜色会比别的颜色亮一些，比如我们会感觉蓝色暗些，而绿色最亮。一般来说在波长555纳米到560纳米之间的颜色，人类感觉最亮。如下图：</p>\n<p><img src=\"./spectrum2.png\" alt=\"颜色的亮度\"></p>\n<p>在用色相（Hue）, 饱和度（Saturation）, 和亮度（Lightness）描述颜色的时候，就需指定这种颜色的亮度。人类眼睛对可见光颜色的亮度感觉可以用光度函数（luminosity function）来描述：</p>\n<p><img src=\"./lumfunc.png\" alt=\"光度函数\"></p>\n<h3 id=\"光谱功率分布（Spectral-Power-Distribution）\"><a href=\"#光谱功率分布（Spectral-Power-Distribution）\" class=\"headerlink\" title=\"光谱功率分布（Spectral Power Distribution）\"></a>光谱功率分布（Spectral Power Distribution）</h3><p><strong>光谱图：</strong></p>\n<p>我们周围的灯看起来都特别的白，但每一种灯都不可能等量的发出可见光谱中所有的光。荧光灯发出发出的大部分颜色的光是差不多的，但有几个波段的光特别的强。白炽灯强列的发出所有颜色的光，波长越长越强烈（这是为什么白炽灯看起起偏黄的原因），而且有大部分超出了可见光的部分，也就是产生大量的红外线。这也是为什么白炽灯会浪费电的原因。</p>\n<p><img src=\"./Fluorescentlamps.png\" alt=\"荧光灯光谱图\"> <img src=\"./Incandescentlight.png\" alt=\"白炽灯光谱图\"></p>\n<p>每一灯的的颜色成份都是独一无二的，就像人的指纹一样，这叫灯的光谱图或光谱功率分布Spectral Power Distribution（SPD）。</p>\n<p><strong>白然光：</strong> 因为我们地球就靠太阳照亮的，太阳光我们也称之为白然光（natural lighting），所以太阳的光谱图是一个特别的光谱图。因为我们眼睛经过了千万年去适应太阳光，所以如果我们造的灯的光谱能接近太阳光的光谱，我们就可以说这灯叫自然光灯，质量特别好。如果灯能一直发出类似太阳光谱的的灯，它这灯就可以叫做太阳灯了。</p>\n<p><strong>D65:</strong> 但是太阳光光谱的测定受各种因素的影响，比如我在北极测，他在喜马拉雅测，他在太平洋中央测，你在下雨天测，这样每个人测出来的太阳光光谱肯定是不一样的，这样人们对太阳光的定义就不一样了。所以国际照明委员会（International Commission on Illumination）定义了一个标准叫<strong>D65</strong>，符合欧洲、太平洋周边地区视觉颜色标准，模拟平均北天空日光，这标准大概就是北欧天气好的时候太阳光的样子。D65也叫标准日光光谱。</p>\n<blockquote>\n<p><em>ICE 还定义了其它标准比如 D50, D75等，有兴趣可看看 <a target=\"_blank\" rel=\"noopener\" href=\"https://en.wikipedia.org/wiki/Standard_illuminant\">主要标准光源资料</a></em></p>\n</blockquote>\n<h4 id=\"物体的SDP\"><a href=\"#物体的SDP\" class=\"headerlink\" title=\"物体的SDP\"></a>物体的SDP</h4><p>不仅是发光物体有独有颜色光谱曲线，不会发光的物体也有独一无二的光谱反射率曲线(spectral reflectance curve)。因为不发光的物体不发光，它会吸收部分照射它的光，并反射回未吸收的那部分，这部也会被我们看到。每一个物体都有其特别的光谱反射率曲线。如下为A（黄油），B(西红柿)，C（大白菜）的光谱反射率曲线：</p>\n<p><img src=\"./spd.png\" alt=\"光谱反射率曲线\"> </p>\n<p>国际照明委员会也定义了一个非常有用的标准 <strong>显色指数（Color Rendering Index）</strong>：光源对物体的显色能力称为显色性，是通过与同色温的参考或基准光源（白炽灯或画光）下物体外观颜色的比较。</p>\n<blockquote>\n<p>色温<br>色温有时候会用来描述颜色，就像我们会蓝色比黄色冷。这个名词原本描述的现象是，当一个物体的温度达到一定值会发出可见光，而这可见光的颜色取决于这个物体温度的大小。这个现象叫黑体辐射。太阳可看成一个黑体，它的温度大概是5700K。</p>\n</blockquote>\n<h3 id=\"什么是白色？\"><a href=\"#什么是白色？\" class=\"headerlink\" title=\"什么是白色？\"></a>什么是白色？</h3><p>当可见光谱中所有成份的光都等量时，就是标准的白色。这种光源在现实之中是不存在的，那的光谱图叫<strong>E标准光源(E illuminant)</strong>,对应ICE标准光源中的E光源。</p>\n<p><img src=\"./illuminantE.png\"></p>\n<p>学习资料：</p>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"http://www.scratchapixel.com/lessons/digital-imaging/colors/introduction\">Scratchapixel: Introduction to Light, Color and Color Space</a></p>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://developer.apple.com/library/content/documentation/GraphicsImaging/Conceptual/csintro/csintro_ovrvw/csintro_ovrvw.html#//apple_ref/doc/uid/TP30001148-CH205-BBCBDGDD\">Apple: Color: A Brief Overview</a></p>\n\n      \n    </div>\n    <footer class=\"article-footer\">\n      <a data-url=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/\" data-id=\"ckhvgc1ol0000o9gs9c4q1jrz\" data-title=\"颜色和颜色空间之颜色\" class=\"article-share-link\">Share</a>\n      \n      \n      \n  <ul class=\"article-tag-list\" itemprop=\"keywords\"><li class=\"article-tag-list-item\"><a class=\"article-tag-list-link\" href=\"/tags/Color-Space/\" rel=\"tag\">Color Space</a></li><li class=\"article-tag-list-item\"><a class=\"article-tag-list-link\" href=\"/tags/%E9%A2%9C%E8%89%B2/\" rel=\"tag\">颜色</a></li></ul>\n\n    </footer>\n  </div>\n  \n    \n<nav id=\"article-nav\">\n  \n    <a href=\"/2017/08/26/Vim%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%9F%A5%E6%89%BE%E5%92%8C%E6%9B%BF%E6%8D%A2/\" id=\"article-nav-newer\" class=\"article-nav-link-wrap\">\n      <strong class=\"article-nav-caption\">Newer</strong>\n      <div class=\"article-nav-title\">\n        \n          Vim 中使用查找和替换\n        \n      </div>\n    </a>\n  \n  \n</nav>\n\n  \n</article>\n\n\n</section>\n        \n          <aside id=\"sidebar\">\n  \n    \n  <div class=\"widget-wrap\">\n    <h3 class=\"widget-title\">Categories</h3>\n    <div class=\"widget\">\n      <ul class=\"category-list\"><li class=\"category-list-item\"><a class=\"category-list-link\" href=\"/categories/Core-Graphics/\">Core Graphics</a></li><li class=\"category-list-item\"><a class=\"category-list-link\" href=\"/categories/bash/\">bash</a></li><li class=\"category-list-item\"><a class=\"category-list-link\" href=\"/categories/vim/\">vim</a></li></ul>\n    </div>\n  </div>\n\n\n  \n    \n  <div class=\"widget-wrap\">\n    <h3 class=\"widget-title\">Tags</h3>\n    <div class=\"widget\">\n      <ul class=\"tag-list\" itemprop=\"keywords\"><li class=\"tag-list-item\"><a class=\"tag-list-link\" href=\"/tags/Color-Space/\" rel=\"tag\">Color Space</a></li><li class=\"tag-list-item\"><a class=\"tag-list-link\" href=\"/tags/scp/\" rel=\"tag\">scp</a></li><li class=\"tag-list-item\"><a class=\"tag-list-link\" href=\"/tags/ssh/\" rel=\"tag\">ssh</a></li><li class=\"tag-list-item\"><a class=\"tag-list-link\" href=\"/tags/vim/\" rel=\"tag\">vim</a></li><li class=\"tag-list-item\"><a class=\"tag-list-link\" href=\"/tags/%E9%A2%9C%E8%89%B2/\" rel=\"tag\">颜色</a></li></ul>\n    </div>\n  </div>\n\n\n  \n    \n  <div class=\"widget-wrap\">\n    <h3 class=\"widget-title\">Tag Cloud</h3>\n    <div class=\"widget tagcloud\">\n      <a href=\"/tags/Color-Space/\" style=\"font-size: 10px;\">Color Space</a> <a href=\"/tags/scp/\" style=\"font-size: 10px;\">scp</a> <a href=\"/tags/ssh/\" style=\"font-size: 10px;\">ssh</a> <a href=\"/tags/vim/\" style=\"font-size: 10px;\">vim</a> <a href=\"/tags/%E9%A2%9C%E8%89%B2/\" style=\"font-size: 10px;\">颜色</a>\n    </div>\n  </div>\n\n  \n    \n  <div class=\"widget-wrap\">\n    <h3 class=\"widget-title\">Archives</h3>\n    <div class=\"widget\">\n      <ul class=\"archive-list\"><li class=\"archive-list-item\"><a class=\"archive-list-link\" href=\"/archives/2017/08/\">August 2017</a></li></ul>\n    </div>\n  </div>\n\n\n  \n    \n  <div class=\"widget-wrap\">\n    <h3 class=\"widget-title\">Recent Posts</h3>\n    <div class=\"widget\">\n      <ul>\n        \n          <li>\n            <a href=\"/2017/08/26/SSH%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95%E5%92%8CSCP%E8%BF%9C%E7%A8%8B%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93/\">SSH远程登录和SCP远程文件传输</a>\n          </li>\n        \n          <li>\n            <a href=\"/2017/08/26/Vim%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%9F%A5%E6%89%BE%E5%92%8C%E6%9B%BF%E6%8D%A2/\">Vim 中使用查找和替换</a>\n          </li>\n        \n          <li>\n            <a href=\"/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/\">颜色和颜色空间之颜色</a>\n          </li>\n        \n      </ul>\n    </div>\n  </div>\n\n  \n</aside>\n        \n      </div>\n      <footer id=\"footer\">\n  \n  <div class=\"outer\">\n    <div id=\"footer-info\" class=\"inner\">\n      \n      &copy; 2020 John Doe<br>\n      Powered by <a href=\"https://hexo.io/\" target=\"_blank\">Hexo</a>\n    </div>\n  </div>\n</footer>\n\n    </div>\n    <nav id=\"mobile-nav\">\n  \n    <a href=\"/\" class=\"mobile-nav-link\">Home</a>\n  \n    <a href=\"/archives\" class=\"mobile-nav-link\">Archives</a>\n  \n</nav>\n    \n\n\n<script src=\"/js/jquery-3.4.1.min.js\"></script>\n\n\n\n  \n<script src=\"/fancybox/jquery.fancybox.min.js\"></script>\n\n\n\n\n<script src=\"/js/script.js\"></script>\n\n\n\n\n\n  </div>\n</body>\n</html>","date":"2021-10-11T06:16:30.797Z","updated":"2021-10-11T06:16:30.797Z","path":"images/color_space/index.html","title":"","comments":1,"layout":"page","_id":"cl74l5j5a00002a373ii5fnby","content":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  \n  \n  <title>颜色和颜色空间之颜色 | Hut&#39;s left Blog</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n  <meta name=\"description\" content=\"白色代表学术诚实和肉体之爱的纯净；红色代表艺术激情、政治信念、血气之勇；蓝色代表在音乐和数学上的内省发现、医疗助人以及万物的基本结构；翠绿代表和自然共鸣、和技术同乐以及对受威胁生命的保护；黑色代表人类神秘的创作，这是德姆・瑞亚的民族颜色的含义。我喜欢蓝色，你喜欢绿色，人家喜欢黑色，这在日常颜色真的很简单，只需要感性的感受它的美就可以。但当我看到“颜色空间”，进而去想理解颜色的时候，发现我们对颜\">\n<meta property=\"og:type\" content=\"article\">\n<meta property=\"og:title\" content=\"颜色和颜色空间之颜色\">\n<meta property=\"og:url\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/index.html\">\n<meta property=\"og:site_name\" content=\"Hut&#39;s left Blog\">\n<meta property=\"og:description\" content=\"白色代表学术诚实和肉体之爱的纯净；红色代表艺术激情、政治信念、血气之勇；蓝色代表在音乐和数学上的内省发现、医疗助人以及万物的基本结构；翠绿代表和自然共鸣、和技术同乐以及对受威胁生命的保护；黑色代表人类神秘的创作，这是德姆・瑞亚的民族颜色的含义。我喜欢蓝色，你喜欢绿色，人家喜欢黑色，这在日常颜色真的很简单，只需要感性的感受它的美就可以。但当我看到“颜色空间”，进而去想理解颜色的时候，发现我们对颜\">\n<meta property=\"og:locale\" content=\"en_US\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/spectrum1.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/Additive.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/yellow.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/Subtractive.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/spectrum2.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/lumfunc.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/Fluorescentlamps.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/Incandescentlight.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/spd.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/illuminantE.png\">\n<meta property=\"article:published_time\" content=\"2017-08-23T02:48:18.000Z\">\n<meta property=\"article:modified_time\" content=\"2020-11-24T04:10:53.326Z\">\n<meta property=\"article:author\" content=\"John Doe\">\n<meta property=\"article:tag\" content=\"颜色\">\n<meta property=\"article:tag\" content=\"Color Space\">\n<meta name=\"twitter:card\" content=\"summary\">\n<meta name=\"twitter:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/spectrum1.png\">\n  \n    <link rel=\"alternate\" href=\"/atom.xml\" title=\"Hut's left Blog\" type=\"application/atom+xml\">\n  \n  \n    <link rel=\"shortcut icon\" href=\"/favicon.png\">\n  \n  \n    \n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/typeface-source-code-pro@0.0.71/index.min.css\">\n\n  \n  \n<link rel=\"stylesheet\" href=\"/css/style.css\">\n\n  \n    \n<link rel=\"stylesheet\" href=\"/fancybox/jquery.fancybox.min.css\">\n\n  \n<meta name=\"generator\" content=\"Hexo 5.2.0\"></head>\n\n<body>\n  <div id=\"container\">\n    <div id=\"wrap\">\n      <header id=\"header\">\n  <div id=\"banner\"></div>\n  <div id=\"header-outer\" class=\"outer\">\n    <div id=\"header-title\" class=\"inner\">\n      <h1 id=\"logo-wrap\">\n        <a href=\"/\" id=\"logo\">Hut&#39;s left Blog</a>\n      </h1>\n      \n    </div>\n    <div id=\"header-inner\" class=\"inner\">\n      <nav id=\"main-nav\">\n        <a id=\"main-nav-toggle\" class=\"nav-icon\"></a>\n        \n          <a class=\"main-nav-link\" href=\"/\">Home</a>\n        \n          <a class=\"main-nav-link\" href=\"/archives\">Archives</a>\n        \n      </nav>\n      <nav id=\"sub-nav\">\n        \n          <a id=\"nav-rss-link\" class=\"nav-icon\" href=\"/atom.xml\" title=\"RSS Feed\"></a>\n        \n        <a id=\"nav-search-btn\" class=\"nav-icon\" title=\"Search\"></a>\n      </nav>\n      <div id=\"search-form-wrap\">\n        <form action=\"//google.com/search\" method=\"get\" accept-charset=\"UTF-8\" class=\"search-form\"><input type=\"search\" name=\"q\" class=\"search-form-input\" placeholder=\"Search\"><button type=\"submit\" class=\"search-form-submit\">&#xF002;</button><input type=\"hidden\" name=\"sitesearch\" value=\"https://stoull.github.io\"></form>\n      </div>\n    </div>\n  </div>\n</header>\n\n      <div class=\"outer\">\n        <section id=\"main\"><article id=\"post-颜色和颜色空间之颜色\" class=\"h-entry article article-type-post\" itemprop=\"blogPost\" itemscope itemtype=\"https://schema.org/BlogPosting\">\n  <div class=\"article-meta\">\n    <a href=\"/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/\" class=\"article-date\">\n  <time class=\"dt-published\" datetime=\"2017-08-23T02:48:18.000Z\" itemprop=\"datePublished\">2017-08-23</time>\n</a>\n    \n  <div class=\"article-category\">\n    <a class=\"article-category-link\" href=\"/categories/Core-Graphics/\">Core Graphics</a>\n  </div>\n\n  </div>\n  <div class=\"article-inner\">\n    \n    \n      <header class=\"article-header\">\n        \n  \n    <h1 class=\"p-name article-title\" itemprop=\"headline name\">\n      颜色和颜色空间之颜色\n    </h1>\n  \n\n      </header>\n    \n    <div class=\"e-content article-entry\" itemprop=\"articleBody\">\n      \n        <!--# 颜色和颜色空间之颜色-->\n\n<p>白色代表学术诚实和肉体之爱的纯净；红色代表艺术激情、政治信念、血气之勇；蓝色代表在音乐和数学上的内省发现、医疗助人以及万物的基本结构；翠绿代表和自然共鸣、和技术同乐以及对受威胁生命的保护；黑色代表人类神秘的创作，这是德姆・瑞亚的民族颜色的含义。我喜欢蓝色，你喜欢绿色，人家喜欢黑色，这在日常颜色真的很简单，只需要感性的感受它的美就可以。但当我看到“颜色空间”，进而去想理解颜色的时候，发现我们对颜色的描述真的是很复杂，涉及到光的物理性质，以及的生理结构等方面。</p>\n<h2 id=\"什么是颜色\"><a href=\"#什么是颜色\" class=\"headerlink\" title=\"什么是颜色\"></a>什么是颜色</h2><h3 id=\"光\"><a href=\"#光\" class=\"headerlink\" title=\"光\"></a>光</h3><p>我们能看各种颜色的大千世界，一切都始于光。所要明白颜色是什么，我们先得明白光是什么东西。光有粒子性和波动性，但在研究颜色的问题上，都使用光的波动性来研究，即光是一种波，物理学上叫电磁波。由于有不同波长的电磁波，就产生不同颜色的光，比如蓝色光中光波的波长比红色光中光波的波长短些。<br>光波的波长用希腊字母 λ 表示，可见光的波长大概时380-740纳米，大于740纳米和小于380纳米的光波人类的眼睛就看不到了，比如紫外线或红外线，但有些动物的眼睛可以感知到。人类可见光谱如下：<br><img src=\"./spectrum1.png\" alt=\"可见光谱\"><br>白光是由所有可见光颜色组合而成的（牛顿使棱镜实验），所以拿可见光谱中所有的光，并按合适的比例进行混合就可造出白光。</p>\n<a id=\"more\"></a>\n<h3 id=\"人的睛眼\"><a href=\"#人的睛眼\" class=\"headerlink\" title=\"人的睛眼\"></a>人的睛眼</h3><p>人的睛眼视网膜上有两类主要的光感细胞，视锥细胞 和 视杆细胞。</p>\n<p>**<a target=\"_blank\" rel=\"noopener\" href=\"https://zh.wikipedia.org/wiki/%E8%A7%86%E9%94%A5%E7%BB%86%E8%83%9E\">视锥细胞（cone cell ）</a>**：主要分布在视网膜中心，视锥细胞主要负责颜色识别，并且在相对较亮的光照下更能发挥作用。</p>\n<p>**<a target=\"_blank\" rel=\"noopener\" href=\"https://zh.wikipedia.org/wiki/%E8%A7%86%E6%9D%86%E7%BB%86%E8%83%9E\">视杆细胞（rod cells）</a>**：主要分布在视网膜边上，且较视锥细胞对光更敏感，几乎主要全部用于夜视力。</p>\n<p>视锥细胞有三种（亲红，亲绿，亲蓝视色素），而且每一种都对特定的可见光范围敏感。这三种视锥细胞刚好大约分别对红色，绿色，和蓝色最为敏感，而这三种颜色也是计算机显示器构造颜色的三原色。所以说视锥细胞负责颜色识别（或者叫三原色识别）。</p>\n<h3 id=\"原色以及增减色原理\"><a href=\"#原色以及增减色原理\" class=\"headerlink\" title=\"原色以及增减色原理\"></a>原色以及增减色原理</h3><p><strong>原色有两种定义：</strong></p>\n<p><strong>1. 红色，绿色，蓝色。</strong>增色法中的原色，计算机或照明行业使用方法。</p>\n<blockquote>\n<p>因为上面提到的生理的原因（视锥细胞对红色，绿色，和蓝色最为敏感），因此使用红，绿，蓝作为三原色,这三种颜色是相互独立的，任何一种都不能使用其它二种颜色混合。使用此三原色按比例混合成其它的颜色。</p>\n<p>红色+绿色=黄色</p>\n<p>绿色+蓝色=青色</p>\n<p>红色+蓝色=品红</p>\n<p>红色+绿色+蓝色=白色</p>\n<p>黄色、青色、品红都是由两种及色相混合而成，所以它们又称相加二次色。</p>\n<p><img src=\"./Additive.png\" alt=\"增色法图\"></p>\n</blockquote>\n<p><strong>2. 黄色，品红，青色。</strong>减色法中的原色，绘画艺术方面使用此方法。</p>\n<blockquote>\n<p>在白光照射下，青色颜料能吸收红色而反射青色，黄色颜料吸收蓝色而反射黄色，品红颜料吸收绿色而反射品红<br>如下图黄色的产生。白光（红+绿+蓝）照射黄色颜料，其中的蓝色光成份被吸收，反射回红和绿色成份的光，而红色光加绿色光我们的眼睛即感知为黄色。</p>\n<p><img src=\"./yellow.png\" alt=\"减色法黄色的产生\"></p>\n<p>白色-红色=青色</p>\n<p>白色-绿色=品红</p>\n<p>白色-蓝色=黄色</p>\n<p>另外，如果把青色和黄色两种颜料混合，在白光照射下，由于颜料吸收了红色和蓝色，而反射了绿色，对于颜料的混合我们表示如下：</p>\n</blockquote>\n<blockquote>\n<p>颜料(黄色+青色)=白色-红色-蓝色=绿色</p>\n</blockquote>\n<blockquote>\n<p>颜料(品红+青色)=白色-红色-绿色=蓝色</p>\n<p>颜料(黄色+品红)=白色-绿色-蓝色=红色</p>\n<p><img src=\"./Subtractive.png\" alt=\"减色法图\"></p>\n</blockquote>\n<p>资料:</p>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://zh.wikipedia.org/wiki/%E4%B8%89%E5%8E%9F%E8%89%B2%E5%85%89%E6%A8%A1%E5%BC%8F#RGB.E9.A2.9C.E8.89.B2.E6.A8.A1.E5.9E.8B.E7.90.86.E8.AE.BA.E4.B8.8E.E5.BA.94.E7.94.A8.E7.9A.84.E5.8E.86.E5.8F.B2\">三原色光模式</a></p>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"http://www.ebaomonthly.com/window/photo/lesson/color_01.htm\">色彩原理</a></p>\n<h3 id=\"颜色的亮度\"><a href=\"#颜色的亮度\" class=\"headerlink\" title=\"颜色的亮度\"></a>颜色的亮度</h3><p>人的眼睛感受颜色的亮度是不一样的，感受有些颜色会比别的颜色亮一些，比如我们会感觉蓝色暗些，而绿色最亮。一般来说在波长555纳米到560纳米之间的颜色，人类感觉最亮。如下图：</p>\n<p><img src=\"./spectrum2.png\" alt=\"颜色的亮度\"></p>\n<p>在用色相（Hue）, 饱和度（Saturation）, 和亮度（Lightness）描述颜色的时候，就需指定这种颜色的亮度。人类眼睛对可见光颜色的亮度感觉可以用光度函数（luminosity function）来描述：</p>\n<p><img src=\"./lumfunc.png\" alt=\"光度函数\"></p>\n<h3 id=\"光谱功率分布（Spectral-Power-Distribution）\"><a href=\"#光谱功率分布（Spectral-Power-Distribution）\" class=\"headerlink\" title=\"光谱功率分布（Spectral Power Distribution）\"></a>光谱功率分布（Spectral Power Distribution）</h3><p><strong>光谱图：</strong></p>\n<p>我们周围的灯看起来都特别的白，但每一种灯都不可能等量的发出可见光谱中所有的光。荧光灯发出发出的大部分颜色的光是差不多的，但有几个波段的光特别的强。白炽灯强列的发出所有颜色的光，波长越长越强烈（这是为什么白炽灯看起起偏黄的原因），而且有大部分超出了可见光的部分，也就是产生大量的红外线。这也是为什么白炽灯会浪费电的原因。</p>\n<p><img src=\"./Fluorescentlamps.png\" alt=\"荧光灯光谱图\"> <img src=\"./Incandescentlight.png\" alt=\"白炽灯光谱图\"></p>\n<p>每一灯的的颜色成份都是独一无二的，就像人的指纹一样，这叫灯的光谱图或光谱功率分布Spectral Power Distribution（SPD）。</p>\n<p><strong>白然光：</strong> 因为我们地球就靠太阳照亮的，太阳光我们也称之为白然光（natural lighting），所以太阳的光谱图是一个特别的光谱图。因为我们眼睛经过了千万年去适应太阳光，所以如果我们造的灯的光谱能接近太阳光的光谱，我们就可以说这灯叫自然光灯，质量特别好。如果灯能一直发出类似太阳光谱的的灯，它这灯就可以叫做太阳灯了。</p>\n<p><strong>D65:</strong> 但是太阳光光谱的测定受各种因素的影响，比如我在北极测，他在喜马拉雅测，他在太平洋中央测，你在下雨天测，这样每个人测出来的太阳光光谱肯定是不一样的，这样人们对太阳光的定义就不一样了。所以国际照明委员会（International Commission on Illumination）定义了一个标准叫<strong>D65</strong>，符合欧洲、太平洋周边地区视觉颜色标准，模拟平均北天空日光，这标准大概就是北欧天气好的时候太阳光的样子。D65也叫标准日光光谱。</p>\n<blockquote>\n<p><em>ICE 还定义了其它标准比如 D50, D75等，有兴趣可看看 <a target=\"_blank\" rel=\"noopener\" href=\"https://en.wikipedia.org/wiki/Standard_illuminant\">主要标准光源资料</a></em></p>\n</blockquote>\n<h4 id=\"物体的SDP\"><a href=\"#物体的SDP\" class=\"headerlink\" title=\"物体的SDP\"></a>物体的SDP</h4><p>不仅是发光物体有独有颜色光谱曲线，不会发光的物体也有独一无二的光谱反射率曲线(spectral reflectance curve)。因为不发光的物体不发光，它会吸收部分照射它的光，并反射回未吸收的那部分，这部也会被我们看到。每一个物体都有其特别的光谱反射率曲线。如下为A（黄油），B(西红柿)，C（大白菜）的光谱反射率曲线：</p>\n<p><img src=\"./spd.png\" alt=\"光谱反射率曲线\"> </p>\n<p>国际照明委员会也定义了一个非常有用的标准 <strong>显色指数（Color Rendering Index）</strong>：光源对物体的显色能力称为显色性，是通过与同色温的参考或基准光源（白炽灯或画光）下物体外观颜色的比较。</p>\n<blockquote>\n<p>色温<br>色温有时候会用来描述颜色，就像我们会蓝色比黄色冷。这个名词原本描述的现象是，当一个物体的温度达到一定值会发出可见光，而这可见光的颜色取决于这个物体温度的大小。这个现象叫黑体辐射。太阳可看成一个黑体，它的温度大概是5700K。</p>\n</blockquote>\n<h3 id=\"什么是白色？\"><a href=\"#什么是白色？\" class=\"headerlink\" title=\"什么是白色？\"></a>什么是白色？</h3><p>当可见光谱中所有成份的光都等量时，就是标准的白色。这种光源在现实之中是不存在的，那的光谱图叫<strong>E标准光源(E illuminant)</strong>,对应ICE标准光源中的E光源。</p>\n<p><img src=\"./illuminantE.png\"></p>\n<p>学习资料：</p>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"http://www.scratchapixel.com/lessons/digital-imaging/colors/introduction\">Scratchapixel: Introduction to Light, Color and Color Space</a></p>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://developer.apple.com/library/content/documentation/GraphicsImaging/Conceptual/csintro/csintro_ovrvw/csintro_ovrvw.html#//apple_ref/doc/uid/TP30001148-CH205-BBCBDGDD\">Apple: Color: A Brief Overview</a></p>\n\n      \n    </div>\n    <footer class=\"article-footer\">\n      <a data-url=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/\" data-id=\"ckhvgc1ol0000o9gs9c4q1jrz\" data-title=\"颜色和颜色空间之颜色\" class=\"article-share-link\">Share</a>\n      \n      \n      \n  <ul class=\"article-tag-list\" itemprop=\"keywords\"><li class=\"article-tag-list-item\"><a class=\"article-tag-list-link\" href=\"/tags/Color-Space/\" rel=\"tag\">Color Space</a></li><li class=\"article-tag-list-item\"><a class=\"article-tag-list-link\" href=\"/tags/%E9%A2%9C%E8%89%B2/\" rel=\"tag\">颜色</a></li></ul>\n\n    </footer>\n  </div>\n  \n    \n<nav id=\"article-nav\">\n  \n    <a href=\"/2017/08/26/Vim%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%9F%A5%E6%89%BE%E5%92%8C%E6%9B%BF%E6%8D%A2/\" id=\"article-nav-newer\" class=\"article-nav-link-wrap\">\n      <strong class=\"article-nav-caption\">Newer</strong>\n      <div class=\"article-nav-title\">\n        \n          Vim 中使用查找和替换\n        \n      </div>\n    </a>\n  \n  \n</nav>\n\n  \n</article>\n\n\n</section>\n        \n          <aside id=\"sidebar\">\n  \n    \n  <div class=\"widget-wrap\">\n    <h3 class=\"widget-title\">Categories</h3>\n    <div class=\"widget\">\n      <ul class=\"category-list\"><li class=\"category-list-item\"><a class=\"category-list-link\" href=\"/categories/Core-Graphics/\">Core Graphics</a></li><li class=\"category-list-item\"><a class=\"category-list-link\" href=\"/categories/bash/\">bash</a></li><li class=\"category-list-item\"><a class=\"category-list-link\" href=\"/categories/vim/\">vim</a></li></ul>\n    </div>\n  </div>\n\n\n  \n    \n  <div class=\"widget-wrap\">\n    <h3 class=\"widget-title\">Tags</h3>\n    <div class=\"widget\">\n      <ul class=\"tag-list\" itemprop=\"keywords\"><li class=\"tag-list-item\"><a class=\"tag-list-link\" href=\"/tags/Color-Space/\" rel=\"tag\">Color Space</a></li><li class=\"tag-list-item\"><a class=\"tag-list-link\" href=\"/tags/scp/\" rel=\"tag\">scp</a></li><li class=\"tag-list-item\"><a class=\"tag-list-link\" href=\"/tags/ssh/\" rel=\"tag\">ssh</a></li><li class=\"tag-list-item\"><a class=\"tag-list-link\" href=\"/tags/vim/\" rel=\"tag\">vim</a></li><li class=\"tag-list-item\"><a class=\"tag-list-link\" href=\"/tags/%E9%A2%9C%E8%89%B2/\" rel=\"tag\">颜色</a></li></ul>\n    </div>\n  </div>\n\n\n  \n    \n  <div class=\"widget-wrap\">\n    <h3 class=\"widget-title\">Tag Cloud</h3>\n    <div class=\"widget tagcloud\">\n      <a href=\"/tags/Color-Space/\" style=\"font-size: 10px;\">Color Space</a> <a href=\"/tags/scp/\" style=\"font-size: 10px;\">scp</a> <a href=\"/tags/ssh/\" style=\"font-size: 10px;\">ssh</a> <a href=\"/tags/vim/\" style=\"font-size: 10px;\">vim</a> <a href=\"/tags/%E9%A2%9C%E8%89%B2/\" style=\"font-size: 10px;\">颜色</a>\n    </div>\n  </div>\n\n  \n    \n  <div class=\"widget-wrap\">\n    <h3 class=\"widget-title\">Archives</h3>\n    <div class=\"widget\">\n      <ul class=\"archive-list\"><li class=\"archive-list-item\"><a class=\"archive-list-link\" href=\"/archives/2017/08/\">August 2017</a></li></ul>\n    </div>\n  </div>\n\n\n  \n    \n  <div class=\"widget-wrap\">\n    <h3 class=\"widget-title\">Recent Posts</h3>\n    <div class=\"widget\">\n      <ul>\n        \n          <li>\n            <a href=\"/2017/08/26/SSH%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95%E5%92%8CSCP%E8%BF%9C%E7%A8%8B%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93/\">SSH远程登录和SCP远程文件传输</a>\n          </li>\n        \n          <li>\n            <a href=\"/2017/08/26/Vim%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%9F%A5%E6%89%BE%E5%92%8C%E6%9B%BF%E6%8D%A2/\">Vim 中使用查找和替换</a>\n          </li>\n        \n          <li>\n            <a href=\"/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/\">颜色和颜色空间之颜色</a>\n          </li>\n        \n      </ul>\n    </div>\n  </div>\n\n  \n</aside>\n        \n      </div>\n      <footer id=\"footer\">\n  \n  <div class=\"outer\">\n    <div id=\"footer-info\" class=\"inner\">\n      \n      &copy; 2020 John Doe<br>\n      Powered by <a href=\"https://hexo.io/\" target=\"_blank\">Hexo</a>\n    </div>\n  </div>\n</footer>\n\n    </div>\n    <nav id=\"mobile-nav\">\n  \n    <a href=\"/\" class=\"mobile-nav-link\">Home</a>\n  \n    <a href=\"/archives\" class=\"mobile-nav-link\">Archives</a>\n  \n</nav>\n    \n\n\n<script src=\"/js/jquery-3.4.1.min.js\"></script>\n\n\n\n  \n<script src=\"/fancybox/jquery.fancybox.min.js\"></script>\n\n\n\n\n<script src=\"/js/script.js\"></script>\n\n\n\n\n\n  </div>\n</body>\n</html>","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  \n  \n  <title>颜色和颜色空间之颜色 | Hut&#39;s left Blog</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n  <meta name=\"description\" content=\"白色代表学术诚实和肉体之爱的纯净；红色代表艺术激情、政治信念、血气之勇；蓝色代表在音乐和数学上的内省发现、医疗助人以及万物的基本结构；翠绿代表和自然共鸣、和技术同乐以及对受威胁生命的保护；黑色代表人类神秘的创作，这是德姆・瑞亚的民族颜色的含义。我喜欢蓝色，你喜欢绿色，人家喜欢黑色，这在日常颜色真的很简单，只需要感性的感受它的美就可以。但当我看到“颜色空间”，进而去想理解颜色的时候，发现我们对颜\">\n<meta property=\"og:type\" content=\"article\">\n<meta property=\"og:title\" content=\"颜色和颜色空间之颜色\">\n<meta property=\"og:url\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/index.html\">\n<meta property=\"og:site_name\" content=\"Hut&#39;s left Blog\">\n<meta property=\"og:description\" content=\"白色代表学术诚实和肉体之爱的纯净；红色代表艺术激情、政治信念、血气之勇；蓝色代表在音乐和数学上的内省发现、医疗助人以及万物的基本结构；翠绿代表和自然共鸣、和技术同乐以及对受威胁生命的保护；黑色代表人类神秘的创作，这是德姆・瑞亚的民族颜色的含义。我喜欢蓝色，你喜欢绿色，人家喜欢黑色，这在日常颜色真的很简单，只需要感性的感受它的美就可以。但当我看到“颜色空间”，进而去想理解颜色的时候，发现我们对颜\">\n<meta property=\"og:locale\" content=\"en_US\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/spectrum1.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/Additive.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/yellow.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/Subtractive.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/spectrum2.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/lumfunc.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/Fluorescentlamps.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/Incandescentlight.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/spd.png\">\n<meta property=\"og:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/illuminantE.png\">\n<meta property=\"article:published_time\" content=\"2017-08-23T02:48:18.000Z\">\n<meta property=\"article:modified_time\" content=\"2020-11-24T04:10:53.326Z\">\n<meta property=\"article:author\" content=\"John Doe\">\n<meta property=\"article:tag\" content=\"颜色\">\n<meta property=\"article:tag\" content=\"Color Space\">\n<meta name=\"twitter:card\" content=\"summary\">\n<meta name=\"twitter:image\" content=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/spectrum1.png\">\n  \n    <link rel=\"alternate\" href=\"/atom.xml\" title=\"Hut's left Blog\" type=\"application/atom+xml\">\n  \n  \n    <link rel=\"shortcut icon\" href=\"/favicon.png\">\n  \n  \n    \n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/typeface-source-code-pro@0.0.71/index.min.css\">\n\n  \n  \n<link rel=\"stylesheet\" href=\"/css/style.css\">\n\n  \n    \n<link rel=\"stylesheet\" href=\"/fancybox/jquery.fancybox.min.css\">\n\n  \n<meta name=\"generator\" content=\"Hexo 5.2.0\"></head>\n\n<body>\n  <div id=\"container\">\n    <div id=\"wrap\">\n      <header id=\"header\">\n  <div id=\"banner\"></div>\n  <div id=\"header-outer\" class=\"outer\">\n    <div id=\"header-title\" class=\"inner\">\n      <h1 id=\"logo-wrap\">\n        <a href=\"/\" id=\"logo\">Hut&#39;s left Blog</a>\n      </h1>\n      \n    </div>\n    <div id=\"header-inner\" class=\"inner\">\n      <nav id=\"main-nav\">\n        <a id=\"main-nav-toggle\" class=\"nav-icon\"></a>\n        \n          <a class=\"main-nav-link\" href=\"/\">Home</a>\n        \n          <a class=\"main-nav-link\" href=\"/archives\">Archives</a>\n        \n      </nav>\n      <nav id=\"sub-nav\">\n        \n          <a id=\"nav-rss-link\" class=\"nav-icon\" href=\"/atom.xml\" title=\"RSS Feed\"></a>\n        \n        <a id=\"nav-search-btn\" class=\"nav-icon\" title=\"Search\"></a>\n      </nav>\n      <div id=\"search-form-wrap\">\n        <form action=\"//google.com/search\" method=\"get\" accept-charset=\"UTF-8\" class=\"search-form\"><input type=\"search\" name=\"q\" class=\"search-form-input\" placeholder=\"Search\"><button type=\"submit\" class=\"search-form-submit\">&#xF002;</button><input type=\"hidden\" name=\"sitesearch\" value=\"https://stoull.github.io\"></form>\n      </div>\n    </div>\n  </div>\n</header>\n\n      <div class=\"outer\">\n        <section id=\"main\"><article id=\"post-颜色和颜色空间之颜色\" class=\"h-entry article article-type-post\" itemprop=\"blogPost\" itemscope itemtype=\"https://schema.org/BlogPosting\">\n  <div class=\"article-meta\">\n    <a href=\"/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/\" class=\"article-date\">\n  <time class=\"dt-published\" datetime=\"2017-08-23T02:48:18.000Z\" itemprop=\"datePublished\">2017-08-23</time>\n</a>\n    \n  <div class=\"article-category\">\n    <a class=\"article-category-link\" href=\"/categories/Core-Graphics/\">Core Graphics</a>\n  </div>\n\n  </div>\n  <div class=\"article-inner\">\n    \n    \n      <header class=\"article-header\">\n        \n  \n    <h1 class=\"p-name article-title\" itemprop=\"headline name\">\n      颜色和颜色空间之颜色\n    </h1>\n  \n\n      </header>\n    \n    <div class=\"e-content article-entry\" itemprop=\"articleBody\">\n      \n        <!--# 颜色和颜色空间之颜色-->\n\n<p>白色代表学术诚实和肉体之爱的纯净；红色代表艺术激情、政治信念、血气之勇；蓝色代表在音乐和数学上的内省发现、医疗助人以及万物的基本结构；翠绿代表和自然共鸣、和技术同乐以及对受威胁生命的保护；黑色代表人类神秘的创作，这是德姆・瑞亚的民族颜色的含义。我喜欢蓝色，你喜欢绿色，人家喜欢黑色，这在日常颜色真的很简单，只需要感性的感受它的美就可以。但当我看到“颜色空间”，进而去想理解颜色的时候，发现我们对颜色的描述真的是很复杂，涉及到光的物理性质，以及的生理结构等方面。</p>\n<h2 id=\"什么是颜色\"><a href=\"#什么是颜色\" class=\"headerlink\" title=\"什么是颜色\"></a>什么是颜色</h2><h3 id=\"光\"><a href=\"#光\" class=\"headerlink\" title=\"光\"></a>光</h3><p>我们能看各种颜色的大千世界，一切都始于光。所要明白颜色是什么，我们先得明白光是什么东西。光有粒子性和波动性，但在研究颜色的问题上，都使用光的波动性来研究，即光是一种波，物理学上叫电磁波。由于有不同波长的电磁波，就产生不同颜色的光，比如蓝色光中光波的波长比红色光中光波的波长短些。<br>光波的波长用希腊字母 λ 表示，可见光的波长大概时380-740纳米，大于740纳米和小于380纳米的光波人类的眼睛就看不到了，比如紫外线或红外线，但有些动物的眼睛可以感知到。人类可见光谱如下：<br><img src=\"./spectrum1.png\" alt=\"可见光谱\"><br>白光是由所有可见光颜色组合而成的（牛顿使棱镜实验），所以拿可见光谱中所有的光，并按合适的比例进行混合就可造出白光。</p>\n<a id=\"more\"></a>\n<h3 id=\"人的睛眼\"><a href=\"#人的睛眼\" class=\"headerlink\" title=\"人的睛眼\"></a>人的睛眼</h3><p>人的睛眼视网膜上有两类主要的光感细胞，视锥细胞 和 视杆细胞。</p>\n<p>**<a target=\"_blank\" rel=\"noopener\" href=\"https://zh.wikipedia.org/wiki/%E8%A7%86%E9%94%A5%E7%BB%86%E8%83%9E\">视锥细胞（cone cell ）</a>**：主要分布在视网膜中心，视锥细胞主要负责颜色识别，并且在相对较亮的光照下更能发挥作用。</p>\n<p>**<a target=\"_blank\" rel=\"noopener\" href=\"https://zh.wikipedia.org/wiki/%E8%A7%86%E6%9D%86%E7%BB%86%E8%83%9E\">视杆细胞（rod cells）</a>**：主要分布在视网膜边上，且较视锥细胞对光更敏感，几乎主要全部用于夜视力。</p>\n<p>视锥细胞有三种（亲红，亲绿，亲蓝视色素），而且每一种都对特定的可见光范围敏感。这三种视锥细胞刚好大约分别对红色，绿色，和蓝色最为敏感，而这三种颜色也是计算机显示器构造颜色的三原色。所以说视锥细胞负责颜色识别（或者叫三原色识别）。</p>\n<h3 id=\"原色以及增减色原理\"><a href=\"#原色以及增减色原理\" class=\"headerlink\" title=\"原色以及增减色原理\"></a>原色以及增减色原理</h3><p><strong>原色有两种定义：</strong></p>\n<p><strong>1. 红色，绿色，蓝色。</strong>增色法中的原色，计算机或照明行业使用方法。</p>\n<blockquote>\n<p>因为上面提到的生理的原因（视锥细胞对红色，绿色，和蓝色最为敏感），因此使用红，绿，蓝作为三原色,这三种颜色是相互独立的，任何一种都不能使用其它二种颜色混合。使用此三原色按比例混合成其它的颜色。</p>\n<p>红色+绿色=黄色</p>\n<p>绿色+蓝色=青色</p>\n<p>红色+蓝色=品红</p>\n<p>红色+绿色+蓝色=白色</p>\n<p>黄色、青色、品红都是由两种及色相混合而成，所以它们又称相加二次色。</p>\n<p><img src=\"./Additive.png\" alt=\"增色法图\"></p>\n</blockquote>\n<p><strong>2. 黄色，品红，青色。</strong>减色法中的原色，绘画艺术方面使用此方法。</p>\n<blockquote>\n<p>在白光照射下，青色颜料能吸收红色而反射青色，黄色颜料吸收蓝色而反射黄色，品红颜料吸收绿色而反射品红<br>如下图黄色的产生。白光（红+绿+蓝）照射黄色颜料，其中的蓝色光成份被吸收，反射回红和绿色成份的光，而红色光加绿色光我们的眼睛即感知为黄色。</p>\n<p><img src=\"./yellow.png\" alt=\"减色法黄色的产生\"></p>\n<p>白色-红色=青色</p>\n<p>白色-绿色=品红</p>\n<p>白色-蓝色=黄色</p>\n<p>另外，如果把青色和黄色两种颜料混合，在白光照射下，由于颜料吸收了红色和蓝色，而反射了绿色，对于颜料的混合我们表示如下：</p>\n</blockquote>\n<blockquote>\n<p>颜料(黄色+青色)=白色-红色-蓝色=绿色</p>\n</blockquote>\n<blockquote>\n<p>颜料(品红+青色)=白色-红色-绿色=蓝色</p>\n<p>颜料(黄色+品红)=白色-绿色-蓝色=红色</p>\n<p><img src=\"./Subtractive.png\" alt=\"减色法图\"></p>\n</blockquote>\n<p>资料:</p>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://zh.wikipedia.org/wiki/%E4%B8%89%E5%8E%9F%E8%89%B2%E5%85%89%E6%A8%A1%E5%BC%8F#RGB.E9.A2.9C.E8.89.B2.E6.A8.A1.E5.9E.8B.E7.90.86.E8.AE.BA.E4.B8.8E.E5.BA.94.E7.94.A8.E7.9A.84.E5.8E.86.E5.8F.B2\">三原色光模式</a></p>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"http://www.ebaomonthly.com/window/photo/lesson/color_01.htm\">色彩原理</a></p>\n<h3 id=\"颜色的亮度\"><a href=\"#颜色的亮度\" class=\"headerlink\" title=\"颜色的亮度\"></a>颜色的亮度</h3><p>人的眼睛感受颜色的亮度是不一样的，感受有些颜色会比别的颜色亮一些，比如我们会感觉蓝色暗些，而绿色最亮。一般来说在波长555纳米到560纳米之间的颜色，人类感觉最亮。如下图：</p>\n<p><img src=\"./spectrum2.png\" alt=\"颜色的亮度\"></p>\n<p>在用色相（Hue）, 饱和度（Saturation）, 和亮度（Lightness）描述颜色的时候，就需指定这种颜色的亮度。人类眼睛对可见光颜色的亮度感觉可以用光度函数（luminosity function）来描述：</p>\n<p><img src=\"./lumfunc.png\" alt=\"光度函数\"></p>\n<h3 id=\"光谱功率分布（Spectral-Power-Distribution）\"><a href=\"#光谱功率分布（Spectral-Power-Distribution）\" class=\"headerlink\" title=\"光谱功率分布（Spectral Power Distribution）\"></a>光谱功率分布（Spectral Power Distribution）</h3><p><strong>光谱图：</strong></p>\n<p>我们周围的灯看起来都特别的白，但每一种灯都不可能等量的发出可见光谱中所有的光。荧光灯发出发出的大部分颜色的光是差不多的，但有几个波段的光特别的强。白炽灯强列的发出所有颜色的光，波长越长越强烈（这是为什么白炽灯看起起偏黄的原因），而且有大部分超出了可见光的部分，也就是产生大量的红外线。这也是为什么白炽灯会浪费电的原因。</p>\n<p><img src=\"./Fluorescentlamps.png\" alt=\"荧光灯光谱图\"> <img src=\"./Incandescentlight.png\" alt=\"白炽灯光谱图\"></p>\n<p>每一灯的的颜色成份都是独一无二的，就像人的指纹一样，这叫灯的光谱图或光谱功率分布Spectral Power Distribution（SPD）。</p>\n<p><strong>白然光：</strong> 因为我们地球就靠太阳照亮的，太阳光我们也称之为白然光（natural lighting），所以太阳的光谱图是一个特别的光谱图。因为我们眼睛经过了千万年去适应太阳光，所以如果我们造的灯的光谱能接近太阳光的光谱，我们就可以说这灯叫自然光灯，质量特别好。如果灯能一直发出类似太阳光谱的的灯，它这灯就可以叫做太阳灯了。</p>\n<p><strong>D65:</strong> 但是太阳光光谱的测定受各种因素的影响，比如我在北极测，他在喜马拉雅测，他在太平洋中央测，你在下雨天测，这样每个人测出来的太阳光光谱肯定是不一样的，这样人们对太阳光的定义就不一样了。所以国际照明委员会（International Commission on Illumination）定义了一个标准叫<strong>D65</strong>，符合欧洲、太平洋周边地区视觉颜色标准，模拟平均北天空日光，这标准大概就是北欧天气好的时候太阳光的样子。D65也叫标准日光光谱。</p>\n<blockquote>\n<p><em>ICE 还定义了其它标准比如 D50, D75等，有兴趣可看看 <a target=\"_blank\" rel=\"noopener\" href=\"https://en.wikipedia.org/wiki/Standard_illuminant\">主要标准光源资料</a></em></p>\n</blockquote>\n<h4 id=\"物体的SDP\"><a href=\"#物体的SDP\" class=\"headerlink\" title=\"物体的SDP\"></a>物体的SDP</h4><p>不仅是发光物体有独有颜色光谱曲线，不会发光的物体也有独一无二的光谱反射率曲线(spectral reflectance curve)。因为不发光的物体不发光，它会吸收部分照射它的光，并反射回未吸收的那部分，这部也会被我们看到。每一个物体都有其特别的光谱反射率曲线。如下为A（黄油），B(西红柿)，C（大白菜）的光谱反射率曲线：</p>\n<p><img src=\"./spd.png\" alt=\"光谱反射率曲线\"> </p>\n<p>国际照明委员会也定义了一个非常有用的标准 <strong>显色指数（Color Rendering Index）</strong>：光源对物体的显色能力称为显色性，是通过与同色温的参考或基准光源（白炽灯或画光）下物体外观颜色的比较。</p>\n<blockquote>\n<p>色温<br>色温有时候会用来描述颜色，就像我们会蓝色比黄色冷。这个名词原本描述的现象是，当一个物体的温度达到一定值会发出可见光，而这可见光的颜色取决于这个物体温度的大小。这个现象叫黑体辐射。太阳可看成一个黑体，它的温度大概是5700K。</p>\n</blockquote>\n<h3 id=\"什么是白色？\"><a href=\"#什么是白色？\" class=\"headerlink\" title=\"什么是白色？\"></a>什么是白色？</h3><p>当可见光谱中所有成份的光都等量时，就是标准的白色。这种光源在现实之中是不存在的，那的光谱图叫<strong>E标准光源(E illuminant)</strong>,对应ICE标准光源中的E光源。</p>\n<p><img src=\"./illuminantE.png\"></p>\n<p>学习资料：</p>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"http://www.scratchapixel.com/lessons/digital-imaging/colors/introduction\">Scratchapixel: Introduction to Light, Color and Color Space</a></p>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://developer.apple.com/library/content/documentation/GraphicsImaging/Conceptual/csintro/csintro_ovrvw/csintro_ovrvw.html#//apple_ref/doc/uid/TP30001148-CH205-BBCBDGDD\">Apple: Color: A Brief Overview</a></p>\n\n      \n    </div>\n    <footer class=\"article-footer\">\n      <a data-url=\"https://stoull.github.io/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/\" data-id=\"ckhvgc1ol0000o9gs9c4q1jrz\" data-title=\"颜色和颜色空间之颜色\" class=\"article-share-link\">Share</a>\n      \n      \n      \n  <ul class=\"article-tag-list\" itemprop=\"keywords\"><li class=\"article-tag-list-item\"><a class=\"article-tag-list-link\" href=\"/tags/Color-Space/\" rel=\"tag\">Color Space</a></li><li class=\"article-tag-list-item\"><a class=\"article-tag-list-link\" href=\"/tags/%E9%A2%9C%E8%89%B2/\" rel=\"tag\">颜色</a></li></ul>\n\n    </footer>\n  </div>\n  \n    \n<nav id=\"article-nav\">\n  \n    <a href=\"/2017/08/26/Vim%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%9F%A5%E6%89%BE%E5%92%8C%E6%9B%BF%E6%8D%A2/\" id=\"article-nav-newer\" class=\"article-nav-link-wrap\">\n      <strong class=\"article-nav-caption\">Newer</strong>\n      <div class=\"article-nav-title\">\n        \n          Vim 中使用查找和替换\n        \n      </div>\n    </a>\n  \n  \n</nav>\n\n  \n</article>\n\n\n</section>\n        \n          <aside id=\"sidebar\">\n  \n    \n  <div class=\"widget-wrap\">\n    <h3 class=\"widget-title\">Categories</h3>\n    <div class=\"widget\">\n      <ul class=\"category-list\"><li class=\"category-list-item\"><a class=\"category-list-link\" href=\"/categories/Core-Graphics/\">Core Graphics</a></li><li class=\"category-list-item\"><a class=\"category-list-link\" href=\"/categories/bash/\">bash</a></li><li class=\"category-list-item\"><a class=\"category-list-link\" href=\"/categories/vim/\">vim</a></li></ul>\n    </div>\n  </div>\n\n\n  \n    \n  <div class=\"widget-wrap\">\n    <h3 class=\"widget-title\">Tags</h3>\n    <div class=\"widget\">\n      <ul class=\"tag-list\" itemprop=\"keywords\"><li class=\"tag-list-item\"><a class=\"tag-list-link\" href=\"/tags/Color-Space/\" rel=\"tag\">Color Space</a></li><li class=\"tag-list-item\"><a class=\"tag-list-link\" href=\"/tags/scp/\" rel=\"tag\">scp</a></li><li class=\"tag-list-item\"><a class=\"tag-list-link\" href=\"/tags/ssh/\" rel=\"tag\">ssh</a></li><li class=\"tag-list-item\"><a class=\"tag-list-link\" href=\"/tags/vim/\" rel=\"tag\">vim</a></li><li class=\"tag-list-item\"><a class=\"tag-list-link\" href=\"/tags/%E9%A2%9C%E8%89%B2/\" rel=\"tag\">颜色</a></li></ul>\n    </div>\n  </div>\n\n\n  \n    \n  <div class=\"widget-wrap\">\n    <h3 class=\"widget-title\">Tag Cloud</h3>\n    <div class=\"widget tagcloud\">\n      <a href=\"/tags/Color-Space/\" style=\"font-size: 10px;\">Color Space</a> <a href=\"/tags/scp/\" style=\"font-size: 10px;\">scp</a> <a href=\"/tags/ssh/\" style=\"font-size: 10px;\">ssh</a> <a href=\"/tags/vim/\" style=\"font-size: 10px;\">vim</a> <a href=\"/tags/%E9%A2%9C%E8%89%B2/\" style=\"font-size: 10px;\">颜色</a>\n    </div>\n  </div>\n\n  \n    \n  <div class=\"widget-wrap\">\n    <h3 class=\"widget-title\">Archives</h3>\n    <div class=\"widget\">\n      <ul class=\"archive-list\"><li class=\"archive-list-item\"><a class=\"archive-list-link\" href=\"/archives/2017/08/\">August 2017</a></li></ul>\n    </div>\n  </div>\n\n\n  \n    \n  <div class=\"widget-wrap\">\n    <h3 class=\"widget-title\">Recent Posts</h3>\n    <div class=\"widget\">\n      <ul>\n        \n          <li>\n            <a href=\"/2017/08/26/SSH%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95%E5%92%8CSCP%E8%BF%9C%E7%A8%8B%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93/\">SSH远程登录和SCP远程文件传输</a>\n          </li>\n        \n          <li>\n            <a href=\"/2017/08/26/Vim%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%9F%A5%E6%89%BE%E5%92%8C%E6%9B%BF%E6%8D%A2/\">Vim 中使用查找和替换</a>\n          </li>\n        \n          <li>\n            <a href=\"/2017/08/23/%E9%A2%9C%E8%89%B2%E5%92%8C%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%B9%8B%E9%A2%9C%E8%89%B2/\">颜色和颜色空间之颜色</a>\n          </li>\n        \n      </ul>\n    </div>\n  </div>\n\n  \n</aside>\n        \n      </div>\n      <footer id=\"footer\">\n  \n  <div class=\"outer\">\n    <div id=\"footer-info\" class=\"inner\">\n      \n      &copy; 2020 John Doe<br>\n      Powered by <a href=\"https://hexo.io/\" target=\"_blank\">Hexo</a>\n    </div>\n  </div>\n</footer>\n\n    </div>\n    <nav id=\"mobile-nav\">\n  \n    <a href=\"/\" class=\"mobile-nav-link\">Home</a>\n  \n    <a href=\"/archives\" class=\"mobile-nav-link\">Archives</a>\n  \n</nav>\n    \n\n\n<script src=\"/js/jquery-3.4.1.min.js\"></script>\n\n\n\n  \n<script src=\"/fancybox/jquery.fancybox.min.js\"></script>\n\n\n\n\n<script src=\"/js/script.js\"></script>\n\n\n\n\n\n  </div>\n</body>\n</html>"},{"_content":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>野果秋天</title>\n    <style>\n              * {\n          box-sizing: border-box;\n        }\n\n        body {\n          margin: 0;\n          font-family: sans-serif;\n          background: #f5f6f7;\n        }\n\n        .header {\n          text-align: center;\n          text-transform: uppercase;\n          padding: 32px;\n          background-color: #0a0a23;\n          color: #fff;\n          border-bottom: 4px solid #fdb347;\n        }\n\n        .gallery {\n          display: flex;\n          flex-direction: row;\n          flex-wrap: wrap;\n          justify-content: center;\n          align-items: center;\n          gap: 16px;\n          max-width: 1400px;\n          margin: 0 auto;\n          padding: 20px 10px;\n        }\n\n        .gallery img {\n          width: 100%;\n          max-width: 350px;\n          height: 300px;\n          object-fit: cover;\n          border-radius: 10px;\n        }\n\n        .gallery::after {\n          content: \"\";\n          width: 350px;\n        }\n    </style>\n  </head>\n  <body>\n    <header class=\"header\">\n      <h1>秋天的野果</h1>\n    </header>\n    <div class=\"gallery\">\n      <img alt=\"\" src=\"/images/秋天野果/1.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/2.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/3.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/4.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/5.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/6.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/7.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/8.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/9.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/10.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/11.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/12.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/13.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/14.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/15.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/16.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/17.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/18.jpeg\">\n    </div>\n  </body>\n</html>","source":"HTML/秋天的野果.html","raw":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>野果秋天</title>\n    <style>\n              * {\n          box-sizing: border-box;\n        }\n\n        body {\n          margin: 0;\n          font-family: sans-serif;\n          background: #f5f6f7;\n        }\n\n        .header {\n          text-align: center;\n          text-transform: uppercase;\n          padding: 32px;\n          background-color: #0a0a23;\n          color: #fff;\n          border-bottom: 4px solid #fdb347;\n        }\n\n        .gallery {\n          display: flex;\n          flex-direction: row;\n          flex-wrap: wrap;\n          justify-content: center;\n          align-items: center;\n          gap: 16px;\n          max-width: 1400px;\n          margin: 0 auto;\n          padding: 20px 10px;\n        }\n\n        .gallery img {\n          width: 100%;\n          max-width: 350px;\n          height: 300px;\n          object-fit: cover;\n          border-radius: 10px;\n        }\n\n        .gallery::after {\n          content: \"\";\n          width: 350px;\n        }\n    </style>\n  </head>\n  <body>\n    <header class=\"header\">\n      <h1>秋天的野果</h1>\n    </header>\n    <div class=\"gallery\">\n      <img alt=\"\" src=\"/images/秋天野果/1.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/2.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/3.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/4.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/5.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/6.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/7.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/8.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/9.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/10.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/11.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/12.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/13.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/14.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/15.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/16.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/17.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/18.jpeg\">\n    </div>\n  </body>\n</html>","date":"2022-08-22T10:37:37.950Z","updated":"2022-08-22T10:37:11.865Z","path":"HTML/秋天的野果.html","_id":"cl74l5j62001q2a3788c093i9","title":"","comments":1,"layout":"page","content":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>野果秋天</title>\n    <style>\n              * {\n          box-sizing: border-box;\n        }\n\n        body {\n          margin: 0;\n          font-family: sans-serif;\n          background: #f5f6f7;\n        }\n\n        .header {\n          text-align: center;\n          text-transform: uppercase;\n          padding: 32px;\n          background-color: #0a0a23;\n          color: #fff;\n          border-bottom: 4px solid #fdb347;\n        }\n\n        .gallery {\n          display: flex;\n          flex-direction: row;\n          flex-wrap: wrap;\n          justify-content: center;\n          align-items: center;\n          gap: 16px;\n          max-width: 1400px;\n          margin: 0 auto;\n          padding: 20px 10px;\n        }\n\n        .gallery img {\n          width: 100%;\n          max-width: 350px;\n          height: 300px;\n          object-fit: cover;\n          border-radius: 10px;\n        }\n\n        .gallery::after {\n          content: \"\";\n          width: 350px;\n        }\n    </style>\n  </head>\n  <body>\n    <header class=\"header\">\n      <h1>秋天的野果</h1>\n    </header>\n    <div class=\"gallery\">\n      <img alt=\"\" src=\"/images/秋天野果/1.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/2.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/3.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/4.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/5.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/6.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/7.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/8.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/9.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/10.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/11.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/12.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/13.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/14.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/15.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/16.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/17.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/18.jpeg\">\n    </div>\n  </body>\n</html>","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>野果秋天</title>\n    <style>\n              * {\n          box-sizing: border-box;\n        }\n\n        body {\n          margin: 0;\n          font-family: sans-serif;\n          background: #f5f6f7;\n        }\n\n        .header {\n          text-align: center;\n          text-transform: uppercase;\n          padding: 32px;\n          background-color: #0a0a23;\n          color: #fff;\n          border-bottom: 4px solid #fdb347;\n        }\n\n        .gallery {\n          display: flex;\n          flex-direction: row;\n          flex-wrap: wrap;\n          justify-content: center;\n          align-items: center;\n          gap: 16px;\n          max-width: 1400px;\n          margin: 0 auto;\n          padding: 20px 10px;\n        }\n\n        .gallery img {\n          width: 100%;\n          max-width: 350px;\n          height: 300px;\n          object-fit: cover;\n          border-radius: 10px;\n        }\n\n        .gallery::after {\n          content: \"\";\n          width: 350px;\n        }\n    </style>\n  </head>\n  <body>\n    <header class=\"header\">\n      <h1>秋天的野果</h1>\n    </header>\n    <div class=\"gallery\">\n      <img alt=\"\" src=\"/images/秋天野果/1.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/2.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/3.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/4.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/5.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/6.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/7.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/8.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/9.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/10.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/11.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/12.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/13.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/14.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/15.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/16.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/17.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/18.jpeg\">\n    </div>\n  </body>\n</html>"}],"Post":[{"title":"Vim 中使用查找和替换","date":"2017-08-26T06:48:18.000Z","_content":"\n<!--# Vim 中使用查找和替换-->\n\n[出处：在 Vim 中优雅地查找和替换](http://harttle.com/2016/08/08/vim-search-in-file.html)\n\n[附：转义字符说明](#转义字符)\n\n### 查找\n\n在normal模式下按下`/`即可进入查找模式，输入要查找的字符串并按下回车。 Vim会跳转到第一个匹配。按下`n`查找下一个，按下`N`查找上一个。\n\nVim查找支持正则表达式，例如`/vim$`匹配行尾的\"vim\"。 需要查找特殊字符需要转义，例如`/vim\\$`匹配\"vim$\"。\n\n<!-- more -->\n\n> 注意查找回车应当用\\n，而替换为回车应当用\\r（相当于CR）。\n\n##### 大小写敏感查找\n在查找模式中加入\\c表示大小写不敏感查找，\\C表示大小写敏感查找。例如：\n\n`/foo\\c`\n\n将会查找所有的`\"foo\"`,`\"FOO\"`,`\"Foo\"`等字符串。\n\n#### 大小写敏感配置\nVim 默认采用大小写敏感的查找，为了方便我们常常将其配置为大小写不敏感：\n\n```\n\" 设置默认进行大小写不敏感查找\nset ignorecase\n\" 如果有一个大写字母，则切换到大小写敏感查找\nset smartcase \n```\n\n> 将上述设置粘贴到你的~/.vimrc，重新打开Vim即可生效。\n\n#### 查找当前单词\n在normal模式下按下`*`即可查找光标所在单词（word）， 要求每次出现的前后为空白字符或标点符号。例如当前为`foo`， 可以匹配`foo bar`中的foo，但不可匹配`foobar`中的`foo`。 这在查找函数名、变量名时非常有用。\n\n按下`g*`即可查找光标所在单词的字符序列，每次出现前后字符无要求。 即`foo bar`和`foobar`中的`foo`均可被匹配到。\n\n### 查找与替换\n\n:s（substitute）命令用来查找和替换字符串。语法如下：\n\n\t:{作用范围}s/{目标}/{替换}/{替换标志}\n\t\n例如`:%s/foo/bar/g`会在全局范围`(%)`查找`foo`并替换为`bar`，所有出现都会被替换（`g`）。\n\n#### 作用范围\n\n作用范围分为当前行、全文、选区等等。\n\n当前行：\n\n\t:s/foo/bar/g\n全文：\n\n\t:%s/foo/bar/g\n选区，在Visual模式下选择区域后输入:，Vim即可自动补全为` :'<,'>`。\n\n\t:'<,'>s/foo/bar/g\n2-11行：\n\n\t:5,12s/foo/bar/g\n当前行.与接下来两行`+2`：\n\n\t:.,+2s/foo/bar/g\n\t\n#### 替换标志\n\n上文中命令结尾的`g`即是替换标志之一，表示全局`global`替换（即替换目标的所有出现）。 还有很多其他有用的替换标志：\n\n空替换标志表示只替换从光标位置开始，目标的第一次出现：\n\n\t:%s/foo/bar\n`i`表示大小写不敏感查找，`I`表示大小写敏感：\n\n```\n:%s/foo/bar/i\n# 等效于模式中的\\c（不敏感）或\\C（敏感）\n:%s/foo\\c/bar\n```\n`c`表示需要确认，例如全局查找`\"foo\"`替换为`\"bar\"`并且需要确认：\n\n\t:%s/foo/bar/gc\n回车后Vim会将光标移动到每一次`\"foo\"`出现的位置，并提示\n\n\treplace with bar (y/n/a/q/l/^E/^Y)?\n按下`y`表示替换，`n`表示不替换，`a`表示替换所有，`q`表示退出查找模式， `l`表示替换当前位置并退出。`^E`与`^Y`是光标移动快捷键。\n\n\n#### 转义字符\n\n> 转义字符是这样一个字符，标志着在一个字符序列中出现在它之后的后续几个字符采取一种替代解释.\n\n> 最常见的一个例子是C程序设计语言中，用反斜线字符“\\”作为转义字符，来表示那些不可打印的ASCII控制符。在URI协议中，转义字符是百分号“%”.\n\n> 许多程序设计语言把双引号字符（\"）用作字符串的分界符。反斜线（\\）转义字符提供了两种方式来把双引号字符置入字符串中，或者是使用转义序列\\\"表示单个的\"字符本身，而不是作为字符串分界符；或者是直接开始字符\"的16进制编码值的转义序列\\x22来表示\".也可以使用8进制编码值的转义序列，如\\042.\n\n> 在Perl或者Python程序设计语言中\n\n> <pre>print \"Nancy said \"Hello World!\" to the crowd.\";</pre>\n\n> 将产生语法错误。而\n\n> <pre>print \"Nancy said \\\"Hello World!\\\" to the crowd.\";  ### example of \\\"</pre>\n\n> 将产生期望的输出结果。 另一种可选择的办法是：\n\n> <pre>print \"Nancy said \\x22Hello World!\\x22 to them.\";  ### example of \\x22</pre>\n\n> 使用双引号字符编码值的十六进制\"x22\"转义字符序列. 但是，如果运行在非ASCII计算机上，将不会产生预期的结果。\n\n\n> **vim中的转义,如：** \n\n>> 将每一行的 “apple/” 字符替换成 “apple/wukuan/”\n\n>> <pre>%s/apple\\//apple\\/wukuang\\//g</pre>\n","source":"_posts/Vim中使用查找和替换.md","raw":"---\ntitle: Vim 中使用查找和替换\ndate: 2017-08-26 14:48:18\ncategories:\n- vim\ntags:\n- vim\n---\n\n<!--# Vim 中使用查找和替换-->\n\n[出处：在 Vim 中优雅地查找和替换](http://harttle.com/2016/08/08/vim-search-in-file.html)\n\n[附：转义字符说明](#转义字符)\n\n### 查找\n\n在normal模式下按下`/`即可进入查找模式，输入要查找的字符串并按下回车。 Vim会跳转到第一个匹配。按下`n`查找下一个，按下`N`查找上一个。\n\nVim查找支持正则表达式，例如`/vim$`匹配行尾的\"vim\"。 需要查找特殊字符需要转义，例如`/vim\\$`匹配\"vim$\"。\n\n<!-- more -->\n\n> 注意查找回车应当用\\n，而替换为回车应当用\\r（相当于CR）。\n\n##### 大小写敏感查找\n在查找模式中加入\\c表示大小写不敏感查找，\\C表示大小写敏感查找。例如：\n\n`/foo\\c`\n\n将会查找所有的`\"foo\"`,`\"FOO\"`,`\"Foo\"`等字符串。\n\n#### 大小写敏感配置\nVim 默认采用大小写敏感的查找，为了方便我们常常将其配置为大小写不敏感：\n\n```\n\" 设置默认进行大小写不敏感查找\nset ignorecase\n\" 如果有一个大写字母，则切换到大小写敏感查找\nset smartcase \n```\n\n> 将上述设置粘贴到你的~/.vimrc，重新打开Vim即可生效。\n\n#### 查找当前单词\n在normal模式下按下`*`即可查找光标所在单词（word）， 要求每次出现的前后为空白字符或标点符号。例如当前为`foo`， 可以匹配`foo bar`中的foo，但不可匹配`foobar`中的`foo`。 这在查找函数名、变量名时非常有用。\n\n按下`g*`即可查找光标所在单词的字符序列，每次出现前后字符无要求。 即`foo bar`和`foobar`中的`foo`均可被匹配到。\n\n### 查找与替换\n\n:s（substitute）命令用来查找和替换字符串。语法如下：\n\n\t:{作用范围}s/{目标}/{替换}/{替换标志}\n\t\n例如`:%s/foo/bar/g`会在全局范围`(%)`查找`foo`并替换为`bar`，所有出现都会被替换（`g`）。\n\n#### 作用范围\n\n作用范围分为当前行、全文、选区等等。\n\n当前行：\n\n\t:s/foo/bar/g\n全文：\n\n\t:%s/foo/bar/g\n选区，在Visual模式下选择区域后输入:，Vim即可自动补全为` :'<,'>`。\n\n\t:'<,'>s/foo/bar/g\n2-11行：\n\n\t:5,12s/foo/bar/g\n当前行.与接下来两行`+2`：\n\n\t:.,+2s/foo/bar/g\n\t\n#### 替换标志\n\n上文中命令结尾的`g`即是替换标志之一，表示全局`global`替换（即替换目标的所有出现）。 还有很多其他有用的替换标志：\n\n空替换标志表示只替换从光标位置开始，目标的第一次出现：\n\n\t:%s/foo/bar\n`i`表示大小写不敏感查找，`I`表示大小写敏感：\n\n```\n:%s/foo/bar/i\n# 等效于模式中的\\c（不敏感）或\\C（敏感）\n:%s/foo\\c/bar\n```\n`c`表示需要确认，例如全局查找`\"foo\"`替换为`\"bar\"`并且需要确认：\n\n\t:%s/foo/bar/gc\n回车后Vim会将光标移动到每一次`\"foo\"`出现的位置，并提示\n\n\treplace with bar (y/n/a/q/l/^E/^Y)?\n按下`y`表示替换，`n`表示不替换，`a`表示替换所有，`q`表示退出查找模式， `l`表示替换当前位置并退出。`^E`与`^Y`是光标移动快捷键。\n\n\n#### 转义字符\n\n> 转义字符是这样一个字符，标志着在一个字符序列中出现在它之后的后续几个字符采取一种替代解释.\n\n> 最常见的一个例子是C程序设计语言中，用反斜线字符“\\”作为转义字符，来表示那些不可打印的ASCII控制符。在URI协议中，转义字符是百分号“%”.\n\n> 许多程序设计语言把双引号字符（\"）用作字符串的分界符。反斜线（\\）转义字符提供了两种方式来把双引号字符置入字符串中，或者是使用转义序列\\\"表示单个的\"字符本身，而不是作为字符串分界符；或者是直接开始字符\"的16进制编码值的转义序列\\x22来表示\".也可以使用8进制编码值的转义序列，如\\042.\n\n> 在Perl或者Python程序设计语言中\n\n> <pre>print \"Nancy said \"Hello World!\" to the crowd.\";</pre>\n\n> 将产生语法错误。而\n\n> <pre>print \"Nancy said \\\"Hello World!\\\" to the crowd.\";  ### example of \\\"</pre>\n\n> 将产生期望的输出结果。 另一种可选择的办法是：\n\n> <pre>print \"Nancy said \\x22Hello World!\\x22 to them.\";  ### example of \\x22</pre>\n\n> 使用双引号字符编码值的十六进制\"x22\"转义字符序列. 但是，如果运行在非ASCII计算机上，将不会产生预期的结果。\n\n\n> **vim中的转义,如：** \n\n>> 将每一行的 “apple/” 字符替换成 “apple/wukuan/”\n\n>> <pre>%s/apple\\//apple\\/wukuang\\//g</pre>\n","slug":"Vim中使用查找和替换","published":1,"updated":"2021-10-11T06:16:30.789Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl74l5j5d00012a37dpqa8o2n","content":"<!--# Vim 中使用查找和替换-->\n\n<p><a href=\"http://harttle.com/2016/08/08/vim-search-in-file.html\">出处：在 Vim 中优雅地查找和替换</a></p>\n<p><a href=\"#%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6\">附：转义字符说明</a></p>\n<h3 id=\"查找\"><a href=\"#查找\" class=\"headerlink\" title=\"查找\"></a>查找</h3><p>在normal模式下按下<code>/</code>即可进入查找模式，输入要查找的字符串并按下回车。 Vim会跳转到第一个匹配。按下<code>n</code>查找下一个，按下<code>N</code>查找上一个。</p>\n<p>Vim查找支持正则表达式，例如<code>/vim$</code>匹配行尾的”vim”。 需要查找特殊字符需要转义，例如<code>/vim\\$</code>匹配”vim$”。</p>\n<a id=\"more\"></a>\n\n<blockquote>\n<p>注意查找回车应当用\\n，而替换为回车应当用\\r（相当于CR）。</p>\n</blockquote>\n<h5 id=\"大小写敏感查找\"><a href=\"#大小写敏感查找\" class=\"headerlink\" title=\"大小写敏感查找\"></a>大小写敏感查找</h5><p>在查找模式中加入\\c表示大小写不敏感查找，\\C表示大小写敏感查找。例如：</p>\n<p><code>/foo\\c</code></p>\n<p>将会查找所有的<code>&quot;foo&quot;</code>,<code>&quot;FOO&quot;</code>,<code>&quot;Foo&quot;</code>等字符串。</p>\n<h4 id=\"大小写敏感配置\"><a href=\"#大小写敏感配置\" class=\"headerlink\" title=\"大小写敏感配置\"></a>大小写敏感配置</h4><p>Vim 默认采用大小写敏感的查找，为了方便我们常常将其配置为大小写不敏感：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot; 设置默认进行大小写不敏感查找</span><br><span class=\"line\">set ignorecase</span><br><span class=\"line\">&quot; 如果有一个大写字母，则切换到大小写敏感查找</span><br><span class=\"line\">set smartcase </span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>将上述设置粘贴到你的~/.vimrc，重新打开Vim即可生效。</p>\n</blockquote>\n<h4 id=\"查找当前单词\"><a href=\"#查找当前单词\" class=\"headerlink\" title=\"查找当前单词\"></a>查找当前单词</h4><p>在normal模式下按下<code>*</code>即可查找光标所在单词（word）， 要求每次出现的前后为空白字符或标点符号。例如当前为<code>foo</code>， 可以匹配<code>foo bar</code>中的foo，但不可匹配<code>foobar</code>中的<code>foo</code>。 这在查找函数名、变量名时非常有用。</p>\n<p>按下<code>g*</code>即可查找光标所在单词的字符序列，每次出现前后字符无要求。 即<code>foo bar</code>和<code>foobar</code>中的<code>foo</code>均可被匹配到。</p>\n<h3 id=\"查找与替换\"><a href=\"#查找与替换\" class=\"headerlink\" title=\"查找与替换\"></a>查找与替换</h3><p>:s（substitute）命令用来查找和替换字符串。语法如下：</p>\n<pre><code>:&#123;作用范围&#125;s/&#123;目标&#125;/&#123;替换&#125;/&#123;替换标志&#125;</code></pre>\n<p>例如<code>:%s/foo/bar/g</code>会在全局范围<code>(%)</code>查找<code>foo</code>并替换为<code>bar</code>，所有出现都会被替换（<code>g</code>）。</p>\n<h4 id=\"作用范围\"><a href=\"#作用范围\" class=\"headerlink\" title=\"作用范围\"></a>作用范围</h4><p>作用范围分为当前行、全文、选区等等。</p>\n<p>当前行：</p>\n<pre><code>:s/foo/bar/g</code></pre>\n<p>全文：</p>\n<pre><code>:%s/foo/bar/g</code></pre>\n<p>选区，在Visual模式下选择区域后输入:，Vim即可自动补全为<code> :&#39;&lt;,&#39;&gt;</code>。</p>\n<pre><code>:&#39;&lt;,&#39;&gt;s/foo/bar/g</code></pre>\n<p>2-11行：</p>\n<pre><code>:5,12s/foo/bar/g</code></pre>\n<p>当前行.与接下来两行<code>+2</code>：</p>\n<pre><code>:.,+2s/foo/bar/g</code></pre>\n<h4 id=\"替换标志\"><a href=\"#替换标志\" class=\"headerlink\" title=\"替换标志\"></a>替换标志</h4><p>上文中命令结尾的<code>g</code>即是替换标志之一，表示全局<code>global</code>替换（即替换目标的所有出现）。 还有很多其他有用的替换标志：</p>\n<p>空替换标志表示只替换从光标位置开始，目标的第一次出现：</p>\n<pre><code>:%s/foo/bar</code></pre>\n<p><code>i</code>表示大小写不敏感查找，<code>I</code>表示大小写敏感：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:%s&#x2F;foo&#x2F;bar&#x2F;i</span><br><span class=\"line\"># 等效于模式中的\\c（不敏感）或\\C（敏感）</span><br><span class=\"line\">:%s&#x2F;foo\\c&#x2F;bar</span><br></pre></td></tr></table></figure>\n<p><code>c</code>表示需要确认，例如全局查找<code>&quot;foo&quot;</code>替换为<code>&quot;bar&quot;</code>并且需要确认：</p>\n<pre><code>:%s/foo/bar/gc</code></pre>\n<p>回车后Vim会将光标移动到每一次<code>&quot;foo&quot;</code>出现的位置，并提示</p>\n<pre><code>replace with bar (y/n/a/q/l/^E/^Y)?</code></pre>\n<p>按下<code>y</code>表示替换，<code>n</code>表示不替换，<code>a</code>表示替换所有，<code>q</code>表示退出查找模式， <code>l</code>表示替换当前位置并退出。<code>^E</code>与<code>^Y</code>是光标移动快捷键。</p>\n<h4 id=\"转义字符\"><a href=\"#转义字符\" class=\"headerlink\" title=\"转义字符\"></a>转义字符</h4><blockquote>\n<p>转义字符是这样一个字符，标志着在一个字符序列中出现在它之后的后续几个字符采取一种替代解释.</p>\n</blockquote>\n<blockquote>\n<p>最常见的一个例子是C程序设计语言中，用反斜线字符“\\”作为转义字符，来表示那些不可打印的ASCII控制符。在URI协议中，转义字符是百分号“%”.</p>\n</blockquote>\n<blockquote>\n<p>许多程序设计语言把双引号字符（”）用作字符串的分界符。反斜线（\\）转义字符提供了两种方式来把双引号字符置入字符串中，或者是使用转义序列&quot;表示单个的”字符本身，而不是作为字符串分界符；或者是直接开始字符”的16进制编码值的转义序列\\x22来表示”.也可以使用8进制编码值的转义序列，如\\042.</p>\n</blockquote>\n<blockquote>\n<p>在Perl或者Python程序设计语言中</p>\n</blockquote>\n<blockquote>\n<pre>print \"Nancy said \"Hello World!\" to the crowd.\";</pre>\n</blockquote>\n<blockquote>\n<p>将产生语法错误。而</p>\n</blockquote>\n<blockquote>\n<pre>print \"Nancy said \\\"Hello World!\\\" to the crowd.\";  ### example of \\\"</pre>\n</blockquote>\n<blockquote>\n<p>将产生期望的输出结果。 另一种可选择的办法是：</p>\n</blockquote>\n<blockquote>\n<pre>print \"Nancy said \\x22Hello World!\\x22 to them.\";  ### example of \\x22</pre>\n</blockquote>\n<blockquote>\n<p>使用双引号字符编码值的十六进制”x22”转义字符序列. 但是，如果运行在非ASCII计算机上，将不会产生预期的结果。</p>\n</blockquote>\n<blockquote>\n<p><strong>vim中的转义,如：</strong> </p>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>将每一行的 “apple/” 字符替换成 “apple/wukuan/”</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<pre>%s/apple\\//apple\\/wukuang\\//g</pre>\n</blockquote>\n</blockquote>\n","site":{"data":{}},"excerpt":"<!--# Vim 中使用查找和替换-->\n\n<p><a href=\"http://harttle.com/2016/08/08/vim-search-in-file.html\">出处：在 Vim 中优雅地查找和替换</a></p>\n<p><a href=\"#%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6\">附：转义字符说明</a></p>\n<h3 id=\"查找\"><a href=\"#查找\" class=\"headerlink\" title=\"查找\"></a>查找</h3><p>在normal模式下按下<code>/</code>即可进入查找模式，输入要查找的字符串并按下回车。 Vim会跳转到第一个匹配。按下<code>n</code>查找下一个，按下<code>N</code>查找上一个。</p>\n<p>Vim查找支持正则表达式，例如<code>/vim$</code>匹配行尾的”vim”。 需要查找特殊字符需要转义，例如<code>/vim\\$</code>匹配”vim$”。</p>","more":"<blockquote>\n<p>注意查找回车应当用\\n，而替换为回车应当用\\r（相当于CR）。</p>\n</blockquote>\n<h5 id=\"大小写敏感查找\"><a href=\"#大小写敏感查找\" class=\"headerlink\" title=\"大小写敏感查找\"></a>大小写敏感查找</h5><p>在查找模式中加入\\c表示大小写不敏感查找，\\C表示大小写敏感查找。例如：</p>\n<p><code>/foo\\c</code></p>\n<p>将会查找所有的<code>&quot;foo&quot;</code>,<code>&quot;FOO&quot;</code>,<code>&quot;Foo&quot;</code>等字符串。</p>\n<h4 id=\"大小写敏感配置\"><a href=\"#大小写敏感配置\" class=\"headerlink\" title=\"大小写敏感配置\"></a>大小写敏感配置</h4><p>Vim 默认采用大小写敏感的查找，为了方便我们常常将其配置为大小写不敏感：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot; 设置默认进行大小写不敏感查找</span><br><span class=\"line\">set ignorecase</span><br><span class=\"line\">&quot; 如果有一个大写字母，则切换到大小写敏感查找</span><br><span class=\"line\">set smartcase </span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>将上述设置粘贴到你的~/.vimrc，重新打开Vim即可生效。</p>\n</blockquote>\n<h4 id=\"查找当前单词\"><a href=\"#查找当前单词\" class=\"headerlink\" title=\"查找当前单词\"></a>查找当前单词</h4><p>在normal模式下按下<code>*</code>即可查找光标所在单词（word）， 要求每次出现的前后为空白字符或标点符号。例如当前为<code>foo</code>， 可以匹配<code>foo bar</code>中的foo，但不可匹配<code>foobar</code>中的<code>foo</code>。 这在查找函数名、变量名时非常有用。</p>\n<p>按下<code>g*</code>即可查找光标所在单词的字符序列，每次出现前后字符无要求。 即<code>foo bar</code>和<code>foobar</code>中的<code>foo</code>均可被匹配到。</p>\n<h3 id=\"查找与替换\"><a href=\"#查找与替换\" class=\"headerlink\" title=\"查找与替换\"></a>查找与替换</h3><p>:s（substitute）命令用来查找和替换字符串。语法如下：</p>\n<pre><code>:&#123;作用范围&#125;s/&#123;目标&#125;/&#123;替换&#125;/&#123;替换标志&#125;</code></pre>\n<p>例如<code>:%s/foo/bar/g</code>会在全局范围<code>(%)</code>查找<code>foo</code>并替换为<code>bar</code>，所有出现都会被替换（<code>g</code>）。</p>\n<h4 id=\"作用范围\"><a href=\"#作用范围\" class=\"headerlink\" title=\"作用范围\"></a>作用范围</h4><p>作用范围分为当前行、全文、选区等等。</p>\n<p>当前行：</p>\n<pre><code>:s/foo/bar/g</code></pre>\n<p>全文：</p>\n<pre><code>:%s/foo/bar/g</code></pre>\n<p>选区，在Visual模式下选择区域后输入:，Vim即可自动补全为<code> :&#39;&lt;,&#39;&gt;</code>。</p>\n<pre><code>:&#39;&lt;,&#39;&gt;s/foo/bar/g</code></pre>\n<p>2-11行：</p>\n<pre><code>:5,12s/foo/bar/g</code></pre>\n<p>当前行.与接下来两行<code>+2</code>：</p>\n<pre><code>:.,+2s/foo/bar/g</code></pre>\n<h4 id=\"替换标志\"><a href=\"#替换标志\" class=\"headerlink\" title=\"替换标志\"></a>替换标志</h4><p>上文中命令结尾的<code>g</code>即是替换标志之一，表示全局<code>global</code>替换（即替换目标的所有出现）。 还有很多其他有用的替换标志：</p>\n<p>空替换标志表示只替换从光标位置开始，目标的第一次出现：</p>\n<pre><code>:%s/foo/bar</code></pre>\n<p><code>i</code>表示大小写不敏感查找，<code>I</code>表示大小写敏感：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:%s&#x2F;foo&#x2F;bar&#x2F;i</span><br><span class=\"line\"># 等效于模式中的\\c（不敏感）或\\C（敏感）</span><br><span class=\"line\">:%s&#x2F;foo\\c&#x2F;bar</span><br></pre></td></tr></table></figure>\n<p><code>c</code>表示需要确认，例如全局查找<code>&quot;foo&quot;</code>替换为<code>&quot;bar&quot;</code>并且需要确认：</p>\n<pre><code>:%s/foo/bar/gc</code></pre>\n<p>回车后Vim会将光标移动到每一次<code>&quot;foo&quot;</code>出现的位置，并提示</p>\n<pre><code>replace with bar (y/n/a/q/l/^E/^Y)?</code></pre>\n<p>按下<code>y</code>表示替换，<code>n</code>表示不替换，<code>a</code>表示替换所有，<code>q</code>表示退出查找模式， <code>l</code>表示替换当前位置并退出。<code>^E</code>与<code>^Y</code>是光标移动快捷键。</p>\n<h4 id=\"转义字符\"><a href=\"#转义字符\" class=\"headerlink\" title=\"转义字符\"></a>转义字符</h4><blockquote>\n<p>转义字符是这样一个字符，标志着在一个字符序列中出现在它之后的后续几个字符采取一种替代解释.</p>\n</blockquote>\n<blockquote>\n<p>最常见的一个例子是C程序设计语言中，用反斜线字符“\\”作为转义字符，来表示那些不可打印的ASCII控制符。在URI协议中，转义字符是百分号“%”.</p>\n</blockquote>\n<blockquote>\n<p>许多程序设计语言把双引号字符（”）用作字符串的分界符。反斜线（\\）转义字符提供了两种方式来把双引号字符置入字符串中，或者是使用转义序列&quot;表示单个的”字符本身，而不是作为字符串分界符；或者是直接开始字符”的16进制编码值的转义序列\\x22来表示”.也可以使用8进制编码值的转义序列，如\\042.</p>\n</blockquote>\n<blockquote>\n<p>在Perl或者Python程序设计语言中</p>\n</blockquote>\n<blockquote>\n<pre>print \"Nancy said \"Hello World!\" to the crowd.\";</pre>\n</blockquote>\n<blockquote>\n<p>将产生语法错误。而</p>\n</blockquote>\n<blockquote>\n<pre>print \"Nancy said \\\"Hello World!\\\" to the crowd.\";  ### example of \\\"</pre>\n</blockquote>\n<blockquote>\n<p>将产生期望的输出结果。 另一种可选择的办法是：</p>\n</blockquote>\n<blockquote>\n<pre>print \"Nancy said \\x22Hello World!\\x22 to them.\";  ### example of \\x22</pre>\n</blockquote>\n<blockquote>\n<p>使用双引号字符编码值的十六进制”x22”转义字符序列. 但是，如果运行在非ASCII计算机上，将不会产生预期的结果。</p>\n</blockquote>\n<blockquote>\n<p><strong>vim中的转义,如：</strong> </p>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>将每一行的 “apple/” 字符替换成 “apple/wukuan/”</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<pre>%s/apple\\//apple\\/wukuang\\//g</pre>\n</blockquote>\n</blockquote>"},{"title":"Mac上读写NTFS","date":"2022-01-04T12:36:00.000Z","_content":"\n<!--# Mac上读写NTFS -->\n\n## 方案一 使用macFUSE\n1. 下载并安装最新的mac版FUSE [http://osxfuse.github.io. ](http://osxfuse.github.io)\n这个步骤需要重启mac，安装后打开设置app, 在最底部可以找到`macFUSE`,能找到就可以\n\n2. 使用HomeBrew 安装 `NTFS-3G`\n>`brew tap gromgit/homebrew-fuse`\n`brew install ntfs-3g-mac`\n\n<!-- more -->\n\n3. 手动挂载NTFS. **注意：将disk4s2更换为对应的分区**\n> 1. 使用`diskutil list`查看分区信息\n> 2. 如果NTFS磁盘已被系统自动挂载，先卸载对应的磁盘分区\n> `sudo diskutil unmount /dev/disk4s2`\t(或手动推出，如将桌面上的磁盘拉到垃圾桶)\n> 3. 新建一个目录用来挂载磁盘(这个文件夹在硬盘弹出后，会被移除)\n> `sudo mkdir /Volumes/NTFS`\n> 4. 以读写模式挂载NTFS 磁盘\n> `sudo /usr/local/bin/ntfs-3g /dev/disk2s1 /Volumes/NTFS -o local -o allow_other -o auto_xattr -o auto_cache`\n> 或者 `sudo /usr/local/sbin/mount_ntfs /dev/disk4s2 /Volumes/NTFS`\n\n这样就会挂载一个名为NTFS的磁盘，可进行读写操作，使用`mount`查看对应的信息为：\n`/dev/disk4s2 on /Volumes/NTFS (macfuse, local, synchronous, noatime)`\n\n4. 卸载\n`sudo diskutil unmount /dev/disk4s2`\n\n## 方案二 使用Boot Camp Assistant安装windows系统\n> 用Boot Camp Assistant在mac安装一个windows系统，这样就可以读写NTFS了","source":"_posts/在Mac上读写NTFS.md","raw":"---\ntitle: Mac上读写NTFS\ndate: 2022-01-04 20:36:00\ncategories:\n- Mac\ntags:\n- Mac\n- NTFS\n---\n\n<!--# Mac上读写NTFS -->\n\n## 方案一 使用macFUSE\n1. 下载并安装最新的mac版FUSE [http://osxfuse.github.io. ](http://osxfuse.github.io)\n这个步骤需要重启mac，安装后打开设置app, 在最底部可以找到`macFUSE`,能找到就可以\n\n2. 使用HomeBrew 安装 `NTFS-3G`\n>`brew tap gromgit/homebrew-fuse`\n`brew install ntfs-3g-mac`\n\n<!-- more -->\n\n3. 手动挂载NTFS. **注意：将disk4s2更换为对应的分区**\n> 1. 使用`diskutil list`查看分区信息\n> 2. 如果NTFS磁盘已被系统自动挂载，先卸载对应的磁盘分区\n> `sudo diskutil unmount /dev/disk4s2`\t(或手动推出，如将桌面上的磁盘拉到垃圾桶)\n> 3. 新建一个目录用来挂载磁盘(这个文件夹在硬盘弹出后，会被移除)\n> `sudo mkdir /Volumes/NTFS`\n> 4. 以读写模式挂载NTFS 磁盘\n> `sudo /usr/local/bin/ntfs-3g /dev/disk2s1 /Volumes/NTFS -o local -o allow_other -o auto_xattr -o auto_cache`\n> 或者 `sudo /usr/local/sbin/mount_ntfs /dev/disk4s2 /Volumes/NTFS`\n\n这样就会挂载一个名为NTFS的磁盘，可进行读写操作，使用`mount`查看对应的信息为：\n`/dev/disk4s2 on /Volumes/NTFS (macfuse, local, synchronous, noatime)`\n\n4. 卸载\n`sudo diskutil unmount /dev/disk4s2`\n\n## 方案二 使用Boot Camp Assistant安装windows系统\n> 用Boot Camp Assistant在mac安装一个windows系统，这样就可以读写NTFS了","slug":"在Mac上读写NTFS","published":1,"updated":"2022-07-06T12:35:11.929Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl74l5j5g00022a373c991eqx","content":"<!--# Mac上读写NTFS -->\n\n<h2 id=\"方案一-使用macFUSE\"><a href=\"#方案一-使用macFUSE\" class=\"headerlink\" title=\"方案一 使用macFUSE\"></a>方案一 使用macFUSE</h2><ol>\n<li><p>下载并安装最新的mac版FUSE <a href=\"http://osxfuse.github.io/\">http://osxfuse.github.io. </a><br>这个步骤需要重启mac，安装后打开设置app, 在最底部可以找到<code>macFUSE</code>,能找到就可以</p>\n</li>\n<li><p>使用HomeBrew 安装 <code>NTFS-3G</code></p>\n<blockquote>\n<p><code>brew tap gromgit/homebrew-fuse</code><br><code>brew install ntfs-3g-mac</code></p>\n</blockquote>\n</li>\n</ol>\n<a id=\"more\"></a>\n\n<ol start=\"3\">\n<li>手动挂载NTFS. <strong>注意：将disk4s2更换为对应的分区</strong><blockquote>\n<ol>\n<li>使用<code>diskutil list</code>查看分区信息</li>\n<li>如果NTFS磁盘已被系统自动挂载，先卸载对应的磁盘分区<br><code>sudo diskutil unmount /dev/disk4s2</code>    (或手动推出，如将桌面上的磁盘拉到垃圾桶)</li>\n<li>新建一个目录用来挂载磁盘(这个文件夹在硬盘弹出后，会被移除)<br><code>sudo mkdir /Volumes/NTFS</code></li>\n<li>以读写模式挂载NTFS 磁盘<br><code>sudo /usr/local/bin/ntfs-3g /dev/disk2s1 /Volumes/NTFS -o local -o allow_other -o auto_xattr -o auto_cache</code><br>或者 <code>sudo /usr/local/sbin/mount_ntfs /dev/disk4s2 /Volumes/NTFS</code></li>\n</ol>\n</blockquote>\n</li>\n</ol>\n<p>这样就会挂载一个名为NTFS的磁盘，可进行读写操作，使用<code>mount</code>查看对应的信息为：<br><code>/dev/disk4s2 on /Volumes/NTFS (macfuse, local, synchronous, noatime)</code></p>\n<ol start=\"4\">\n<li>卸载<br><code>sudo diskutil unmount /dev/disk4s2</code></li>\n</ol>\n<h2 id=\"方案二-使用Boot-Camp-Assistant安装windows系统\"><a href=\"#方案二-使用Boot-Camp-Assistant安装windows系统\" class=\"headerlink\" title=\"方案二 使用Boot Camp Assistant安装windows系统\"></a>方案二 使用Boot Camp Assistant安装windows系统</h2><blockquote>\n<p>用Boot Camp Assistant在mac安装一个windows系统，这样就可以读写NTFS了</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<!--# Mac上读写NTFS -->\n\n<h2 id=\"方案一-使用macFUSE\"><a href=\"#方案一-使用macFUSE\" class=\"headerlink\" title=\"方案一 使用macFUSE\"></a>方案一 使用macFUSE</h2><ol>\n<li><p>下载并安装最新的mac版FUSE <a href=\"http://osxfuse.github.io/\">http://osxfuse.github.io. </a><br>这个步骤需要重启mac，安装后打开设置app, 在最底部可以找到<code>macFUSE</code>,能找到就可以</p>\n</li>\n<li><p>使用HomeBrew 安装 <code>NTFS-3G</code></p>\n<blockquote>\n<p><code>brew tap gromgit/homebrew-fuse</code><br><code>brew install ntfs-3g-mac</code></p>\n</blockquote>\n</li>\n</ol>","more":"<ol start=\"3\">\n<li>手动挂载NTFS. <strong>注意：将disk4s2更换为对应的分区</strong><blockquote>\n<ol>\n<li>使用<code>diskutil list</code>查看分区信息</li>\n<li>如果NTFS磁盘已被系统自动挂载，先卸载对应的磁盘分区<br><code>sudo diskutil unmount /dev/disk4s2</code>    (或手动推出，如将桌面上的磁盘拉到垃圾桶)</li>\n<li>新建一个目录用来挂载磁盘(这个文件夹在硬盘弹出后，会被移除)<br><code>sudo mkdir /Volumes/NTFS</code></li>\n<li>以读写模式挂载NTFS 磁盘<br><code>sudo /usr/local/bin/ntfs-3g /dev/disk2s1 /Volumes/NTFS -o local -o allow_other -o auto_xattr -o auto_cache</code><br>或者 <code>sudo /usr/local/sbin/mount_ntfs /dev/disk4s2 /Volumes/NTFS</code></li>\n</ol>\n</blockquote>\n</li>\n</ol>\n<p>这样就会挂载一个名为NTFS的磁盘，可进行读写操作，使用<code>mount</code>查看对应的信息为：<br><code>/dev/disk4s2 on /Volumes/NTFS (macfuse, local, synchronous, noatime)</code></p>\n<ol start=\"4\">\n<li>卸载<br><code>sudo diskutil unmount /dev/disk4s2</code></li>\n</ol>\n<h2 id=\"方案二-使用Boot-Camp-Assistant安装windows系统\"><a href=\"#方案二-使用Boot-Camp-Assistant安装windows系统\" class=\"headerlink\" title=\"方案二 使用Boot Camp Assistant安装windows系统\"></a>方案二 使用Boot Camp Assistant安装windows系统</h2><blockquote>\n<p>用Boot Camp Assistant在mac安装一个windows系统，这样就可以读写NTFS了</p>\n</blockquote>"},{"title":"平面波动方程实现线条波动效果","date":"2016-05-27T06:38:18.000Z","_content":"\n\n前两天看到一个水波的动画图，形如下面这样子，突然波动方程在记忆深处就复活了。发现这个方程可以很好玩，虽然只是二维的，但还是分享给大家。\n![waveWater.gif](/images/平面波动方程实现线条波动效果/waveWater.gif)\n\n#### * 波动方程的推导\n已知波源A的振动方程：y=Acos(ωt+φA⁡)。假设波沿x轴正方向传播速率记为u,沿x轴负方向传播速率记为V。以O点为坐标原点，A点的坐标为Xa，以水平向右为x轴的正方向建立坐标系。\n<!-- more -->\n当波沿x轴正方向传播的时候，如下图所示，在x轴正方向上任取一点P，与o点相距Xp。当得波向右传播时，P点的振动落后于A点，落后的相位为ω (Xp-Xa)/u。可得P点在任意时刻t的位移：y=Acos[ωt-ω (Xp-Xa)/u+φa]= Acos[ωt- ω Xp/u+(φa+ ω Xa/u)]。可参考:[如何求解平面简谐波的波动方程](http://www.docin.com/p-436791991.html )。\n\n![沿x轴方向传播的平面简谐波](/images/平面波动方程实现线条波动效果/harmonic.png)\n\n得到的这个方程叫平面简谐波动方程，形如：\n> \ny=Acos[ωt- ω Xp/u+(φa+ ω Xa/u)]\n\n它能描述任意时刻任意点在Y轴方向上的位移y。加上一个微分的思想，取一个X+dx值,然后计算出对应的y值，将这些n个y值连成一条线就是任意时刻的波形图。当t在流逝的时候这个波形图不断的在重画，就形成了一个波动图了！在代码前先分析一下这个方程：**y=Acos[ωt- ω Xp/u+(φa+ ω Xa/u)]**\n#### * 方程的物理意义\n> \n* y是y坐标的位置，也就是我们要计算点的y值\n* A是振幅，就这个波振动幅度的大小\n* ω是频率，可以理解为是振动的快慢，ω ＝ 2 / T（T是周期）\n* t就是时间了，时间是均匀（绝对时空观）往前走的\n* u描述的是波的传播速率，波速＝波长/周期\n* φa描述的波源的初相位，在图上看就是这个点是在x轴（φa＝0）上开始振动，还是在x轴上多少或下多少（cosφa）的地方开始振动。\n\n只是为了实现这种效果，我们就利用最简单的简谐波了。此时：\n> \n* 波的初相为φa ＝ 0\n* 波源就在Xa处，即Xa ＝ 0\n\n此时波动方程就变成了:\n#### * 最简方程\n> y=Acos(ωt- ω Xp/u)\n\n是不是简单了好多！这样再设两个变量，一个是周期T和波长K，根据 “波速＝波长/周期(u = K / T)” 和 ω ＝ 2π / T。波动方程就可以推导成这个：\n> \ny = Acos2π(t/T - Xp/K)\n\n这样代码的样子就出来了，忍不住开始代码了吧！\n#### *代码实现\n利用Quartz2D就可以简单实现，用一个UIView来实现，命名为WaveView（所有代码都在WaveView.m文件里面）。\n设置波的基本属性：\n\n```\n@interface WaveView ()\n{\n    CGFloat screenWidth;\n    \n    float A;    // 振幅\n    float t;    // 时间变量\n    \n    float T;    // 周期\n    float K;    // 波长\n}\n@end\n\n```\n在init方法里面初始化波的基本属性值：\n\n```\n- (id)initWithFrame:(CGRect)frame\n{\n    self = [super initWithFrame:frame];\n    if (self) {\n        \n        // 设置波的基本属性（）\n        A = 6;\n        t = 0;\n        T = 1.0;\n        K = 80;\n        \n        [self setBackgroundColor:[UIColor clearColor]];\n        \n        // 设置刷新图像的频率，0.3秒人眼就很难分辨出来了\n        [NSTimer scheduledTimerWithTimeInterval:0.03 target:self selector:@selector(animateWave) userInfo:nil repeats:YES];\n    }\n    return self;\n}\n```\n启动动画：\n\n```\n-(void)animateWave\n{\n    // 这里是时间机器，如果和刷新图像的时间间隔一样，那么就是正常时间的速度\n    // 如果大于刷新时间间隔，那么时间就走的很快，是平常的多少倍自己去计算\n    // 如果小于刷新时间间隔，那么时间就走的慢\n    \n    t+=0.05; // 这里比实际时间快\n    \n    [self setNeedsDisplay];\n    \n```\n\n动画算法的实现：\n\n```\n- (void)drawRect:(CGRect)rect\n{\n    CGContextRef context = UIGraphicsGetCurrentContext();\n    CGMutablePathRef path = CGPathCreateMutable();\n    CGContextSetLineWidth(context, 2);\n    CGContextSetStrokeColorWithColor(context, [[UIColor blackColor] CGColor]);\n    float y=axleXOnScreenHeight;\n    CGPathMoveToPoint(path, NULL, 0, y);\n    \n    // 这是将x轴微分单位为1pt，就是每隔1pt计算一个y值，将所有的y值连起来就是一个波图\n    // 可以将微分单位设置大一点，有不一样的效果\n    // y 值的计算就用推导出来的公式：y = Acos2π(t/T - Xp/K)\n    for(float x=0;x <= screenWidth;x+=1){\n        y =  A * cos(2*M_PI * (t / T -  x / K)) + axleXOnScreenHeight;\n        CGPathAddLineToPoint(path, nil, x, y);\n    }\n    \n    CGContextAddPath(context, path);\n    CGContextDrawPath(context, kCGPathStroke);\n    CGPathRelease(path);\n}\n```\n\n效果如下，波长为80，屏幕宽了375刚好5个波峰的样子：\n![waveView.gif](/images/平面波动方程实现线条波动效果/waveWater5.gif)\n\n其它好玩的效果(比如波动过程中改变振幅的大小，就可以增加波的节奏感等)：\n\n![waveViewZheXian.gif](/images/平面波动方程实现线条波动效果/waveViewZheXian.gif)\n\n![waveViewWater.gif](/images/平面波动方程实现线条波动效果/waveViewLong.gif)\n\n![waveViewUnkown.gif](/images/平面波动方程实现线条波动效果/waveViewOther.gif)\n\n是不是挺好玩的，可惜没有接触过3D引擎，不然整个世界都可以波动起来。\n赶紧试试!\n源码位置:https://github.com/stoull/Wave","source":"_posts/平面波动方程实现线条波动效果.md","raw":"---\ntitle: 平面波动方程实现线条波动效果\ndate: 2016-05-27 14:38:18\ncategories:\n- Animation\n- Core Graphics\ntags:\n- Animation\n---\n\n\n前两天看到一个水波的动画图，形如下面这样子，突然波动方程在记忆深处就复活了。发现这个方程可以很好玩，虽然只是二维的，但还是分享给大家。\n![waveWater.gif](/images/平面波动方程实现线条波动效果/waveWater.gif)\n\n#### * 波动方程的推导\n已知波源A的振动方程：y=Acos(ωt+φA⁡)。假设波沿x轴正方向传播速率记为u,沿x轴负方向传播速率记为V。以O点为坐标原点，A点的坐标为Xa，以水平向右为x轴的正方向建立坐标系。\n<!-- more -->\n当波沿x轴正方向传播的时候，如下图所示，在x轴正方向上任取一点P，与o点相距Xp。当得波向右传播时，P点的振动落后于A点，落后的相位为ω (Xp-Xa)/u。可得P点在任意时刻t的位移：y=Acos[ωt-ω (Xp-Xa)/u+φa]= Acos[ωt- ω Xp/u+(φa+ ω Xa/u)]。可参考:[如何求解平面简谐波的波动方程](http://www.docin.com/p-436791991.html )。\n\n![沿x轴方向传播的平面简谐波](/images/平面波动方程实现线条波动效果/harmonic.png)\n\n得到的这个方程叫平面简谐波动方程，形如：\n> \ny=Acos[ωt- ω Xp/u+(φa+ ω Xa/u)]\n\n它能描述任意时刻任意点在Y轴方向上的位移y。加上一个微分的思想，取一个X+dx值,然后计算出对应的y值，将这些n个y值连成一条线就是任意时刻的波形图。当t在流逝的时候这个波形图不断的在重画，就形成了一个波动图了！在代码前先分析一下这个方程：**y=Acos[ωt- ω Xp/u+(φa+ ω Xa/u)]**\n#### * 方程的物理意义\n> \n* y是y坐标的位置，也就是我们要计算点的y值\n* A是振幅，就这个波振动幅度的大小\n* ω是频率，可以理解为是振动的快慢，ω ＝ 2 / T（T是周期）\n* t就是时间了，时间是均匀（绝对时空观）往前走的\n* u描述的是波的传播速率，波速＝波长/周期\n* φa描述的波源的初相位，在图上看就是这个点是在x轴（φa＝0）上开始振动，还是在x轴上多少或下多少（cosφa）的地方开始振动。\n\n只是为了实现这种效果，我们就利用最简单的简谐波了。此时：\n> \n* 波的初相为φa ＝ 0\n* 波源就在Xa处，即Xa ＝ 0\n\n此时波动方程就变成了:\n#### * 最简方程\n> y=Acos(ωt- ω Xp/u)\n\n是不是简单了好多！这样再设两个变量，一个是周期T和波长K，根据 “波速＝波长/周期(u = K / T)” 和 ω ＝ 2π / T。波动方程就可以推导成这个：\n> \ny = Acos2π(t/T - Xp/K)\n\n这样代码的样子就出来了，忍不住开始代码了吧！\n#### *代码实现\n利用Quartz2D就可以简单实现，用一个UIView来实现，命名为WaveView（所有代码都在WaveView.m文件里面）。\n设置波的基本属性：\n\n```\n@interface WaveView ()\n{\n    CGFloat screenWidth;\n    \n    float A;    // 振幅\n    float t;    // 时间变量\n    \n    float T;    // 周期\n    float K;    // 波长\n}\n@end\n\n```\n在init方法里面初始化波的基本属性值：\n\n```\n- (id)initWithFrame:(CGRect)frame\n{\n    self = [super initWithFrame:frame];\n    if (self) {\n        \n        // 设置波的基本属性（）\n        A = 6;\n        t = 0;\n        T = 1.0;\n        K = 80;\n        \n        [self setBackgroundColor:[UIColor clearColor]];\n        \n        // 设置刷新图像的频率，0.3秒人眼就很难分辨出来了\n        [NSTimer scheduledTimerWithTimeInterval:0.03 target:self selector:@selector(animateWave) userInfo:nil repeats:YES];\n    }\n    return self;\n}\n```\n启动动画：\n\n```\n-(void)animateWave\n{\n    // 这里是时间机器，如果和刷新图像的时间间隔一样，那么就是正常时间的速度\n    // 如果大于刷新时间间隔，那么时间就走的很快，是平常的多少倍自己去计算\n    // 如果小于刷新时间间隔，那么时间就走的慢\n    \n    t+=0.05; // 这里比实际时间快\n    \n    [self setNeedsDisplay];\n    \n```\n\n动画算法的实现：\n\n```\n- (void)drawRect:(CGRect)rect\n{\n    CGContextRef context = UIGraphicsGetCurrentContext();\n    CGMutablePathRef path = CGPathCreateMutable();\n    CGContextSetLineWidth(context, 2);\n    CGContextSetStrokeColorWithColor(context, [[UIColor blackColor] CGColor]);\n    float y=axleXOnScreenHeight;\n    CGPathMoveToPoint(path, NULL, 0, y);\n    \n    // 这是将x轴微分单位为1pt，就是每隔1pt计算一个y值，将所有的y值连起来就是一个波图\n    // 可以将微分单位设置大一点，有不一样的效果\n    // y 值的计算就用推导出来的公式：y = Acos2π(t/T - Xp/K)\n    for(float x=0;x <= screenWidth;x+=1){\n        y =  A * cos(2*M_PI * (t / T -  x / K)) + axleXOnScreenHeight;\n        CGPathAddLineToPoint(path, nil, x, y);\n    }\n    \n    CGContextAddPath(context, path);\n    CGContextDrawPath(context, kCGPathStroke);\n    CGPathRelease(path);\n}\n```\n\n效果如下，波长为80，屏幕宽了375刚好5个波峰的样子：\n![waveView.gif](/images/平面波动方程实现线条波动效果/waveWater5.gif)\n\n其它好玩的效果(比如波动过程中改变振幅的大小，就可以增加波的节奏感等)：\n\n![waveViewZheXian.gif](/images/平面波动方程实现线条波动效果/waveViewZheXian.gif)\n\n![waveViewWater.gif](/images/平面波动方程实现线条波动效果/waveViewLong.gif)\n\n![waveViewUnkown.gif](/images/平面波动方程实现线条波动效果/waveViewOther.gif)\n\n是不是挺好玩的，可惜没有接触过3D引擎，不然整个世界都可以波动起来。\n赶紧试试!\n源码位置:https://github.com/stoull/Wave","slug":"平面波动方程实现线条波动效果","published":1,"updated":"2021-10-11T06:16:30.789Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl74l5j5k00052a37dzoz5zp9","content":"<p>前两天看到一个水波的动画图，形如下面这样子，突然波动方程在记忆深处就复活了。发现这个方程可以很好玩，虽然只是二维的，但还是分享给大家。<br><img src=\"/images/%E5%B9%B3%E9%9D%A2%E6%B3%A2%E5%8A%A8%E6%96%B9%E7%A8%8B%E5%AE%9E%E7%8E%B0%E7%BA%BF%E6%9D%A1%E6%B3%A2%E5%8A%A8%E6%95%88%E6%9E%9C/waveWater.gif\" alt=\"waveWater.gif\"></p>\n<h4 id=\"波动方程的推导\"><a href=\"#波动方程的推导\" class=\"headerlink\" title=\"* 波动方程的推导\"></a>* 波动方程的推导</h4><p>已知波源A的振动方程：y=Acos(ωt+φA⁡)。假设波沿x轴正方向传播速率记为u,沿x轴负方向传播速率记为V。以O点为坐标原点，A点的坐标为Xa，以水平向右为x轴的正方向建立坐标系。</p>\n<a id=\"more\"></a>\n<p>当波沿x轴正方向传播的时候，如下图所示，在x轴正方向上任取一点P，与o点相距Xp。当得波向右传播时，P点的振动落后于A点，落后的相位为ω (Xp-Xa)/u。可得P点在任意时刻t的位移：y=Acos[ωt-ω (Xp-Xa)/u+φa]= Acos[ωt- ω Xp/u+(φa+ ω Xa/u)]。可参考:<a href=\"http://www.docin.com/p-436791991.html\">如何求解平面简谐波的波动方程</a>。</p>\n<p><img src=\"/images/%E5%B9%B3%E9%9D%A2%E6%B3%A2%E5%8A%A8%E6%96%B9%E7%A8%8B%E5%AE%9E%E7%8E%B0%E7%BA%BF%E6%9D%A1%E6%B3%A2%E5%8A%A8%E6%95%88%E6%9E%9C/harmonic.png\" alt=\"沿x轴方向传播的平面简谐波\"></p>\n<p>得到的这个方程叫平面简谐波动方程，形如：</p>\n<blockquote>\n</blockquote>\n<p>y=Acos[ωt- ω Xp/u+(φa+ ω Xa/u)]</p>\n<p>它能描述任意时刻任意点在Y轴方向上的位移y。加上一个微分的思想，取一个X+dx值,然后计算出对应的y值，将这些n个y值连成一条线就是任意时刻的波形图。当t在流逝的时候这个波形图不断的在重画，就形成了一个波动图了！在代码前先分析一下这个方程：<strong>y=Acos[ωt- ω Xp/u+(φa+ ω Xa/u)]</strong></p>\n<h4 id=\"方程的物理意义\"><a href=\"#方程的物理意义\" class=\"headerlink\" title=\"* 方程的物理意义\"></a>* 方程的物理意义</h4><blockquote>\n</blockquote>\n<ul>\n<li>y是y坐标的位置，也就是我们要计算点的y值</li>\n<li>A是振幅，就这个波振动幅度的大小</li>\n<li>ω是频率，可以理解为是振动的快慢，ω ＝ 2 / T（T是周期）</li>\n<li>t就是时间了，时间是均匀（绝对时空观）往前走的</li>\n<li>u描述的是波的传播速率，波速＝波长/周期</li>\n<li>φa描述的波源的初相位，在图上看就是这个点是在x轴（φa＝0）上开始振动，还是在x轴上多少或下多少（cosφa）的地方开始振动。</li>\n</ul>\n<p>只是为了实现这种效果，我们就利用最简单的简谐波了。此时：</p>\n<blockquote>\n</blockquote>\n<ul>\n<li>波的初相为φa ＝ 0</li>\n<li>波源就在Xa处，即Xa ＝ 0</li>\n</ul>\n<p>此时波动方程就变成了:</p>\n<h4 id=\"最简方程\"><a href=\"#最简方程\" class=\"headerlink\" title=\"* 最简方程\"></a>* 最简方程</h4><blockquote>\n<p>y=Acos(ωt- ω Xp/u)</p>\n</blockquote>\n<p>是不是简单了好多！这样再设两个变量，一个是周期T和波长K，根据 “波速＝波长/周期(u = K / T)” 和 ω ＝ 2π / T。波动方程就可以推导成这个：</p>\n<blockquote>\n</blockquote>\n<p>y = Acos2π(t/T - Xp/K)</p>\n<p>这样代码的样子就出来了，忍不住开始代码了吧！</p>\n<h4 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"*代码实现\"></a>*代码实现</h4><p>利用Quartz2D就可以简单实现，用一个UIView来实现，命名为WaveView（所有代码都在WaveView.m文件里面）。<br>设置波的基本属性：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@interface WaveView ()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    CGFloat screenWidth;</span><br><span class=\"line\">    </span><br><span class=\"line\">    float A;    &#x2F;&#x2F; 振幅</span><br><span class=\"line\">    float t;    &#x2F;&#x2F; 时间变量</span><br><span class=\"line\">    </span><br><span class=\"line\">    float T;    &#x2F;&#x2F; 周期</span><br><span class=\"line\">    float K;    &#x2F;&#x2F; 波长</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@end</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>在init方法里面初始化波的基本属性值：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (id)initWithFrame:(CGRect)frame</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    self &#x3D; [super initWithFrame:frame];</span><br><span class=\"line\">    if (self) &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        &#x2F;&#x2F; 设置波的基本属性（）</span><br><span class=\"line\">        A &#x3D; 6;</span><br><span class=\"line\">        t &#x3D; 0;</span><br><span class=\"line\">        T &#x3D; 1.0;</span><br><span class=\"line\">        K &#x3D; 80;</span><br><span class=\"line\">        </span><br><span class=\"line\">        [self setBackgroundColor:[UIColor clearColor]];</span><br><span class=\"line\">        </span><br><span class=\"line\">        &#x2F;&#x2F; 设置刷新图像的频率，0.3秒人眼就很难分辨出来了</span><br><span class=\"line\">        [NSTimer scheduledTimerWithTimeInterval:0.03 target:self selector:@selector(animateWave) userInfo:nil repeats:YES];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return self;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>启动动画：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-(void)animateWave</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &#x2F;&#x2F; 这里是时间机器，如果和刷新图像的时间间隔一样，那么就是正常时间的速度</span><br><span class=\"line\">    &#x2F;&#x2F; 如果大于刷新时间间隔，那么时间就走的很快，是平常的多少倍自己去计算</span><br><span class=\"line\">    &#x2F;&#x2F; 如果小于刷新时间间隔，那么时间就走的慢</span><br><span class=\"line\">    </span><br><span class=\"line\">    t+&#x3D;0.05; &#x2F;&#x2F; 这里比实际时间快</span><br><span class=\"line\">    </span><br><span class=\"line\">    [self setNeedsDisplay];</span><br><span class=\"line\">    </span><br></pre></td></tr></table></figure>\n\n<p>动画算法的实现：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (void)drawRect:(CGRect)rect</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    CGContextRef context &#x3D; UIGraphicsGetCurrentContext();</span><br><span class=\"line\">    CGMutablePathRef path &#x3D; CGPathCreateMutable();</span><br><span class=\"line\">    CGContextSetLineWidth(context, 2);</span><br><span class=\"line\">    CGContextSetStrokeColorWithColor(context, [[UIColor blackColor] CGColor]);</span><br><span class=\"line\">    float y&#x3D;axleXOnScreenHeight;</span><br><span class=\"line\">    CGPathMoveToPoint(path, NULL, 0, y);</span><br><span class=\"line\">    </span><br><span class=\"line\">    &#x2F;&#x2F; 这是将x轴微分单位为1pt，就是每隔1pt计算一个y值，将所有的y值连起来就是一个波图</span><br><span class=\"line\">    &#x2F;&#x2F; 可以将微分单位设置大一点，有不一样的效果</span><br><span class=\"line\">    &#x2F;&#x2F; y 值的计算就用推导出来的公式：y &#x3D; Acos2π(t&#x2F;T - Xp&#x2F;K)</span><br><span class=\"line\">    for(float x&#x3D;0;x &lt;&#x3D; screenWidth;x+&#x3D;1)&#123;</span><br><span class=\"line\">        y &#x3D;  A * cos(2*M_PI * (t &#x2F; T -  x &#x2F; K)) + axleXOnScreenHeight;</span><br><span class=\"line\">        CGPathAddLineToPoint(path, nil, x, y);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    CGContextAddPath(context, path);</span><br><span class=\"line\">    CGContextDrawPath(context, kCGPathStroke);</span><br><span class=\"line\">    CGPathRelease(path);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>效果如下，波长为80，屏幕宽了375刚好5个波峰的样子：<br><img src=\"/images/%E5%B9%B3%E9%9D%A2%E6%B3%A2%E5%8A%A8%E6%96%B9%E7%A8%8B%E5%AE%9E%E7%8E%B0%E7%BA%BF%E6%9D%A1%E6%B3%A2%E5%8A%A8%E6%95%88%E6%9E%9C/waveWater5.gif\" alt=\"waveView.gif\"></p>\n<p>其它好玩的效果(比如波动过程中改变振幅的大小，就可以增加波的节奏感等)：</p>\n<p><img src=\"/images/%E5%B9%B3%E9%9D%A2%E6%B3%A2%E5%8A%A8%E6%96%B9%E7%A8%8B%E5%AE%9E%E7%8E%B0%E7%BA%BF%E6%9D%A1%E6%B3%A2%E5%8A%A8%E6%95%88%E6%9E%9C/waveViewZheXian.gif\" alt=\"waveViewZheXian.gif\"></p>\n<p><img src=\"/images/%E5%B9%B3%E9%9D%A2%E6%B3%A2%E5%8A%A8%E6%96%B9%E7%A8%8B%E5%AE%9E%E7%8E%B0%E7%BA%BF%E6%9D%A1%E6%B3%A2%E5%8A%A8%E6%95%88%E6%9E%9C/waveViewLong.gif\" alt=\"waveViewWater.gif\"></p>\n<p><img src=\"/images/%E5%B9%B3%E9%9D%A2%E6%B3%A2%E5%8A%A8%E6%96%B9%E7%A8%8B%E5%AE%9E%E7%8E%B0%E7%BA%BF%E6%9D%A1%E6%B3%A2%E5%8A%A8%E6%95%88%E6%9E%9C/waveViewOther.gif\" alt=\"waveViewUnkown.gif\"></p>\n<p>是不是挺好玩的，可惜没有接触过3D引擎，不然整个世界都可以波动起来。<br>赶紧试试!<br>源码位置:<a href=\"https://github.com/stoull/Wave\">https://github.com/stoull/Wave</a></p>\n","site":{"data":{}},"excerpt":"<p>前两天看到一个水波的动画图，形如下面这样子，突然波动方程在记忆深处就复活了。发现这个方程可以很好玩，虽然只是二维的，但还是分享给大家。<br><img src=\"/images/%E5%B9%B3%E9%9D%A2%E6%B3%A2%E5%8A%A8%E6%96%B9%E7%A8%8B%E5%AE%9E%E7%8E%B0%E7%BA%BF%E6%9D%A1%E6%B3%A2%E5%8A%A8%E6%95%88%E6%9E%9C/waveWater.gif\" alt=\"waveWater.gif\"></p>\n<h4 id=\"波动方程的推导\"><a href=\"#波动方程的推导\" class=\"headerlink\" title=\"* 波动方程的推导\"></a>* 波动方程的推导</h4><p>已知波源A的振动方程：y=Acos(ωt+φA⁡)。假设波沿x轴正方向传播速率记为u,沿x轴负方向传播速率记为V。以O点为坐标原点，A点的坐标为Xa，以水平向右为x轴的正方向建立坐标系。</p>","more":"<p>当波沿x轴正方向传播的时候，如下图所示，在x轴正方向上任取一点P，与o点相距Xp。当得波向右传播时，P点的振动落后于A点，落后的相位为ω (Xp-Xa)/u。可得P点在任意时刻t的位移：y=Acos[ωt-ω (Xp-Xa)/u+φa]= Acos[ωt- ω Xp/u+(φa+ ω Xa/u)]。可参考:<a href=\"http://www.docin.com/p-436791991.html\">如何求解平面简谐波的波动方程</a>。</p>\n<p><img src=\"/images/%E5%B9%B3%E9%9D%A2%E6%B3%A2%E5%8A%A8%E6%96%B9%E7%A8%8B%E5%AE%9E%E7%8E%B0%E7%BA%BF%E6%9D%A1%E6%B3%A2%E5%8A%A8%E6%95%88%E6%9E%9C/harmonic.png\" alt=\"沿x轴方向传播的平面简谐波\"></p>\n<p>得到的这个方程叫平面简谐波动方程，形如：</p>\n<blockquote>\n</blockquote>\n<p>y=Acos[ωt- ω Xp/u+(φa+ ω Xa/u)]</p>\n<p>它能描述任意时刻任意点在Y轴方向上的位移y。加上一个微分的思想，取一个X+dx值,然后计算出对应的y值，将这些n个y值连成一条线就是任意时刻的波形图。当t在流逝的时候这个波形图不断的在重画，就形成了一个波动图了！在代码前先分析一下这个方程：<strong>y=Acos[ωt- ω Xp/u+(φa+ ω Xa/u)]</strong></p>\n<h4 id=\"方程的物理意义\"><a href=\"#方程的物理意义\" class=\"headerlink\" title=\"* 方程的物理意义\"></a>* 方程的物理意义</h4><blockquote>\n</blockquote>\n<ul>\n<li>y是y坐标的位置，也就是我们要计算点的y值</li>\n<li>A是振幅，就这个波振动幅度的大小</li>\n<li>ω是频率，可以理解为是振动的快慢，ω ＝ 2 / T（T是周期）</li>\n<li>t就是时间了，时间是均匀（绝对时空观）往前走的</li>\n<li>u描述的是波的传播速率，波速＝波长/周期</li>\n<li>φa描述的波源的初相位，在图上看就是这个点是在x轴（φa＝0）上开始振动，还是在x轴上多少或下多少（cosφa）的地方开始振动。</li>\n</ul>\n<p>只是为了实现这种效果，我们就利用最简单的简谐波了。此时：</p>\n<blockquote>\n</blockquote>\n<ul>\n<li>波的初相为φa ＝ 0</li>\n<li>波源就在Xa处，即Xa ＝ 0</li>\n</ul>\n<p>此时波动方程就变成了:</p>\n<h4 id=\"最简方程\"><a href=\"#最简方程\" class=\"headerlink\" title=\"* 最简方程\"></a>* 最简方程</h4><blockquote>\n<p>y=Acos(ωt- ω Xp/u)</p>\n</blockquote>\n<p>是不是简单了好多！这样再设两个变量，一个是周期T和波长K，根据 “波速＝波长/周期(u = K / T)” 和 ω ＝ 2π / T。波动方程就可以推导成这个：</p>\n<blockquote>\n</blockquote>\n<p>y = Acos2π(t/T - Xp/K)</p>\n<p>这样代码的样子就出来了，忍不住开始代码了吧！</p>\n<h4 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"*代码实现\"></a>*代码实现</h4><p>利用Quartz2D就可以简单实现，用一个UIView来实现，命名为WaveView（所有代码都在WaveView.m文件里面）。<br>设置波的基本属性：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@interface WaveView ()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    CGFloat screenWidth;</span><br><span class=\"line\">    </span><br><span class=\"line\">    float A;    &#x2F;&#x2F; 振幅</span><br><span class=\"line\">    float t;    &#x2F;&#x2F; 时间变量</span><br><span class=\"line\">    </span><br><span class=\"line\">    float T;    &#x2F;&#x2F; 周期</span><br><span class=\"line\">    float K;    &#x2F;&#x2F; 波长</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@end</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>在init方法里面初始化波的基本属性值：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (id)initWithFrame:(CGRect)frame</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    self &#x3D; [super initWithFrame:frame];</span><br><span class=\"line\">    if (self) &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        &#x2F;&#x2F; 设置波的基本属性（）</span><br><span class=\"line\">        A &#x3D; 6;</span><br><span class=\"line\">        t &#x3D; 0;</span><br><span class=\"line\">        T &#x3D; 1.0;</span><br><span class=\"line\">        K &#x3D; 80;</span><br><span class=\"line\">        </span><br><span class=\"line\">        [self setBackgroundColor:[UIColor clearColor]];</span><br><span class=\"line\">        </span><br><span class=\"line\">        &#x2F;&#x2F; 设置刷新图像的频率，0.3秒人眼就很难分辨出来了</span><br><span class=\"line\">        [NSTimer scheduledTimerWithTimeInterval:0.03 target:self selector:@selector(animateWave) userInfo:nil repeats:YES];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return self;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>启动动画：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-(void)animateWave</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &#x2F;&#x2F; 这里是时间机器，如果和刷新图像的时间间隔一样，那么就是正常时间的速度</span><br><span class=\"line\">    &#x2F;&#x2F; 如果大于刷新时间间隔，那么时间就走的很快，是平常的多少倍自己去计算</span><br><span class=\"line\">    &#x2F;&#x2F; 如果小于刷新时间间隔，那么时间就走的慢</span><br><span class=\"line\">    </span><br><span class=\"line\">    t+&#x3D;0.05; &#x2F;&#x2F; 这里比实际时间快</span><br><span class=\"line\">    </span><br><span class=\"line\">    [self setNeedsDisplay];</span><br><span class=\"line\">    </span><br></pre></td></tr></table></figure>\n\n<p>动画算法的实现：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (void)drawRect:(CGRect)rect</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    CGContextRef context &#x3D; UIGraphicsGetCurrentContext();</span><br><span class=\"line\">    CGMutablePathRef path &#x3D; CGPathCreateMutable();</span><br><span class=\"line\">    CGContextSetLineWidth(context, 2);</span><br><span class=\"line\">    CGContextSetStrokeColorWithColor(context, [[UIColor blackColor] CGColor]);</span><br><span class=\"line\">    float y&#x3D;axleXOnScreenHeight;</span><br><span class=\"line\">    CGPathMoveToPoint(path, NULL, 0, y);</span><br><span class=\"line\">    </span><br><span class=\"line\">    &#x2F;&#x2F; 这是将x轴微分单位为1pt，就是每隔1pt计算一个y值，将所有的y值连起来就是一个波图</span><br><span class=\"line\">    &#x2F;&#x2F; 可以将微分单位设置大一点，有不一样的效果</span><br><span class=\"line\">    &#x2F;&#x2F; y 值的计算就用推导出来的公式：y &#x3D; Acos2π(t&#x2F;T - Xp&#x2F;K)</span><br><span class=\"line\">    for(float x&#x3D;0;x &lt;&#x3D; screenWidth;x+&#x3D;1)&#123;</span><br><span class=\"line\">        y &#x3D;  A * cos(2*M_PI * (t &#x2F; T -  x &#x2F; K)) + axleXOnScreenHeight;</span><br><span class=\"line\">        CGPathAddLineToPoint(path, nil, x, y);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    CGContextAddPath(context, path);</span><br><span class=\"line\">    CGContextDrawPath(context, kCGPathStroke);</span><br><span class=\"line\">    CGPathRelease(path);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>效果如下，波长为80，屏幕宽了375刚好5个波峰的样子：<br><img src=\"/images/%E5%B9%B3%E9%9D%A2%E6%B3%A2%E5%8A%A8%E6%96%B9%E7%A8%8B%E5%AE%9E%E7%8E%B0%E7%BA%BF%E6%9D%A1%E6%B3%A2%E5%8A%A8%E6%95%88%E6%9E%9C/waveWater5.gif\" alt=\"waveView.gif\"></p>\n<p>其它好玩的效果(比如波动过程中改变振幅的大小，就可以增加波的节奏感等)：</p>\n<p><img src=\"/images/%E5%B9%B3%E9%9D%A2%E6%B3%A2%E5%8A%A8%E6%96%B9%E7%A8%8B%E5%AE%9E%E7%8E%B0%E7%BA%BF%E6%9D%A1%E6%B3%A2%E5%8A%A8%E6%95%88%E6%9E%9C/waveViewZheXian.gif\" alt=\"waveViewZheXian.gif\"></p>\n<p><img src=\"/images/%E5%B9%B3%E9%9D%A2%E6%B3%A2%E5%8A%A8%E6%96%B9%E7%A8%8B%E5%AE%9E%E7%8E%B0%E7%BA%BF%E6%9D%A1%E6%B3%A2%E5%8A%A8%E6%95%88%E6%9E%9C/waveViewLong.gif\" alt=\"waveViewWater.gif\"></p>\n<p><img src=\"/images/%E5%B9%B3%E9%9D%A2%E6%B3%A2%E5%8A%A8%E6%96%B9%E7%A8%8B%E5%AE%9E%E7%8E%B0%E7%BA%BF%E6%9D%A1%E6%B3%A2%E5%8A%A8%E6%95%88%E6%9E%9C/waveViewOther.gif\" alt=\"waveViewUnkown.gif\"></p>\n<p>是不是挺好玩的，可惜没有接触过3D引擎，不然整个世界都可以波动起来。<br>赶紧试试!<br>源码位置:<a href=\"https://github.com/stoull/Wave\">https://github.com/stoull/Wave</a></p>"},{"title":"颜色和颜色空间之颜色","date":"2017-08-23T02:48:18.000Z","_content":"\n<!--# 颜色和颜色空间之颜色-->\n\n白色代表学术诚实和肉体之爱的纯净；红色代表艺术激情、政治信念、血气之勇；蓝色代表在音乐和数学上的内省发现、医疗助人以及万物的基本结构；翠绿代表和自然共鸣、和技术同乐以及对受威胁生命的保护；黑色代表人类神秘的创作，这是德姆・瑞亚的民族颜色的含义。我喜欢蓝色，你喜欢绿色，人家喜欢黑色，这在日常颜色真的很简单，只需要感性的感受它的美就可以。但当我看到“颜色空间”，进而去想理解颜色的时候，发现我们对颜色的描述真的是很复杂，涉及到光的物理性质，以及的生理结构等方面。\n\n## 什么是颜色\n### 光\n我们能看各种颜色的大千世界，一切都始于光。所要明白颜色是什么，我们先得明白光是什么东西。光有粒子性和波动性，但在研究颜色的问题上，都使用光的波动性来研究，即光是一种波，物理学上叫电磁波。由于有不同波长的电磁波，就产生不同颜色的光，比如蓝色光中光波的波长比红色光中光波的波长短些。\n光波的波长用希腊字母 λ 表示，可见光的波长大概时380-740纳米，大于740纳米和小于380纳米的光波人类的眼睛就看不到了，比如紫外线或红外线，但有些动物的眼睛可以感知到。人类可见光谱如下：\n![可见光谱](/images/color_space/spectrum1.png)\n白光是由所有可见光颜色组合而成的（牛顿使棱镜实验），所以拿可见光谱中所有的光，并按合适的比例进行混合就可造出白光。\n<!-- more -->\n### 人的睛眼\n人的睛眼视网膜上有两类主要的光感细胞，视锥细胞 和 视杆细胞。\n\n**[视锥细胞（cone cell ）](https://zh.wikipedia.org/wiki/视锥细胞)**：主要分布在视网膜中心，视锥细胞主要负责颜色识别，并且在相对较亮的光照下更能发挥作用。\n\n**[视杆细胞（rod cells）](https://zh.wikipedia.org/wiki/视杆细胞)**：主要分布在视网膜边上，且较视锥细胞对光更敏感，几乎主要全部用于夜视力。\n\n视锥细胞有三种（亲红，亲绿，亲蓝视色素），而且每一种都对特定的可见光范围敏感。这三种视锥细胞刚好大约分别对红色，绿色，和蓝色最为敏感，而这三种颜色也是计算机显示器构造颜色的三原色。所以说视锥细胞负责颜色识别（或者叫三原色识别）。\n\n### 原色以及增减色原理\n\n**原色有两种定义：**\n\n**1. 红色，绿色，蓝色。**增色法中的原色，计算机或照明行业使用方法。\n>因为上面提到的生理的原因（视锥细胞对红色，绿色，和蓝色最为敏感），因此使用红，绿，蓝作为三原色,这三种颜色是相互独立的，任何一种都不能使用其它二种颜色混合。使用此三原色按比例混合成其它的颜色。\n>\n>红色+绿色=黄色\n>\n>绿色+蓝色=青色\n>\n>红色+蓝色=品红\n>\n>红色+绿色+蓝色=白色\n>\n>黄色、青色、品红都是由两种及色相混合而成，所以它们又称相加二次色。\n>\n>![增色法图](/images/color_space/Additive.png)\n\n\n**2. 黄色，品红，青色。**减色法中的原色，绘画艺术方面使用此方法。\n>在白光照射下，青色颜料能吸收红色而反射青色，黄色颜料吸收蓝色而反射黄色，品红颜料吸收绿色而反射品红\n>如下图黄色的产生。白光（红+绿+蓝）照射黄色颜料，其中的蓝色光成份被吸收，反射回红和绿色成份的光，而红色光加绿色光我们的眼睛即感知为黄色。\n>\n>![减色法黄色的产生](/images/color_space/yellow.png)\n>\n>白色-红色=青色\n>\n>白色-绿色=品红\n>\n>白色-蓝色=黄色\n>\n>另外，如果把青色和黄色两种颜料混合，在白光照射下，由于颜料吸收了红色和蓝色，而反射了绿色，对于颜料的混合我们表示如下：\n\n>颜料(黄色+青色)=白色-红色-蓝色=绿色\n\n>颜料(品红+青色)=白色-红色-绿色=蓝色\n>\n>颜料(黄色+品红)=白色-绿色-蓝色=红色\n>\n>![减色法图](/images/color_space/Subtractive.png)\n\n资料:\n\n[三原色光模式](https://zh.wikipedia.org/wiki/三原色光模式#RGB.E9.A2.9C.E8.89.B2.E6.A8.A1.E5.9E.8B.E7.90.86.E8.AE.BA.E4.B8.8E.E5.BA.94.E7.94.A8.E7.9A.84.E5.8E.86.E5.8F.B2)\n\n[色彩原理](http://www.ebaomonthly.com/window/photo/lesson/color_01.htm)\n\n### 颜色的亮度\n人的眼睛感受颜色的亮度是不一样的，感受有些颜色会比别的颜色亮一些，比如我们会感觉蓝色暗些，而绿色最亮。一般来说在波长555纳米到560纳米之间的颜色，人类感觉最亮。如下图：\n\n![颜色的亮度](/images/color_space/spectrum2.png)\n\n在用色相（Hue）, 饱和度（Saturation）, 和亮度（Lightness）描述颜色的时候，就需指定这种颜色的亮度。人类眼睛对可见光颜色的亮度感觉可以用光度函数（luminosity function）来描述：\n\n![光度函数](/images/color_space/lumfunc.png)\n\n### 光谱功率分布（Spectral Power Distribution）\n\n**光谱图：**\n\n我们周围的灯看起来都特别的白，但每一种灯都不可能等量的发出可见光谱中所有的光。荧光灯发出发出的大部分颜色的光是差不多的，但有几个波段的光特别的强。白炽灯强列的发出所有颜色的光，波长越长越强烈（这是为什么白炽灯看起起偏黄的原因），而且有大部分超出了可见光的部分，也就是产生大量的红外线。这也是为什么白炽灯会浪费电的原因。\n\n![荧光灯光谱图](/images/color_space/Fluorescentlamps.png) ![白炽灯光谱图](/images/color_space/Incandescentlight.png)\n\n每一灯的的颜色成份都是独一无二的，就像人的指纹一样，这叫灯的光谱图或光谱功率分布Spectral Power Distribution（SPD）。\n\n**白然光：** 因为我们地球就靠太阳照亮的，太阳光我们也称之为白然光（natural lighting），所以太阳的光谱图是一个特别的光谱图。因为我们眼睛经过了千万年去适应太阳光，所以如果我们造的灯的光谱能接近太阳光的光谱，我们就可以说这灯叫自然光灯，质量特别好。如果灯能一直发出类似太阳光谱的的灯，它这灯就可以叫做太阳灯了。\n\n**D65:** 但是太阳光光谱的测定受各种因素的影响，比如我在北极测，他在喜马拉雅测，他在太平洋中央测，你在下雨天测，这样每个人测出来的太阳光光谱肯定是不一样的，这样人们对太阳光的定义就不一样了。所以国际照明委员会（International Commission on Illumination）定义了一个标准叫**D65**，符合欧洲、太平洋周边地区视觉颜色标准，模拟平均北天空日光，这标准大概就是北欧天气好的时候太阳光的样子。D65也叫标准日光光谱。\n>*ICE 还定义了其它标准比如 D50, D75等，有兴趣可看看 [主要标准光源资料](https://en.wikipedia.org/wiki/Standard_illuminant)*\n\n#### 物体的SDP\n不仅是发光物体有独有颜色光谱曲线，不会发光的物体也有独一无二的光谱反射率曲线(spectral reflectance curve)。因为不发光的物体不发光，它会吸收部分照射它的光，并反射回未吸收的那部分，这部也会被我们看到。每一个物体都有其特别的光谱反射率曲线。如下为A（黄油），B(西红柿)，C（大白菜）的光谱反射率曲线：\n\n![光谱反射率曲线](/images/color_space/spd.png) \n\n国际照明委员会也定义了一个非常有用的标准 **显色指数（Color Rendering Index）**：光源对物体的显色能力称为显色性，是通过与同色温的参考或基准光源（白炽灯或画光）下物体外观颜色的比较。\n\n>色温\n>色温有时候会用来描述颜色，就像我们会蓝色比黄色冷。这个名词原本描述的现象是，当一个物体的温度达到一定值会发出可见光，而这可见光的颜色取决于这个物体温度的大小。这个现象叫黑体辐射。太阳可看成一个黑体，它的温度大概是5700K。\n\n### 什么是白色？\n当可见光谱中所有成份的光都等量时，就是标准的白色。这种光源在现实之中是不存在的，那的光谱图叫**E标准光源(E illuminant)**,对应ICE标准光源中的E光源。\n\n![](/images/color_space/illuminantE.png)\n\n学习资料：\n\n[Scratchapixel: Introduction to Light, Color and Color Space](http://www.scratchapixel.com/lessons/digital-imaging/colors/introduction)\n\n[Apple: Color: A Brief Overview](https://developer.apple.com/library/content/documentation/GraphicsImaging/Conceptual/csintro/csintro_ovrvw/csintro_ovrvw.html#//apple_ref/doc/uid/TP30001148-CH205-BBCBDGDD)","source":"_posts/颜色和颜色空间之颜色.md","raw":"---\ntitle: 颜色和颜色空间之颜色\ndate: 2017-08-23 10:48:18\ncategories:\n- Core Graphics\ntags:\n- 颜色\n- Color Space\n---\n\n<!--# 颜色和颜色空间之颜色-->\n\n白色代表学术诚实和肉体之爱的纯净；红色代表艺术激情、政治信念、血气之勇；蓝色代表在音乐和数学上的内省发现、医疗助人以及万物的基本结构；翠绿代表和自然共鸣、和技术同乐以及对受威胁生命的保护；黑色代表人类神秘的创作，这是德姆・瑞亚的民族颜色的含义。我喜欢蓝色，你喜欢绿色，人家喜欢黑色，这在日常颜色真的很简单，只需要感性的感受它的美就可以。但当我看到“颜色空间”，进而去想理解颜色的时候，发现我们对颜色的描述真的是很复杂，涉及到光的物理性质，以及的生理结构等方面。\n\n## 什么是颜色\n### 光\n我们能看各种颜色的大千世界，一切都始于光。所要明白颜色是什么，我们先得明白光是什么东西。光有粒子性和波动性，但在研究颜色的问题上，都使用光的波动性来研究，即光是一种波，物理学上叫电磁波。由于有不同波长的电磁波，就产生不同颜色的光，比如蓝色光中光波的波长比红色光中光波的波长短些。\n光波的波长用希腊字母 λ 表示，可见光的波长大概时380-740纳米，大于740纳米和小于380纳米的光波人类的眼睛就看不到了，比如紫外线或红外线，但有些动物的眼睛可以感知到。人类可见光谱如下：\n![可见光谱](/images/color_space/spectrum1.png)\n白光是由所有可见光颜色组合而成的（牛顿使棱镜实验），所以拿可见光谱中所有的光，并按合适的比例进行混合就可造出白光。\n<!-- more -->\n### 人的睛眼\n人的睛眼视网膜上有两类主要的光感细胞，视锥细胞 和 视杆细胞。\n\n**[视锥细胞（cone cell ）](https://zh.wikipedia.org/wiki/视锥细胞)**：主要分布在视网膜中心，视锥细胞主要负责颜色识别，并且在相对较亮的光照下更能发挥作用。\n\n**[视杆细胞（rod cells）](https://zh.wikipedia.org/wiki/视杆细胞)**：主要分布在视网膜边上，且较视锥细胞对光更敏感，几乎主要全部用于夜视力。\n\n视锥细胞有三种（亲红，亲绿，亲蓝视色素），而且每一种都对特定的可见光范围敏感。这三种视锥细胞刚好大约分别对红色，绿色，和蓝色最为敏感，而这三种颜色也是计算机显示器构造颜色的三原色。所以说视锥细胞负责颜色识别（或者叫三原色识别）。\n\n### 原色以及增减色原理\n\n**原色有两种定义：**\n\n**1. 红色，绿色，蓝色。**增色法中的原色，计算机或照明行业使用方法。\n>因为上面提到的生理的原因（视锥细胞对红色，绿色，和蓝色最为敏感），因此使用红，绿，蓝作为三原色,这三种颜色是相互独立的，任何一种都不能使用其它二种颜色混合。使用此三原色按比例混合成其它的颜色。\n>\n>红色+绿色=黄色\n>\n>绿色+蓝色=青色\n>\n>红色+蓝色=品红\n>\n>红色+绿色+蓝色=白色\n>\n>黄色、青色、品红都是由两种及色相混合而成，所以它们又称相加二次色。\n>\n>![增色法图](/images/color_space/Additive.png)\n\n\n**2. 黄色，品红，青色。**减色法中的原色，绘画艺术方面使用此方法。\n>在白光照射下，青色颜料能吸收红色而反射青色，黄色颜料吸收蓝色而反射黄色，品红颜料吸收绿色而反射品红\n>如下图黄色的产生。白光（红+绿+蓝）照射黄色颜料，其中的蓝色光成份被吸收，反射回红和绿色成份的光，而红色光加绿色光我们的眼睛即感知为黄色。\n>\n>![减色法黄色的产生](/images/color_space/yellow.png)\n>\n>白色-红色=青色\n>\n>白色-绿色=品红\n>\n>白色-蓝色=黄色\n>\n>另外，如果把青色和黄色两种颜料混合，在白光照射下，由于颜料吸收了红色和蓝色，而反射了绿色，对于颜料的混合我们表示如下：\n\n>颜料(黄色+青色)=白色-红色-蓝色=绿色\n\n>颜料(品红+青色)=白色-红色-绿色=蓝色\n>\n>颜料(黄色+品红)=白色-绿色-蓝色=红色\n>\n>![减色法图](/images/color_space/Subtractive.png)\n\n资料:\n\n[三原色光模式](https://zh.wikipedia.org/wiki/三原色光模式#RGB.E9.A2.9C.E8.89.B2.E6.A8.A1.E5.9E.8B.E7.90.86.E8.AE.BA.E4.B8.8E.E5.BA.94.E7.94.A8.E7.9A.84.E5.8E.86.E5.8F.B2)\n\n[色彩原理](http://www.ebaomonthly.com/window/photo/lesson/color_01.htm)\n\n### 颜色的亮度\n人的眼睛感受颜色的亮度是不一样的，感受有些颜色会比别的颜色亮一些，比如我们会感觉蓝色暗些，而绿色最亮。一般来说在波长555纳米到560纳米之间的颜色，人类感觉最亮。如下图：\n\n![颜色的亮度](/images/color_space/spectrum2.png)\n\n在用色相（Hue）, 饱和度（Saturation）, 和亮度（Lightness）描述颜色的时候，就需指定这种颜色的亮度。人类眼睛对可见光颜色的亮度感觉可以用光度函数（luminosity function）来描述：\n\n![光度函数](/images/color_space/lumfunc.png)\n\n### 光谱功率分布（Spectral Power Distribution）\n\n**光谱图：**\n\n我们周围的灯看起来都特别的白，但每一种灯都不可能等量的发出可见光谱中所有的光。荧光灯发出发出的大部分颜色的光是差不多的，但有几个波段的光特别的强。白炽灯强列的发出所有颜色的光，波长越长越强烈（这是为什么白炽灯看起起偏黄的原因），而且有大部分超出了可见光的部分，也就是产生大量的红外线。这也是为什么白炽灯会浪费电的原因。\n\n![荧光灯光谱图](/images/color_space/Fluorescentlamps.png) ![白炽灯光谱图](/images/color_space/Incandescentlight.png)\n\n每一灯的的颜色成份都是独一无二的，就像人的指纹一样，这叫灯的光谱图或光谱功率分布Spectral Power Distribution（SPD）。\n\n**白然光：** 因为我们地球就靠太阳照亮的，太阳光我们也称之为白然光（natural lighting），所以太阳的光谱图是一个特别的光谱图。因为我们眼睛经过了千万年去适应太阳光，所以如果我们造的灯的光谱能接近太阳光的光谱，我们就可以说这灯叫自然光灯，质量特别好。如果灯能一直发出类似太阳光谱的的灯，它这灯就可以叫做太阳灯了。\n\n**D65:** 但是太阳光光谱的测定受各种因素的影响，比如我在北极测，他在喜马拉雅测，他在太平洋中央测，你在下雨天测，这样每个人测出来的太阳光光谱肯定是不一样的，这样人们对太阳光的定义就不一样了。所以国际照明委员会（International Commission on Illumination）定义了一个标准叫**D65**，符合欧洲、太平洋周边地区视觉颜色标准，模拟平均北天空日光，这标准大概就是北欧天气好的时候太阳光的样子。D65也叫标准日光光谱。\n>*ICE 还定义了其它标准比如 D50, D75等，有兴趣可看看 [主要标准光源资料](https://en.wikipedia.org/wiki/Standard_illuminant)*\n\n#### 物体的SDP\n不仅是发光物体有独有颜色光谱曲线，不会发光的物体也有独一无二的光谱反射率曲线(spectral reflectance curve)。因为不发光的物体不发光，它会吸收部分照射它的光，并反射回未吸收的那部分，这部也会被我们看到。每一个物体都有其特别的光谱反射率曲线。如下为A（黄油），B(西红柿)，C（大白菜）的光谱反射率曲线：\n\n![光谱反射率曲线](/images/color_space/spd.png) \n\n国际照明委员会也定义了一个非常有用的标准 **显色指数（Color Rendering Index）**：光源对物体的显色能力称为显色性，是通过与同色温的参考或基准光源（白炽灯或画光）下物体外观颜色的比较。\n\n>色温\n>色温有时候会用来描述颜色，就像我们会蓝色比黄色冷。这个名词原本描述的现象是，当一个物体的温度达到一定值会发出可见光，而这可见光的颜色取决于这个物体温度的大小。这个现象叫黑体辐射。太阳可看成一个黑体，它的温度大概是5700K。\n\n### 什么是白色？\n当可见光谱中所有成份的光都等量时，就是标准的白色。这种光源在现实之中是不存在的，那的光谱图叫**E标准光源(E illuminant)**,对应ICE标准光源中的E光源。\n\n![](/images/color_space/illuminantE.png)\n\n学习资料：\n\n[Scratchapixel: Introduction to Light, Color and Color Space](http://www.scratchapixel.com/lessons/digital-imaging/colors/introduction)\n\n[Apple: Color: A Brief Overview](https://developer.apple.com/library/content/documentation/GraphicsImaging/Conceptual/csintro/csintro_ovrvw/csintro_ovrvw.html#//apple_ref/doc/uid/TP30001148-CH205-BBCBDGDD)","slug":"颜色和颜色空间之颜色","published":1,"updated":"2021-10-11T06:16:30.789Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl74l5j5l00062a371gnlef8i","content":"<!--# 颜色和颜色空间之颜色-->\n\n<p>白色代表学术诚实和肉体之爱的纯净；红色代表艺术激情、政治信念、血气之勇；蓝色代表在音乐和数学上的内省发现、医疗助人以及万物的基本结构；翠绿代表和自然共鸣、和技术同乐以及对受威胁生命的保护；黑色代表人类神秘的创作，这是德姆・瑞亚的民族颜色的含义。我喜欢蓝色，你喜欢绿色，人家喜欢黑色，这在日常颜色真的很简单，只需要感性的感受它的美就可以。但当我看到“颜色空间”，进而去想理解颜色的时候，发现我们对颜色的描述真的是很复杂，涉及到光的物理性质，以及的生理结构等方面。</p>\n<h2 id=\"什么是颜色\"><a href=\"#什么是颜色\" class=\"headerlink\" title=\"什么是颜色\"></a>什么是颜色</h2><h3 id=\"光\"><a href=\"#光\" class=\"headerlink\" title=\"光\"></a>光</h3><p>我们能看各种颜色的大千世界，一切都始于光。所要明白颜色是什么，我们先得明白光是什么东西。光有粒子性和波动性，但在研究颜色的问题上，都使用光的波动性来研究，即光是一种波，物理学上叫电磁波。由于有不同波长的电磁波，就产生不同颜色的光，比如蓝色光中光波的波长比红色光中光波的波长短些。<br>光波的波长用希腊字母 λ 表示，可见光的波长大概时380-740纳米，大于740纳米和小于380纳米的光波人类的眼睛就看不到了，比如紫外线或红外线，但有些动物的眼睛可以感知到。人类可见光谱如下：<br><img src=\"/images/color_space/spectrum1.png\" alt=\"可见光谱\"><br>白光是由所有可见光颜色组合而成的（牛顿使棱镜实验），所以拿可见光谱中所有的光，并按合适的比例进行混合就可造出白光。</p>\n<a id=\"more\"></a>\n<h3 id=\"人的睛眼\"><a href=\"#人的睛眼\" class=\"headerlink\" title=\"人的睛眼\"></a>人的睛眼</h3><p>人的睛眼视网膜上有两类主要的光感细胞，视锥细胞 和 视杆细胞。</p>\n<p>**<a href=\"https://zh.wikipedia.org/wiki/%E8%A7%86%E9%94%A5%E7%BB%86%E8%83%9E\">视锥细胞（cone cell ）</a>**：主要分布在视网膜中心，视锥细胞主要负责颜色识别，并且在相对较亮的光照下更能发挥作用。</p>\n<p>**<a href=\"https://zh.wikipedia.org/wiki/%E8%A7%86%E6%9D%86%E7%BB%86%E8%83%9E\">视杆细胞（rod cells）</a>**：主要分布在视网膜边上，且较视锥细胞对光更敏感，几乎主要全部用于夜视力。</p>\n<p>视锥细胞有三种（亲红，亲绿，亲蓝视色素），而且每一种都对特定的可见光范围敏感。这三种视锥细胞刚好大约分别对红色，绿色，和蓝色最为敏感，而这三种颜色也是计算机显示器构造颜色的三原色。所以说视锥细胞负责颜色识别（或者叫三原色识别）。</p>\n<h3 id=\"原色以及增减色原理\"><a href=\"#原色以及增减色原理\" class=\"headerlink\" title=\"原色以及增减色原理\"></a>原色以及增减色原理</h3><p><strong>原色有两种定义：</strong></p>\n<p><strong>1. 红色，绿色，蓝色。</strong>增色法中的原色，计算机或照明行业使用方法。</p>\n<blockquote>\n<p>因为上面提到的生理的原因（视锥细胞对红色，绿色，和蓝色最为敏感），因此使用红，绿，蓝作为三原色,这三种颜色是相互独立的，任何一种都不能使用其它二种颜色混合。使用此三原色按比例混合成其它的颜色。</p>\n<p>红色+绿色=黄色</p>\n<p>绿色+蓝色=青色</p>\n<p>红色+蓝色=品红</p>\n<p>红色+绿色+蓝色=白色</p>\n<p>黄色、青色、品红都是由两种及色相混合而成，所以它们又称相加二次色。</p>\n<p><img src=\"/images/color_space/Additive.png\" alt=\"增色法图\"></p>\n</blockquote>\n<p><strong>2. 黄色，品红，青色。</strong>减色法中的原色，绘画艺术方面使用此方法。</p>\n<blockquote>\n<p>在白光照射下，青色颜料能吸收红色而反射青色，黄色颜料吸收蓝色而反射黄色，品红颜料吸收绿色而反射品红<br>如下图黄色的产生。白光（红+绿+蓝）照射黄色颜料，其中的蓝色光成份被吸收，反射回红和绿色成份的光，而红色光加绿色光我们的眼睛即感知为黄色。</p>\n<p><img src=\"/images/color_space/yellow.png\" alt=\"减色法黄色的产生\"></p>\n<p>白色-红色=青色</p>\n<p>白色-绿色=品红</p>\n<p>白色-蓝色=黄色</p>\n<p>另外，如果把青色和黄色两种颜料混合，在白光照射下，由于颜料吸收了红色和蓝色，而反射了绿色，对于颜料的混合我们表示如下：</p>\n</blockquote>\n<blockquote>\n<p>颜料(黄色+青色)=白色-红色-蓝色=绿色</p>\n</blockquote>\n<blockquote>\n<p>颜料(品红+青色)=白色-红色-绿色=蓝色</p>\n<p>颜料(黄色+品红)=白色-绿色-蓝色=红色</p>\n<p><img src=\"/images/color_space/Subtractive.png\" alt=\"减色法图\"></p>\n</blockquote>\n<p>资料:</p>\n<p><a href=\"https://zh.wikipedia.org/wiki/%E4%B8%89%E5%8E%9F%E8%89%B2%E5%85%89%E6%A8%A1%E5%BC%8F#RGB.E9.A2.9C.E8.89.B2.E6.A8.A1.E5.9E.8B.E7.90.86.E8.AE.BA.E4.B8.8E.E5.BA.94.E7.94.A8.E7.9A.84.E5.8E.86.E5.8F.B2\">三原色光模式</a></p>\n<p><a href=\"http://www.ebaomonthly.com/window/photo/lesson/color_01.htm\">色彩原理</a></p>\n<h3 id=\"颜色的亮度\"><a href=\"#颜色的亮度\" class=\"headerlink\" title=\"颜色的亮度\"></a>颜色的亮度</h3><p>人的眼睛感受颜色的亮度是不一样的，感受有些颜色会比别的颜色亮一些，比如我们会感觉蓝色暗些，而绿色最亮。一般来说在波长555纳米到560纳米之间的颜色，人类感觉最亮。如下图：</p>\n<p><img src=\"/images/color_space/spectrum2.png\" alt=\"颜色的亮度\"></p>\n<p>在用色相（Hue）, 饱和度（Saturation）, 和亮度（Lightness）描述颜色的时候，就需指定这种颜色的亮度。人类眼睛对可见光颜色的亮度感觉可以用光度函数（luminosity function）来描述：</p>\n<p><img src=\"/images/color_space/lumfunc.png\" alt=\"光度函数\"></p>\n<h3 id=\"光谱功率分布（Spectral-Power-Distribution）\"><a href=\"#光谱功率分布（Spectral-Power-Distribution）\" class=\"headerlink\" title=\"光谱功率分布（Spectral Power Distribution）\"></a>光谱功率分布（Spectral Power Distribution）</h3><p><strong>光谱图：</strong></p>\n<p>我们周围的灯看起来都特别的白，但每一种灯都不可能等量的发出可见光谱中所有的光。荧光灯发出发出的大部分颜色的光是差不多的，但有几个波段的光特别的强。白炽灯强列的发出所有颜色的光，波长越长越强烈（这是为什么白炽灯看起起偏黄的原因），而且有大部分超出了可见光的部分，也就是产生大量的红外线。这也是为什么白炽灯会浪费电的原因。</p>\n<p><img src=\"/images/color_space/Fluorescentlamps.png\" alt=\"荧光灯光谱图\"> <img src=\"/images/color_space/Incandescentlight.png\" alt=\"白炽灯光谱图\"></p>\n<p>每一灯的的颜色成份都是独一无二的，就像人的指纹一样，这叫灯的光谱图或光谱功率分布Spectral Power Distribution（SPD）。</p>\n<p><strong>白然光：</strong> 因为我们地球就靠太阳照亮的，太阳光我们也称之为白然光（natural lighting），所以太阳的光谱图是一个特别的光谱图。因为我们眼睛经过了千万年去适应太阳光，所以如果我们造的灯的光谱能接近太阳光的光谱，我们就可以说这灯叫自然光灯，质量特别好。如果灯能一直发出类似太阳光谱的的灯，它这灯就可以叫做太阳灯了。</p>\n<p><strong>D65:</strong> 但是太阳光光谱的测定受各种因素的影响，比如我在北极测，他在喜马拉雅测，他在太平洋中央测，你在下雨天测，这样每个人测出来的太阳光光谱肯定是不一样的，这样人们对太阳光的定义就不一样了。所以国际照明委员会（International Commission on Illumination）定义了一个标准叫<strong>D65</strong>，符合欧洲、太平洋周边地区视觉颜色标准，模拟平均北天空日光，这标准大概就是北欧天气好的时候太阳光的样子。D65也叫标准日光光谱。</p>\n<blockquote>\n<p><em>ICE 还定义了其它标准比如 D50, D75等，有兴趣可看看 <a href=\"https://en.wikipedia.org/wiki/Standard_illuminant\">主要标准光源资料</a></em></p>\n</blockquote>\n<h4 id=\"物体的SDP\"><a href=\"#物体的SDP\" class=\"headerlink\" title=\"物体的SDP\"></a>物体的SDP</h4><p>不仅是发光物体有独有颜色光谱曲线，不会发光的物体也有独一无二的光谱反射率曲线(spectral reflectance curve)。因为不发光的物体不发光，它会吸收部分照射它的光，并反射回未吸收的那部分，这部也会被我们看到。每一个物体都有其特别的光谱反射率曲线。如下为A（黄油），B(西红柿)，C（大白菜）的光谱反射率曲线：</p>\n<p><img src=\"/images/color_space/spd.png\" alt=\"光谱反射率曲线\"> </p>\n<p>国际照明委员会也定义了一个非常有用的标准 <strong>显色指数（Color Rendering Index）</strong>：光源对物体的显色能力称为显色性，是通过与同色温的参考或基准光源（白炽灯或画光）下物体外观颜色的比较。</p>\n<blockquote>\n<p>色温<br>色温有时候会用来描述颜色，就像我们会蓝色比黄色冷。这个名词原本描述的现象是，当一个物体的温度达到一定值会发出可见光，而这可见光的颜色取决于这个物体温度的大小。这个现象叫黑体辐射。太阳可看成一个黑体，它的温度大概是5700K。</p>\n</blockquote>\n<h3 id=\"什么是白色？\"><a href=\"#什么是白色？\" class=\"headerlink\" title=\"什么是白色？\"></a>什么是白色？</h3><p>当可见光谱中所有成份的光都等量时，就是标准的白色。这种光源在现实之中是不存在的，那的光谱图叫<strong>E标准光源(E illuminant)</strong>,对应ICE标准光源中的E光源。</p>\n<p><img src=\"/images/color_space/illuminantE.png\"></p>\n<p>学习资料：</p>\n<p><a href=\"http://www.scratchapixel.com/lessons/digital-imaging/colors/introduction\">Scratchapixel: Introduction to Light, Color and Color Space</a></p>\n<p><a href=\"https://developer.apple.com/library/content/documentation/GraphicsImaging/Conceptual/csintro/csintro_ovrvw/csintro_ovrvw.html#//apple_ref/doc/uid/TP30001148-CH205-BBCBDGDD\">Apple: Color: A Brief Overview</a></p>\n","site":{"data":{}},"excerpt":"<!--# 颜色和颜色空间之颜色-->\n\n<p>白色代表学术诚实和肉体之爱的纯净；红色代表艺术激情、政治信念、血气之勇；蓝色代表在音乐和数学上的内省发现、医疗助人以及万物的基本结构；翠绿代表和自然共鸣、和技术同乐以及对受威胁生命的保护；黑色代表人类神秘的创作，这是德姆・瑞亚的民族颜色的含义。我喜欢蓝色，你喜欢绿色，人家喜欢黑色，这在日常颜色真的很简单，只需要感性的感受它的美就可以。但当我看到“颜色空间”，进而去想理解颜色的时候，发现我们对颜色的描述真的是很复杂，涉及到光的物理性质，以及的生理结构等方面。</p>\n<h2 id=\"什么是颜色\"><a href=\"#什么是颜色\" class=\"headerlink\" title=\"什么是颜色\"></a>什么是颜色</h2><h3 id=\"光\"><a href=\"#光\" class=\"headerlink\" title=\"光\"></a>光</h3><p>我们能看各种颜色的大千世界，一切都始于光。所要明白颜色是什么，我们先得明白光是什么东西。光有粒子性和波动性，但在研究颜色的问题上，都使用光的波动性来研究，即光是一种波，物理学上叫电磁波。由于有不同波长的电磁波，就产生不同颜色的光，比如蓝色光中光波的波长比红色光中光波的波长短些。<br>光波的波长用希腊字母 λ 表示，可见光的波长大概时380-740纳米，大于740纳米和小于380纳米的光波人类的眼睛就看不到了，比如紫外线或红外线，但有些动物的眼睛可以感知到。人类可见光谱如下：<br><img src=\"/images/color_space/spectrum1.png\" alt=\"可见光谱\"><br>白光是由所有可见光颜色组合而成的（牛顿使棱镜实验），所以拿可见光谱中所有的光，并按合适的比例进行混合就可造出白光。</p>","more":"<h3 id=\"人的睛眼\"><a href=\"#人的睛眼\" class=\"headerlink\" title=\"人的睛眼\"></a>人的睛眼</h3><p>人的睛眼视网膜上有两类主要的光感细胞，视锥细胞 和 视杆细胞。</p>\n<p>**<a href=\"https://zh.wikipedia.org/wiki/%E8%A7%86%E9%94%A5%E7%BB%86%E8%83%9E\">视锥细胞（cone cell ）</a>**：主要分布在视网膜中心，视锥细胞主要负责颜色识别，并且在相对较亮的光照下更能发挥作用。</p>\n<p>**<a href=\"https://zh.wikipedia.org/wiki/%E8%A7%86%E6%9D%86%E7%BB%86%E8%83%9E\">视杆细胞（rod cells）</a>**：主要分布在视网膜边上，且较视锥细胞对光更敏感，几乎主要全部用于夜视力。</p>\n<p>视锥细胞有三种（亲红，亲绿，亲蓝视色素），而且每一种都对特定的可见光范围敏感。这三种视锥细胞刚好大约分别对红色，绿色，和蓝色最为敏感，而这三种颜色也是计算机显示器构造颜色的三原色。所以说视锥细胞负责颜色识别（或者叫三原色识别）。</p>\n<h3 id=\"原色以及增减色原理\"><a href=\"#原色以及增减色原理\" class=\"headerlink\" title=\"原色以及增减色原理\"></a>原色以及增减色原理</h3><p><strong>原色有两种定义：</strong></p>\n<p><strong>1. 红色，绿色，蓝色。</strong>增色法中的原色，计算机或照明行业使用方法。</p>\n<blockquote>\n<p>因为上面提到的生理的原因（视锥细胞对红色，绿色，和蓝色最为敏感），因此使用红，绿，蓝作为三原色,这三种颜色是相互独立的，任何一种都不能使用其它二种颜色混合。使用此三原色按比例混合成其它的颜色。</p>\n<p>红色+绿色=黄色</p>\n<p>绿色+蓝色=青色</p>\n<p>红色+蓝色=品红</p>\n<p>红色+绿色+蓝色=白色</p>\n<p>黄色、青色、品红都是由两种及色相混合而成，所以它们又称相加二次色。</p>\n<p><img src=\"/images/color_space/Additive.png\" alt=\"增色法图\"></p>\n</blockquote>\n<p><strong>2. 黄色，品红，青色。</strong>减色法中的原色，绘画艺术方面使用此方法。</p>\n<blockquote>\n<p>在白光照射下，青色颜料能吸收红色而反射青色，黄色颜料吸收蓝色而反射黄色，品红颜料吸收绿色而反射品红<br>如下图黄色的产生。白光（红+绿+蓝）照射黄色颜料，其中的蓝色光成份被吸收，反射回红和绿色成份的光，而红色光加绿色光我们的眼睛即感知为黄色。</p>\n<p><img src=\"/images/color_space/yellow.png\" alt=\"减色法黄色的产生\"></p>\n<p>白色-红色=青色</p>\n<p>白色-绿色=品红</p>\n<p>白色-蓝色=黄色</p>\n<p>另外，如果把青色和黄色两种颜料混合，在白光照射下，由于颜料吸收了红色和蓝色，而反射了绿色，对于颜料的混合我们表示如下：</p>\n</blockquote>\n<blockquote>\n<p>颜料(黄色+青色)=白色-红色-蓝色=绿色</p>\n</blockquote>\n<blockquote>\n<p>颜料(品红+青色)=白色-红色-绿色=蓝色</p>\n<p>颜料(黄色+品红)=白色-绿色-蓝色=红色</p>\n<p><img src=\"/images/color_space/Subtractive.png\" alt=\"减色法图\"></p>\n</blockquote>\n<p>资料:</p>\n<p><a href=\"https://zh.wikipedia.org/wiki/%E4%B8%89%E5%8E%9F%E8%89%B2%E5%85%89%E6%A8%A1%E5%BC%8F#RGB.E9.A2.9C.E8.89.B2.E6.A8.A1.E5.9E.8B.E7.90.86.E8.AE.BA.E4.B8.8E.E5.BA.94.E7.94.A8.E7.9A.84.E5.8E.86.E5.8F.B2\">三原色光模式</a></p>\n<p><a href=\"http://www.ebaomonthly.com/window/photo/lesson/color_01.htm\">色彩原理</a></p>\n<h3 id=\"颜色的亮度\"><a href=\"#颜色的亮度\" class=\"headerlink\" title=\"颜色的亮度\"></a>颜色的亮度</h3><p>人的眼睛感受颜色的亮度是不一样的，感受有些颜色会比别的颜色亮一些，比如我们会感觉蓝色暗些，而绿色最亮。一般来说在波长555纳米到560纳米之间的颜色，人类感觉最亮。如下图：</p>\n<p><img src=\"/images/color_space/spectrum2.png\" alt=\"颜色的亮度\"></p>\n<p>在用色相（Hue）, 饱和度（Saturation）, 和亮度（Lightness）描述颜色的时候，就需指定这种颜色的亮度。人类眼睛对可见光颜色的亮度感觉可以用光度函数（luminosity function）来描述：</p>\n<p><img src=\"/images/color_space/lumfunc.png\" alt=\"光度函数\"></p>\n<h3 id=\"光谱功率分布（Spectral-Power-Distribution）\"><a href=\"#光谱功率分布（Spectral-Power-Distribution）\" class=\"headerlink\" title=\"光谱功率分布（Spectral Power Distribution）\"></a>光谱功率分布（Spectral Power Distribution）</h3><p><strong>光谱图：</strong></p>\n<p>我们周围的灯看起来都特别的白，但每一种灯都不可能等量的发出可见光谱中所有的光。荧光灯发出发出的大部分颜色的光是差不多的，但有几个波段的光特别的强。白炽灯强列的发出所有颜色的光，波长越长越强烈（这是为什么白炽灯看起起偏黄的原因），而且有大部分超出了可见光的部分，也就是产生大量的红外线。这也是为什么白炽灯会浪费电的原因。</p>\n<p><img src=\"/images/color_space/Fluorescentlamps.png\" alt=\"荧光灯光谱图\"> <img src=\"/images/color_space/Incandescentlight.png\" alt=\"白炽灯光谱图\"></p>\n<p>每一灯的的颜色成份都是独一无二的，就像人的指纹一样，这叫灯的光谱图或光谱功率分布Spectral Power Distribution（SPD）。</p>\n<p><strong>白然光：</strong> 因为我们地球就靠太阳照亮的，太阳光我们也称之为白然光（natural lighting），所以太阳的光谱图是一个特别的光谱图。因为我们眼睛经过了千万年去适应太阳光，所以如果我们造的灯的光谱能接近太阳光的光谱，我们就可以说这灯叫自然光灯，质量特别好。如果灯能一直发出类似太阳光谱的的灯，它这灯就可以叫做太阳灯了。</p>\n<p><strong>D65:</strong> 但是太阳光光谱的测定受各种因素的影响，比如我在北极测，他在喜马拉雅测，他在太平洋中央测，你在下雨天测，这样每个人测出来的太阳光光谱肯定是不一样的，这样人们对太阳光的定义就不一样了。所以国际照明委员会（International Commission on Illumination）定义了一个标准叫<strong>D65</strong>，符合欧洲、太平洋周边地区视觉颜色标准，模拟平均北天空日光，这标准大概就是北欧天气好的时候太阳光的样子。D65也叫标准日光光谱。</p>\n<blockquote>\n<p><em>ICE 还定义了其它标准比如 D50, D75等，有兴趣可看看 <a href=\"https://en.wikipedia.org/wiki/Standard_illuminant\">主要标准光源资料</a></em></p>\n</blockquote>\n<h4 id=\"物体的SDP\"><a href=\"#物体的SDP\" class=\"headerlink\" title=\"物体的SDP\"></a>物体的SDP</h4><p>不仅是发光物体有独有颜色光谱曲线，不会发光的物体也有独一无二的光谱反射率曲线(spectral reflectance curve)。因为不发光的物体不发光，它会吸收部分照射它的光，并反射回未吸收的那部分，这部也会被我们看到。每一个物体都有其特别的光谱反射率曲线。如下为A（黄油），B(西红柿)，C（大白菜）的光谱反射率曲线：</p>\n<p><img src=\"/images/color_space/spd.png\" alt=\"光谱反射率曲线\"> </p>\n<p>国际照明委员会也定义了一个非常有用的标准 <strong>显色指数（Color Rendering Index）</strong>：光源对物体的显色能力称为显色性，是通过与同色温的参考或基准光源（白炽灯或画光）下物体外观颜色的比较。</p>\n<blockquote>\n<p>色温<br>色温有时候会用来描述颜色，就像我们会蓝色比黄色冷。这个名词原本描述的现象是，当一个物体的温度达到一定值会发出可见光，而这可见光的颜色取决于这个物体温度的大小。这个现象叫黑体辐射。太阳可看成一个黑体，它的温度大概是5700K。</p>\n</blockquote>\n<h3 id=\"什么是白色？\"><a href=\"#什么是白色？\" class=\"headerlink\" title=\"什么是白色？\"></a>什么是白色？</h3><p>当可见光谱中所有成份的光都等量时，就是标准的白色。这种光源在现实之中是不存在的，那的光谱图叫<strong>E标准光源(E illuminant)</strong>,对应ICE标准光源中的E光源。</p>\n<p><img src=\"/images/color_space/illuminantE.png\"></p>\n<p>学习资料：</p>\n<p><a href=\"http://www.scratchapixel.com/lessons/digital-imaging/colors/introduction\">Scratchapixel: Introduction to Light, Color and Color Space</a></p>\n<p><a href=\"https://developer.apple.com/library/content/documentation/GraphicsImaging/Conceptual/csintro/csintro_ovrvw/csintro_ovrvw.html#//apple_ref/doc/uid/TP30001148-CH205-BBCBDGDD\">Apple: Color: A Brief Overview</a></p>"},{"title":"高级包装工具(APT)-Advanced Packaging","date":"2021-10-20T03:15:18.000Z","_content":"\n<!--# 高级包装工具(APT)-Advanced Packaging-->\n\nDebian Linux uses [dpkg packaging system](https://wiki.debian.org/DebianPackageManagement). A packaging system is a way to provide programs and applications for installation. \n\n[APT](https://wiki.debian.org/Apt) (Advanced Package Tool) is the command line tool to interact with the packaging system in Debian, and Debian-based Linux Distributions.\n\nThere is already dpkg commands to manage it. But APT is a more friendly way to handle packaging. You can use it to find and install new packages, upgrade packages, remove the packages etc.\n\n<!-- more -->\n\n## `APT` VS `apt-get`\n\nDebin系统使用高级包装工具(APT)系统即Advanced Packaging Tool--与命令行apt不是同一个概念--来管理系统软件的功能，且可以从软件源获取并解析软件包依赖。\n\n可以使用Debin包管理系统工具有很多，常用的有：\n\n* Aptitude是一个命令行工具，它同时提供一个基于文本的用户界面。该程序提供了一些改进功能，例如对软件包元信息的增强搜索。\n* apt-get和apt-cache等命令是标准apt软件包中的命令行工具。apt-get用于安装和删除软件包，apt-cache用于搜索软件包及显示软件包信息。\n* 新版apt软件包提供了apt命令作为面向用户使用的工具。与传统apt-get和aptitude相比，它提供了进度条显示、彩色字符支持等用户友好的新功能。\n\n\n`apt`第一个稳定版本是在2014年发布的，但在2016 随着Ubuntu 16.04的发布，大众才慢慢关注到这个工具。从之前的`apt-get install package`慢慢变成了`apt install package`\n\n`apt`包含了部分 `apt-get`及`apt-cache`的用于包管理的指令，并且对于用户更友好。\n\n[From StackExchange：](https://askubuntu.com/questions/445384/what-is-the-difference-between-apt-and-apt-get)\n\napt-get may be considered as lower-level and \"back-end\", and support other APT-based tools. apt is designed for end-users (human) and its output may be changed between versions.\n\n>The `apt` command is meant to be pleasant for end users and does not need to be backward compatible like apt-get(8).\n>\nThis is the correct answer (for Debian and Ubuntu as well as other derivatives like Mint). In particular, running sudo apt upgrade will perform the same operations as sudo apt-get upgrade --with-new-pkgs. It will install new packages but, unlike sudo apt-get dist-upgrade, it will not remove old ones (except when installing a new version of the same package, of course--which sudo apt-get upgrade will also do). man apt further corroborates that this answer is correct. – Eliah Kagan\n\n## Install `apt`\n\n### On Debian based systems\n从这里[apt Source-Debian](http://ftp.us.debian.org/debian/pool/main/a/apt/)找到`apt`的资源及其版本。\n\n1. 使用`wget`下载\n\n`wget http://ftp.us.debian.org/debian/pool/main/a/apt/apt_2.4.2_amd64.deb -O apt.deb -O apt.deb`\n\n2. 使用`dpkg`安装apt\n\n`sudo dpkg -i apt.deb` or without sudo `pkexec dpkg -i apt.deb`\n\n### On Ubuntu based system\n[apt Source-Ubuntu](http://security.ubuntu.com/ubuntu/pool/main/a/apt/?C=M;O=D)\n\n\n\n## `apt` Commands\n\n#### 包数据库及更新\n\n`sudo apt update`\t// 只更新package数据库。如果有新版本，会知道有新版本，但不会安装\n\n##### 更改包数据库源\n更改文件`/etc/apt/sources.list`中的url为想设置的源url。\n\n如：\n\n```\n$ cat /etc/apt/sources.list\ndeb http://raspbian.raspberrypi.org/raspbian/ buster main contrib non-free rpi\n\n所有deb后的url更改为 archive.ubuntu.com/ubuntu\ndeb http://archive.ubuntu.com/ubuntu/ buster main contrib non-free rpi\n```\n\n\n#### 更新已安装的包\n\n`sudo apt upgrade` // 根package数据库，来更新安装所需要的包。如果package数据库没有更新，可能会安装不到最新的版本\n\n`sudo apt full-upgrade` // 会移除更新需要移除的已经安装了的旧包\n\n所以最方便更新包及包库的命令为：\n\n`sudo apt update && sudo apt upgrade -y`\n\n#### 搜索安装包\n`apt search <search item>`\n\n#### 显示安装包信息\n`apt list <search item>`\n\n\n#### 安装-包\n`sudo apt install <pack_name>`\n\n`sudo apt install <package_1> <package_2> <package_3>` // 同时安装多个包\n`sudo apt install <package_name> --no-upgrade`\t// 只安装，不更新\n`sudo apt install <package_name> --only-upgrade`\t// 只更新，不安装\n`sudo apt install <package_name>=<version_number>`\t// 安装特别版本的包\n\n#### 移除安装包\n`sudo apt remove <package_name>` // 称除可执行行文件，保留配置文件，下次安装后会有相同的配置\n\n或者：\n\n`sudo apt purge <package_name>` // 移除所有包括配置文件\n\n可以在`remove`之后运行`purge`，通常来说`apt remove`对卸载一个包来说足够了。\n\n#### 查看安装包\n`apt list` 列出所有可用包\n`apt list --upgradable` // 列出可更新的包\n`apt list --installed`\t\t// 列出已安装的包\n`apt list --all-versions` // 列出当前系统所有可用包\n\n\n#### 管理\n`sudo apt autoremove`\n\n或者\n\n`sudo apt-get autoremove`\n\n当安装一些有依赖的包时，对应的依赖包也会安装，但当`remove`有依赖的包的包时，这些依赖包并不会移除掉，会保存在系统中。 这个命令会移除这些‘失主’的依赖包。\n\n##### apt cache 文件\n\napt 包管理系统会缓存DEB包于`/var/cache/apt/archives`，会缓存一些你卸载了的包，时间长了可能会占很大的存储空间。使用下面的命令查看文件大小：\n\n`sudo du -sh /var/cache/apt`\n\n如果文件大，有两种方式管理这个缓存文件\n\n`sudo apt-get autoclean` // 删除过期的或停用的版本缓存\n\n`sudo apt-get clean` // 删除缓存整个\n\n\n**参考资料：**\n\n[维基百科-Debian](https://zh.wikipedia.org/zh-cn/Debian)\n\n[维基百科-APT](https://en.wikipedia.org/wiki/APT_(software))\n\n[Using apt Commands in Linux](https://itsfoss.com/apt-command-guide/)\n","source":"_posts/Linux/Linux命令_APT_包管理.md","raw":"---\ntitle: 高级包装工具(APT)-Advanced Packaging\ndate: 2021-10-20 11:15:18\ncategories:\n- Linux\ntags:\n- Linux\n- APT\n---\n\n<!--# 高级包装工具(APT)-Advanced Packaging-->\n\nDebian Linux uses [dpkg packaging system](https://wiki.debian.org/DebianPackageManagement). A packaging system is a way to provide programs and applications for installation. \n\n[APT](https://wiki.debian.org/Apt) (Advanced Package Tool) is the command line tool to interact with the packaging system in Debian, and Debian-based Linux Distributions.\n\nThere is already dpkg commands to manage it. But APT is a more friendly way to handle packaging. You can use it to find and install new packages, upgrade packages, remove the packages etc.\n\n<!-- more -->\n\n## `APT` VS `apt-get`\n\nDebin系统使用高级包装工具(APT)系统即Advanced Packaging Tool--与命令行apt不是同一个概念--来管理系统软件的功能，且可以从软件源获取并解析软件包依赖。\n\n可以使用Debin包管理系统工具有很多，常用的有：\n\n* Aptitude是一个命令行工具，它同时提供一个基于文本的用户界面。该程序提供了一些改进功能，例如对软件包元信息的增强搜索。\n* apt-get和apt-cache等命令是标准apt软件包中的命令行工具。apt-get用于安装和删除软件包，apt-cache用于搜索软件包及显示软件包信息。\n* 新版apt软件包提供了apt命令作为面向用户使用的工具。与传统apt-get和aptitude相比，它提供了进度条显示、彩色字符支持等用户友好的新功能。\n\n\n`apt`第一个稳定版本是在2014年发布的，但在2016 随着Ubuntu 16.04的发布，大众才慢慢关注到这个工具。从之前的`apt-get install package`慢慢变成了`apt install package`\n\n`apt`包含了部分 `apt-get`及`apt-cache`的用于包管理的指令，并且对于用户更友好。\n\n[From StackExchange：](https://askubuntu.com/questions/445384/what-is-the-difference-between-apt-and-apt-get)\n\napt-get may be considered as lower-level and \"back-end\", and support other APT-based tools. apt is designed for end-users (human) and its output may be changed between versions.\n\n>The `apt` command is meant to be pleasant for end users and does not need to be backward compatible like apt-get(8).\n>\nThis is the correct answer (for Debian and Ubuntu as well as other derivatives like Mint). In particular, running sudo apt upgrade will perform the same operations as sudo apt-get upgrade --with-new-pkgs. It will install new packages but, unlike sudo apt-get dist-upgrade, it will not remove old ones (except when installing a new version of the same package, of course--which sudo apt-get upgrade will also do). man apt further corroborates that this answer is correct. – Eliah Kagan\n\n## Install `apt`\n\n### On Debian based systems\n从这里[apt Source-Debian](http://ftp.us.debian.org/debian/pool/main/a/apt/)找到`apt`的资源及其版本。\n\n1. 使用`wget`下载\n\n`wget http://ftp.us.debian.org/debian/pool/main/a/apt/apt_2.4.2_amd64.deb -O apt.deb -O apt.deb`\n\n2. 使用`dpkg`安装apt\n\n`sudo dpkg -i apt.deb` or without sudo `pkexec dpkg -i apt.deb`\n\n### On Ubuntu based system\n[apt Source-Ubuntu](http://security.ubuntu.com/ubuntu/pool/main/a/apt/?C=M;O=D)\n\n\n\n## `apt` Commands\n\n#### 包数据库及更新\n\n`sudo apt update`\t// 只更新package数据库。如果有新版本，会知道有新版本，但不会安装\n\n##### 更改包数据库源\n更改文件`/etc/apt/sources.list`中的url为想设置的源url。\n\n如：\n\n```\n$ cat /etc/apt/sources.list\ndeb http://raspbian.raspberrypi.org/raspbian/ buster main contrib non-free rpi\n\n所有deb后的url更改为 archive.ubuntu.com/ubuntu\ndeb http://archive.ubuntu.com/ubuntu/ buster main contrib non-free rpi\n```\n\n\n#### 更新已安装的包\n\n`sudo apt upgrade` // 根package数据库，来更新安装所需要的包。如果package数据库没有更新，可能会安装不到最新的版本\n\n`sudo apt full-upgrade` // 会移除更新需要移除的已经安装了的旧包\n\n所以最方便更新包及包库的命令为：\n\n`sudo apt update && sudo apt upgrade -y`\n\n#### 搜索安装包\n`apt search <search item>`\n\n#### 显示安装包信息\n`apt list <search item>`\n\n\n#### 安装-包\n`sudo apt install <pack_name>`\n\n`sudo apt install <package_1> <package_2> <package_3>` // 同时安装多个包\n`sudo apt install <package_name> --no-upgrade`\t// 只安装，不更新\n`sudo apt install <package_name> --only-upgrade`\t// 只更新，不安装\n`sudo apt install <package_name>=<version_number>`\t// 安装特别版本的包\n\n#### 移除安装包\n`sudo apt remove <package_name>` // 称除可执行行文件，保留配置文件，下次安装后会有相同的配置\n\n或者：\n\n`sudo apt purge <package_name>` // 移除所有包括配置文件\n\n可以在`remove`之后运行`purge`，通常来说`apt remove`对卸载一个包来说足够了。\n\n#### 查看安装包\n`apt list` 列出所有可用包\n`apt list --upgradable` // 列出可更新的包\n`apt list --installed`\t\t// 列出已安装的包\n`apt list --all-versions` // 列出当前系统所有可用包\n\n\n#### 管理\n`sudo apt autoremove`\n\n或者\n\n`sudo apt-get autoremove`\n\n当安装一些有依赖的包时，对应的依赖包也会安装，但当`remove`有依赖的包的包时，这些依赖包并不会移除掉，会保存在系统中。 这个命令会移除这些‘失主’的依赖包。\n\n##### apt cache 文件\n\napt 包管理系统会缓存DEB包于`/var/cache/apt/archives`，会缓存一些你卸载了的包，时间长了可能会占很大的存储空间。使用下面的命令查看文件大小：\n\n`sudo du -sh /var/cache/apt`\n\n如果文件大，有两种方式管理这个缓存文件\n\n`sudo apt-get autoclean` // 删除过期的或停用的版本缓存\n\n`sudo apt-get clean` // 删除缓存整个\n\n\n**参考资料：**\n\n[维基百科-Debian](https://zh.wikipedia.org/zh-cn/Debian)\n\n[维基百科-APT](https://en.wikipedia.org/wiki/APT_(software))\n\n[Using apt Commands in Linux](https://itsfoss.com/apt-command-guide/)\n","slug":"Linux/Linux命令_APT_包管理","published":1,"updated":"2022-07-06T12:21:31.434Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl74l5j5m00072a374ljj3zlj","content":"<!--# 高级包装工具(APT)-Advanced Packaging-->\n\n<p>Debian Linux uses <a href=\"https://wiki.debian.org/DebianPackageManagement\">dpkg packaging system</a>. A packaging system is a way to provide programs and applications for installation. </p>\n<p><a href=\"https://wiki.debian.org/Apt\">APT</a> (Advanced Package Tool) is the command line tool to interact with the packaging system in Debian, and Debian-based Linux Distributions.</p>\n<p>There is already dpkg commands to manage it. But APT is a more friendly way to handle packaging. You can use it to find and install new packages, upgrade packages, remove the packages etc.</p>\n<a id=\"more\"></a>\n\n<h2 id=\"APT-VS-apt-get\"><a href=\"#APT-VS-apt-get\" class=\"headerlink\" title=\"APT VS apt-get\"></a><code>APT</code> VS <code>apt-get</code></h2><p>Debin系统使用高级包装工具(APT)系统即Advanced Packaging Tool–与命令行apt不是同一个概念–来管理系统软件的功能，且可以从软件源获取并解析软件包依赖。</p>\n<p>可以使用Debin包管理系统工具有很多，常用的有：</p>\n<ul>\n<li>Aptitude是一个命令行工具，它同时提供一个基于文本的用户界面。该程序提供了一些改进功能，例如对软件包元信息的增强搜索。</li>\n<li>apt-get和apt-cache等命令是标准apt软件包中的命令行工具。apt-get用于安装和删除软件包，apt-cache用于搜索软件包及显示软件包信息。</li>\n<li>新版apt软件包提供了apt命令作为面向用户使用的工具。与传统apt-get和aptitude相比，它提供了进度条显示、彩色字符支持等用户友好的新功能。</li>\n</ul>\n<p><code>apt</code>第一个稳定版本是在2014年发布的，但在2016 随着Ubuntu 16.04的发布，大众才慢慢关注到这个工具。从之前的<code>apt-get install package</code>慢慢变成了<code>apt install package</code></p>\n<p><code>apt</code>包含了部分 <code>apt-get</code>及<code>apt-cache</code>的用于包管理的指令，并且对于用户更友好。</p>\n<p><a href=\"https://askubuntu.com/questions/445384/what-is-the-difference-between-apt-and-apt-get\">From StackExchange：</a></p>\n<p>apt-get may be considered as lower-level and “back-end”, and support other APT-based tools. apt is designed for end-users (human) and its output may be changed between versions.</p>\n<blockquote>\n<p>The <code>apt</code> command is meant to be pleasant for end users and does not need to be backward compatible like apt-get(8).</p>\n</blockquote>\n<p>This is the correct answer (for Debian and Ubuntu as well as other derivatives like Mint). In particular, running sudo apt upgrade will perform the same operations as sudo apt-get upgrade –with-new-pkgs. It will install new packages but, unlike sudo apt-get dist-upgrade, it will not remove old ones (except when installing a new version of the same package, of course–which sudo apt-get upgrade will also do). man apt further corroborates that this answer is correct. – Eliah Kagan</p>\n<h2 id=\"Install-apt\"><a href=\"#Install-apt\" class=\"headerlink\" title=\"Install apt\"></a>Install <code>apt</code></h2><h3 id=\"On-Debian-based-systems\"><a href=\"#On-Debian-based-systems\" class=\"headerlink\" title=\"On Debian based systems\"></a>On Debian based systems</h3><p>从这里<a href=\"http://ftp.us.debian.org/debian/pool/main/a/apt/\">apt Source-Debian</a>找到<code>apt</code>的资源及其版本。</p>\n<ol>\n<li>使用<code>wget</code>下载</li>\n</ol>\n<p><code>wget http://ftp.us.debian.org/debian/pool/main/a/apt/apt_2.4.2_amd64.deb -O apt.deb -O apt.deb</code></p>\n<ol start=\"2\">\n<li>使用<code>dpkg</code>安装apt</li>\n</ol>\n<p><code>sudo dpkg -i apt.deb</code> or without sudo <code>pkexec dpkg -i apt.deb</code></p>\n<h3 id=\"On-Ubuntu-based-system\"><a href=\"#On-Ubuntu-based-system\" class=\"headerlink\" title=\"On Ubuntu based system\"></a>On Ubuntu based system</h3><p><a href=\"http://security.ubuntu.com/ubuntu/pool/main/a/apt/?C=M;O=D\">apt Source-Ubuntu</a></p>\n<h2 id=\"apt-Commands\"><a href=\"#apt-Commands\" class=\"headerlink\" title=\"apt Commands\"></a><code>apt</code> Commands</h2><h4 id=\"包数据库及更新\"><a href=\"#包数据库及更新\" class=\"headerlink\" title=\"包数据库及更新\"></a>包数据库及更新</h4><p><code>sudo apt update</code>    // 只更新package数据库。如果有新版本，会知道有新版本，但不会安装</p>\n<h5 id=\"更改包数据库源\"><a href=\"#更改包数据库源\" class=\"headerlink\" title=\"更改包数据库源\"></a>更改包数据库源</h5><p>更改文件<code>/etc/apt/sources.list</code>中的url为想设置的源url。</p>\n<p>如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cat &#x2F;etc&#x2F;apt&#x2F;sources.list</span><br><span class=\"line\">deb http:&#x2F;&#x2F;raspbian.raspberrypi.org&#x2F;raspbian&#x2F; buster main contrib non-free rpi</span><br><span class=\"line\"></span><br><span class=\"line\">所有deb后的url更改为 archive.ubuntu.com&#x2F;ubuntu</span><br><span class=\"line\">deb http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; buster main contrib non-free rpi</span><br></pre></td></tr></table></figure>\n\n\n<h4 id=\"更新已安装的包\"><a href=\"#更新已安装的包\" class=\"headerlink\" title=\"更新已安装的包\"></a>更新已安装的包</h4><p><code>sudo apt upgrade</code> // 根package数据库，来更新安装所需要的包。如果package数据库没有更新，可能会安装不到最新的版本</p>\n<p><code>sudo apt full-upgrade</code> // 会移除更新需要移除的已经安装了的旧包</p>\n<p>所以最方便更新包及包库的命令为：</p>\n<p><code>sudo apt update &amp;&amp; sudo apt upgrade -y</code></p>\n<h4 id=\"搜索安装包\"><a href=\"#搜索安装包\" class=\"headerlink\" title=\"搜索安装包\"></a>搜索安装包</h4><p><code>apt search &lt;search item&gt;</code></p>\n<h4 id=\"显示安装包信息\"><a href=\"#显示安装包信息\" class=\"headerlink\" title=\"显示安装包信息\"></a>显示安装包信息</h4><p><code>apt list &lt;search item&gt;</code></p>\n<h4 id=\"安装-包\"><a href=\"#安装-包\" class=\"headerlink\" title=\"安装-包\"></a>安装-包</h4><p><code>sudo apt install &lt;pack_name&gt;</code></p>\n<p><code>sudo apt install &lt;package_1&gt; &lt;package_2&gt; &lt;package_3&gt;</code> // 同时安装多个包<br><code>sudo apt install &lt;package_name&gt; --no-upgrade</code>    // 只安装，不更新<br><code>sudo apt install &lt;package_name&gt; --only-upgrade</code>    // 只更新，不安装<br><code>sudo apt install &lt;package_name&gt;=&lt;version_number&gt;</code>    // 安装特别版本的包</p>\n<h4 id=\"移除安装包\"><a href=\"#移除安装包\" class=\"headerlink\" title=\"移除安装包\"></a>移除安装包</h4><p><code>sudo apt remove &lt;package_name&gt;</code> // 称除可执行行文件，保留配置文件，下次安装后会有相同的配置</p>\n<p>或者：</p>\n<p><code>sudo apt purge &lt;package_name&gt;</code> // 移除所有包括配置文件</p>\n<p>可以在<code>remove</code>之后运行<code>purge</code>，通常来说<code>apt remove</code>对卸载一个包来说足够了。</p>\n<h4 id=\"查看安装包\"><a href=\"#查看安装包\" class=\"headerlink\" title=\"查看安装包\"></a>查看安装包</h4><p><code>apt list</code> 列出所有可用包<br><code>apt list --upgradable</code> // 列出可更新的包<br><code>apt list --installed</code>        // 列出已安装的包<br><code>apt list --all-versions</code> // 列出当前系统所有可用包</p>\n<h4 id=\"管理\"><a href=\"#管理\" class=\"headerlink\" title=\"管理\"></a>管理</h4><p><code>sudo apt autoremove</code></p>\n<p>或者</p>\n<p><code>sudo apt-get autoremove</code></p>\n<p>当安装一些有依赖的包时，对应的依赖包也会安装，但当<code>remove</code>有依赖的包的包时，这些依赖包并不会移除掉，会保存在系统中。 这个命令会移除这些‘失主’的依赖包。</p>\n<h5 id=\"apt-cache-文件\"><a href=\"#apt-cache-文件\" class=\"headerlink\" title=\"apt cache 文件\"></a>apt cache 文件</h5><p>apt 包管理系统会缓存DEB包于<code>/var/cache/apt/archives</code>，会缓存一些你卸载了的包，时间长了可能会占很大的存储空间。使用下面的命令查看文件大小：</p>\n<p><code>sudo du -sh /var/cache/apt</code></p>\n<p>如果文件大，有两种方式管理这个缓存文件</p>\n<p><code>sudo apt-get autoclean</code> // 删除过期的或停用的版本缓存</p>\n<p><code>sudo apt-get clean</code> // 删除缓存整个</p>\n<p><strong>参考资料：</strong></p>\n<p><a href=\"https://zh.wikipedia.org/zh-cn/Debian\">维基百科-Debian</a></p>\n<p><a href=\"https://en.wikipedia.org/wiki/APT_(software)\">维基百科-APT</a></p>\n<p><a href=\"https://itsfoss.com/apt-command-guide/\">Using apt Commands in Linux</a></p>\n","site":{"data":{}},"excerpt":"<!--# 高级包装工具(APT)-Advanced Packaging-->\n\n<p>Debian Linux uses <a href=\"https://wiki.debian.org/DebianPackageManagement\">dpkg packaging system</a>. A packaging system is a way to provide programs and applications for installation. </p>\n<p><a href=\"https://wiki.debian.org/Apt\">APT</a> (Advanced Package Tool) is the command line tool to interact with the packaging system in Debian, and Debian-based Linux Distributions.</p>\n<p>There is already dpkg commands to manage it. But APT is a more friendly way to handle packaging. You can use it to find and install new packages, upgrade packages, remove the packages etc.</p>","more":"<h2 id=\"APT-VS-apt-get\"><a href=\"#APT-VS-apt-get\" class=\"headerlink\" title=\"APT VS apt-get\"></a><code>APT</code> VS <code>apt-get</code></h2><p>Debin系统使用高级包装工具(APT)系统即Advanced Packaging Tool–与命令行apt不是同一个概念–来管理系统软件的功能，且可以从软件源获取并解析软件包依赖。</p>\n<p>可以使用Debin包管理系统工具有很多，常用的有：</p>\n<ul>\n<li>Aptitude是一个命令行工具，它同时提供一个基于文本的用户界面。该程序提供了一些改进功能，例如对软件包元信息的增强搜索。</li>\n<li>apt-get和apt-cache等命令是标准apt软件包中的命令行工具。apt-get用于安装和删除软件包，apt-cache用于搜索软件包及显示软件包信息。</li>\n<li>新版apt软件包提供了apt命令作为面向用户使用的工具。与传统apt-get和aptitude相比，它提供了进度条显示、彩色字符支持等用户友好的新功能。</li>\n</ul>\n<p><code>apt</code>第一个稳定版本是在2014年发布的，但在2016 随着Ubuntu 16.04的发布，大众才慢慢关注到这个工具。从之前的<code>apt-get install package</code>慢慢变成了<code>apt install package</code></p>\n<p><code>apt</code>包含了部分 <code>apt-get</code>及<code>apt-cache</code>的用于包管理的指令，并且对于用户更友好。</p>\n<p><a href=\"https://askubuntu.com/questions/445384/what-is-the-difference-between-apt-and-apt-get\">From StackExchange：</a></p>\n<p>apt-get may be considered as lower-level and “back-end”, and support other APT-based tools. apt is designed for end-users (human) and its output may be changed between versions.</p>\n<blockquote>\n<p>The <code>apt</code> command is meant to be pleasant for end users and does not need to be backward compatible like apt-get(8).</p>\n</blockquote>\n<p>This is the correct answer (for Debian and Ubuntu as well as other derivatives like Mint). In particular, running sudo apt upgrade will perform the same operations as sudo apt-get upgrade –with-new-pkgs. It will install new packages but, unlike sudo apt-get dist-upgrade, it will not remove old ones (except when installing a new version of the same package, of course–which sudo apt-get upgrade will also do). man apt further corroborates that this answer is correct. – Eliah Kagan</p>\n<h2 id=\"Install-apt\"><a href=\"#Install-apt\" class=\"headerlink\" title=\"Install apt\"></a>Install <code>apt</code></h2><h3 id=\"On-Debian-based-systems\"><a href=\"#On-Debian-based-systems\" class=\"headerlink\" title=\"On Debian based systems\"></a>On Debian based systems</h3><p>从这里<a href=\"http://ftp.us.debian.org/debian/pool/main/a/apt/\">apt Source-Debian</a>找到<code>apt</code>的资源及其版本。</p>\n<ol>\n<li>使用<code>wget</code>下载</li>\n</ol>\n<p><code>wget http://ftp.us.debian.org/debian/pool/main/a/apt/apt_2.4.2_amd64.deb -O apt.deb -O apt.deb</code></p>\n<ol start=\"2\">\n<li>使用<code>dpkg</code>安装apt</li>\n</ol>\n<p><code>sudo dpkg -i apt.deb</code> or without sudo <code>pkexec dpkg -i apt.deb</code></p>\n<h3 id=\"On-Ubuntu-based-system\"><a href=\"#On-Ubuntu-based-system\" class=\"headerlink\" title=\"On Ubuntu based system\"></a>On Ubuntu based system</h3><p><a href=\"http://security.ubuntu.com/ubuntu/pool/main/a/apt/?C=M;O=D\">apt Source-Ubuntu</a></p>\n<h2 id=\"apt-Commands\"><a href=\"#apt-Commands\" class=\"headerlink\" title=\"apt Commands\"></a><code>apt</code> Commands</h2><h4 id=\"包数据库及更新\"><a href=\"#包数据库及更新\" class=\"headerlink\" title=\"包数据库及更新\"></a>包数据库及更新</h4><p><code>sudo apt update</code>    // 只更新package数据库。如果有新版本，会知道有新版本，但不会安装</p>\n<h5 id=\"更改包数据库源\"><a href=\"#更改包数据库源\" class=\"headerlink\" title=\"更改包数据库源\"></a>更改包数据库源</h5><p>更改文件<code>/etc/apt/sources.list</code>中的url为想设置的源url。</p>\n<p>如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cat &#x2F;etc&#x2F;apt&#x2F;sources.list</span><br><span class=\"line\">deb http:&#x2F;&#x2F;raspbian.raspberrypi.org&#x2F;raspbian&#x2F; buster main contrib non-free rpi</span><br><span class=\"line\"></span><br><span class=\"line\">所有deb后的url更改为 archive.ubuntu.com&#x2F;ubuntu</span><br><span class=\"line\">deb http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; buster main contrib non-free rpi</span><br></pre></td></tr></table></figure>\n\n\n<h4 id=\"更新已安装的包\"><a href=\"#更新已安装的包\" class=\"headerlink\" title=\"更新已安装的包\"></a>更新已安装的包</h4><p><code>sudo apt upgrade</code> // 根package数据库，来更新安装所需要的包。如果package数据库没有更新，可能会安装不到最新的版本</p>\n<p><code>sudo apt full-upgrade</code> // 会移除更新需要移除的已经安装了的旧包</p>\n<p>所以最方便更新包及包库的命令为：</p>\n<p><code>sudo apt update &amp;&amp; sudo apt upgrade -y</code></p>\n<h4 id=\"搜索安装包\"><a href=\"#搜索安装包\" class=\"headerlink\" title=\"搜索安装包\"></a>搜索安装包</h4><p><code>apt search &lt;search item&gt;</code></p>\n<h4 id=\"显示安装包信息\"><a href=\"#显示安装包信息\" class=\"headerlink\" title=\"显示安装包信息\"></a>显示安装包信息</h4><p><code>apt list &lt;search item&gt;</code></p>\n<h4 id=\"安装-包\"><a href=\"#安装-包\" class=\"headerlink\" title=\"安装-包\"></a>安装-包</h4><p><code>sudo apt install &lt;pack_name&gt;</code></p>\n<p><code>sudo apt install &lt;package_1&gt; &lt;package_2&gt; &lt;package_3&gt;</code> // 同时安装多个包<br><code>sudo apt install &lt;package_name&gt; --no-upgrade</code>    // 只安装，不更新<br><code>sudo apt install &lt;package_name&gt; --only-upgrade</code>    // 只更新，不安装<br><code>sudo apt install &lt;package_name&gt;=&lt;version_number&gt;</code>    // 安装特别版本的包</p>\n<h4 id=\"移除安装包\"><a href=\"#移除安装包\" class=\"headerlink\" title=\"移除安装包\"></a>移除安装包</h4><p><code>sudo apt remove &lt;package_name&gt;</code> // 称除可执行行文件，保留配置文件，下次安装后会有相同的配置</p>\n<p>或者：</p>\n<p><code>sudo apt purge &lt;package_name&gt;</code> // 移除所有包括配置文件</p>\n<p>可以在<code>remove</code>之后运行<code>purge</code>，通常来说<code>apt remove</code>对卸载一个包来说足够了。</p>\n<h4 id=\"查看安装包\"><a href=\"#查看安装包\" class=\"headerlink\" title=\"查看安装包\"></a>查看安装包</h4><p><code>apt list</code> 列出所有可用包<br><code>apt list --upgradable</code> // 列出可更新的包<br><code>apt list --installed</code>        // 列出已安装的包<br><code>apt list --all-versions</code> // 列出当前系统所有可用包</p>\n<h4 id=\"管理\"><a href=\"#管理\" class=\"headerlink\" title=\"管理\"></a>管理</h4><p><code>sudo apt autoremove</code></p>\n<p>或者</p>\n<p><code>sudo apt-get autoremove</code></p>\n<p>当安装一些有依赖的包时，对应的依赖包也会安装，但当<code>remove</code>有依赖的包的包时，这些依赖包并不会移除掉，会保存在系统中。 这个命令会移除这些‘失主’的依赖包。</p>\n<h5 id=\"apt-cache-文件\"><a href=\"#apt-cache-文件\" class=\"headerlink\" title=\"apt cache 文件\"></a>apt cache 文件</h5><p>apt 包管理系统会缓存DEB包于<code>/var/cache/apt/archives</code>，会缓存一些你卸载了的包，时间长了可能会占很大的存储空间。使用下面的命令查看文件大小：</p>\n<p><code>sudo du -sh /var/cache/apt</code></p>\n<p>如果文件大，有两种方式管理这个缓存文件</p>\n<p><code>sudo apt-get autoclean</code> // 删除过期的或停用的版本缓存</p>\n<p><code>sudo apt-get clean</code> // 删除缓存整个</p>\n<p><strong>参考资料：</strong></p>\n<p><a href=\"https://zh.wikipedia.org/zh-cn/Debian\">维基百科-Debian</a></p>\n<p><a href=\"https://en.wikipedia.org/wiki/APT_(software)\">维基百科-APT</a></p>\n<p><a href=\"https://itsfoss.com/apt-command-guide/\">Using apt Commands in Linux</a></p>"},{"title":"Linux 计划任务 `Cron`","date":"2021-10-19T02:20:22.000Z","_content":"\n<!--# Linux 计划任务 `Cron`-->\n\nTruble Shoot:\n\n1. [Why is my crontab not working, and how can I troubleshoot it?](https://serverfault.com/questions/449651/why-is-my-crontab-not-working-and-how-can-i-troubleshoot-it?newreg=1345265e1c3840a7a26181bd227f9fc5)\n\n`grep CRON /var/log/syslog` 查看系统日志\n\n2. 注意脚本中的相对路径及绝对路径，如果在脚本中使用的了 cat >> ./xxxlog.txt 其中的.表示为/home/pi/路径\n\n`crontab`(cron table)命令用来编辑当前定时任务列表，并且是针对用户的，每一个用户（包括root）都有一个自己的定时计划任务列表。\n\n### 编辑计划任务列表\n\n\tcrontab -e\n\n`sudo su -`\n\n<!-- more -->\n\n>\n如果出现问题`crontab: no crontab for jjmay - using an empty one`\n使用root权限为用户设置：\n`crontab -u <user_name> -e`\n`sudo su <user_name>`\n\t\n首次运行`crontab`的时候，会提示选择编辑器，如不确定选择哪一个，按`Enter`键选择`nano`\n\n\n```\n# Edit this file to introduce tasks to be run by cron.\n#\n# Each task to run has to be defined through a single line\n# indicating with different fields when the task will be run\n# and what command to run for the task\n#\n# To define the time you can provide concrete values for\n# minute (m), hour (h), day of month (dom), month (mon),\n# and day of week (dow) or use '*' in these fields (for 'any').\n#\n# Notice that tasks will be started based on the cron's system\n# daemon's notion of time and timezones.\n#\n# Output of the crontab jobs (including errors) is sent through\n# email to the user the crontab file belongs to (unless redirected).\n#\n# For example, you can run a backup of all your user accounts\n# at 5 a.m every week with:\n# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/\n#\n# For more information see the manual pages of crontab(5) and cron(8)\n#\n# m h  dom mon dow   command\n~                             \n```\n\t\n### 增加计划任务\n\n计划任务列表中的一条记录，最多由六部分组成：\n\n`# m h  dom mon dow   command`\n\n```\n# * * * * *  command to execute\n# ┬ ┬ ┬ ┬ ┬\n# │ │ │ │ │\n# │ │ │ │ │\n# │ │ │ │ └───── day of week (0 - 7) (0 to 6 are Sunday to Saturday, or use names; 7 is Sunday, the same as 0)\n# │ │ │ └────────── month (1 - 12)\n# │ │ └─────────────── day of month (1 - 31)\n# │ └──────────────────── hour (0 - 23)\n# └───────────────────────── min (0 - 59)\n```\n\n```\n*\tany value\n,\tvalue list separator\n-\trange of values\n/\tstep values\n@yearly\t(non-standard)\n@annually\t(non-standard)\n@monthly\t(non-standard)\n@weekly\t(non-standard)\n@daily\t(non-standard)\n@hourly\t(non-standard)\n@reboot\t(non-standard)\n```\n\n`/`: step values\n如：\n\n`*/3 * * * *` 为每三分钟\n\n`* */30 * * *` ：At every minute past every 3rd hour\n\n`0 */3 * * *` : At minute 0 past every 3rd hour\n\n例如：\n\n`0 0 * * *  /home/pi/backup.sh`\n\n这一条计划任务会在每天晚上0点运行`backup.sh`\n\n每个星期天5 am进行所有用户的备份：\n`0 5 * * 1 tar -zcf /var/backups/home.tgz /home/`\n\n每30分钟请求一个地址：\n`0 */10 * * * /usr/bin/curl http://www.google.com/`\n\n每分钟运行：\n`*/1 * * * * /home/local/test.sh`\n\n在凌晨00:10运行\n`10 0 * * * /home/swz/aa.sh`\n\n// 句式生成器\n[crontab guru](https://crontab.guru/#*_*/30_*_*_*)\n\n### 查看计划任务\n\n`crontab -l`\n\n将会列出当前保存的计划任务\n\n### 清空计划任务\n\n`crontab -r`\n将删除当前保存的所有计划任务\n\n**主要命令:**\n\n```\ncrontab –e     //修改 crontab 文件，如果文件不存在会自动创建。 \ncrontab –l      //显示 crontab 文件。 \ncrontab -r      //删除 crontab 文件。\ncrontab -ir     //删除 crontab 文件前提醒用户。\n\nservice cron status     //查看crontab服务状态\nservice cron start     //启动服务 \nservice cron stop     //关闭服务 \nservice cron restart     //重启服务 \nservice cron reload     //重新载入配置\n```\n\n### 运行系统启动时的运行任务\n当要设置在开机启动时的任务，用`@reboot`,而不是设置具体的时间\n` @reboot python /home/pi/myscript.py` \n`myscript.py `将会在开机的时候运行。\n\n如果想如计划的任务在后台运行，不影响系统启动，可在命令后面增加`&`\n` @reboot python /home/pi/myscript.py &`\n\n### 设置开机启动时的运行任务 The systemd Daemon\n想在开机启动时运行命令或程序，可以以增加系统服务的形式实现。而且一旦增加了一个服务，用户可对服务进行 停止/开始， 停用/启用 等操作\n\n#### 创建一个服务\n服务文件名是后缀为`. service`的文件， 比如一个自定服务的文件名为`myscript.service`。文件内容如下：\n\n>\n>```\n[Unit]\nDescription=My service\nAfter=network.target\n\n>[Service]\nExecStart=/usr/bin/python3 -u main.py\nWorkingDirectory=/home/pi/myscript\nStandardOutput=inherit\nStandardError=inherit\nRestart=always\nUser=pi\n\n>[Install]\nWantedBy=multi-user.target\n```\n这个文件会在目录`WorkingDirectory `下运行命令`/usr/bin/python3 -u main.py`。当然可以替换成其它想在系统启动事件时运行的命令。\n\n将这个文件使用root权限复制到目录`/etc/systemd/system `，如：\n\n`sudo cp myscript.service /etc/systemd/system/myscript.service`\n\n复制之后，通知系统添加了新服务，进行更新：\n\n`sudo systemctl daemon-reload`\n\n系统更新服务之后，就可以对这个服务进行操作：\n\n运行服务：\n`sudo systemctl start myscript.service`\n\n停止服务：\n`sudo systemctl stop myscript.service`\n\n当你确定这个服务没有问题之后，可设置此服务为开机运行：\n\n`sudo systemctl enable myscript.service`\n\n`systemctl `命令还可以用于重启或停用相应的服务，在macOS上是`launchctl`命令\n\n**注意**\n> 服务运行时机是可以设置的，上面的例子是在启动后比较晚的时机运行的（当网络可用之后`After=network.target`）, 可根据需要设置其它的时机。\n\n## 问题\n### 运行后发邮件的问题\n当程序在所指定的时间执行后，如是有输出信息，或者错误信息，系统会将这些信息以邮件的形式发送给当前的用户，如果你不希望收到这个邮件，可以在每一行后加上`> /dev/null 2>&1`即可，如：\n\n`20 03 * * * . /etc/profile;/bin/sh /var/www/system_monitor.sh > /dev/null 2>&1 `\n\n### 脚本无法执行的问题\n如果我们使用 crontab 来定时执行脚本，无法执行，但是如果直接通过命令（如：./test.sh)又可以正常执行，这主要是因为无法读取环境变量的原因。如果有些项目有import, 还会提示`No module named scrapy`之类的。\n\n**解决方法：**\n\n*  1. 所有用来的命令写成绝对路径。如:`/home/pi/Desktop/news_monitor.sh`\n*  2. 在脚本开头运行环境变量的文件。在shell脚本开头使用代码：\n\n>\n```\n#!/bin/sh\n. /etc/profile\n```\n\n*  3. 在 /etc/crontab 中添加环境变量，在可执行命令之前添加命令 . /etc/profile;/bin/sh，使得环境变量生效，例如：\n\n>\n`20 03 * * * . /etc/profile;/bin/sh /var/www/runoob/test.sh`\n\n如果是运行python脚本，要注意cron使用的使用的python版本和你实际项目使用的python版本：\n\n`20 03 * * * /path/to/virtual/env/bin/python /home/pi/Desktop/python_projects/crawl.py`\n\n如果不是使用虚拟python环境，则使用`whereis pyhton3`找出对应的python路径\n\n[Linux进阶之环境变量文件/etc/profile、/etc/bashrc、/etc/environment](https://www.cnblogs.com/renyz/p/11351934.html)\n\n","source":"_posts/Linux/Linux命令_crontab_计划任务.md","raw":"\n---\ntitle: Linux 计划任务 `Cron`\ndate: 2021-10-19 10:20:22\ncategories:\n- Linux\ntags:\n- Linux\n- Cron\n---\n\n<!--# Linux 计划任务 `Cron`-->\n\nTruble Shoot:\n\n1. [Why is my crontab not working, and how can I troubleshoot it?](https://serverfault.com/questions/449651/why-is-my-crontab-not-working-and-how-can-i-troubleshoot-it?newreg=1345265e1c3840a7a26181bd227f9fc5)\n\n`grep CRON /var/log/syslog` 查看系统日志\n\n2. 注意脚本中的相对路径及绝对路径，如果在脚本中使用的了 cat >> ./xxxlog.txt 其中的.表示为/home/pi/路径\n\n`crontab`(cron table)命令用来编辑当前定时任务列表，并且是针对用户的，每一个用户（包括root）都有一个自己的定时计划任务列表。\n\n### 编辑计划任务列表\n\n\tcrontab -e\n\n`sudo su -`\n\n<!-- more -->\n\n>\n如果出现问题`crontab: no crontab for jjmay - using an empty one`\n使用root权限为用户设置：\n`crontab -u <user_name> -e`\n`sudo su <user_name>`\n\t\n首次运行`crontab`的时候，会提示选择编辑器，如不确定选择哪一个，按`Enter`键选择`nano`\n\n\n```\n# Edit this file to introduce tasks to be run by cron.\n#\n# Each task to run has to be defined through a single line\n# indicating with different fields when the task will be run\n# and what command to run for the task\n#\n# To define the time you can provide concrete values for\n# minute (m), hour (h), day of month (dom), month (mon),\n# and day of week (dow) or use '*' in these fields (for 'any').\n#\n# Notice that tasks will be started based on the cron's system\n# daemon's notion of time and timezones.\n#\n# Output of the crontab jobs (including errors) is sent through\n# email to the user the crontab file belongs to (unless redirected).\n#\n# For example, you can run a backup of all your user accounts\n# at 5 a.m every week with:\n# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/\n#\n# For more information see the manual pages of crontab(5) and cron(8)\n#\n# m h  dom mon dow   command\n~                             \n```\n\t\n### 增加计划任务\n\n计划任务列表中的一条记录，最多由六部分组成：\n\n`# m h  dom mon dow   command`\n\n```\n# * * * * *  command to execute\n# ┬ ┬ ┬ ┬ ┬\n# │ │ │ │ │\n# │ │ │ │ │\n# │ │ │ │ └───── day of week (0 - 7) (0 to 6 are Sunday to Saturday, or use names; 7 is Sunday, the same as 0)\n# │ │ │ └────────── month (1 - 12)\n# │ │ └─────────────── day of month (1 - 31)\n# │ └──────────────────── hour (0 - 23)\n# └───────────────────────── min (0 - 59)\n```\n\n```\n*\tany value\n,\tvalue list separator\n-\trange of values\n/\tstep values\n@yearly\t(non-standard)\n@annually\t(non-standard)\n@monthly\t(non-standard)\n@weekly\t(non-standard)\n@daily\t(non-standard)\n@hourly\t(non-standard)\n@reboot\t(non-standard)\n```\n\n`/`: step values\n如：\n\n`*/3 * * * *` 为每三分钟\n\n`* */30 * * *` ：At every minute past every 3rd hour\n\n`0 */3 * * *` : At minute 0 past every 3rd hour\n\n例如：\n\n`0 0 * * *  /home/pi/backup.sh`\n\n这一条计划任务会在每天晚上0点运行`backup.sh`\n\n每个星期天5 am进行所有用户的备份：\n`0 5 * * 1 tar -zcf /var/backups/home.tgz /home/`\n\n每30分钟请求一个地址：\n`0 */10 * * * /usr/bin/curl http://www.google.com/`\n\n每分钟运行：\n`*/1 * * * * /home/local/test.sh`\n\n在凌晨00:10运行\n`10 0 * * * /home/swz/aa.sh`\n\n// 句式生成器\n[crontab guru](https://crontab.guru/#*_*/30_*_*_*)\n\n### 查看计划任务\n\n`crontab -l`\n\n将会列出当前保存的计划任务\n\n### 清空计划任务\n\n`crontab -r`\n将删除当前保存的所有计划任务\n\n**主要命令:**\n\n```\ncrontab –e     //修改 crontab 文件，如果文件不存在会自动创建。 \ncrontab –l      //显示 crontab 文件。 \ncrontab -r      //删除 crontab 文件。\ncrontab -ir     //删除 crontab 文件前提醒用户。\n\nservice cron status     //查看crontab服务状态\nservice cron start     //启动服务 \nservice cron stop     //关闭服务 \nservice cron restart     //重启服务 \nservice cron reload     //重新载入配置\n```\n\n### 运行系统启动时的运行任务\n当要设置在开机启动时的任务，用`@reboot`,而不是设置具体的时间\n` @reboot python /home/pi/myscript.py` \n`myscript.py `将会在开机的时候运行。\n\n如果想如计划的任务在后台运行，不影响系统启动，可在命令后面增加`&`\n` @reboot python /home/pi/myscript.py &`\n\n### 设置开机启动时的运行任务 The systemd Daemon\n想在开机启动时运行命令或程序，可以以增加系统服务的形式实现。而且一旦增加了一个服务，用户可对服务进行 停止/开始， 停用/启用 等操作\n\n#### 创建一个服务\n服务文件名是后缀为`. service`的文件， 比如一个自定服务的文件名为`myscript.service`。文件内容如下：\n\n>\n>```\n[Unit]\nDescription=My service\nAfter=network.target\n\n>[Service]\nExecStart=/usr/bin/python3 -u main.py\nWorkingDirectory=/home/pi/myscript\nStandardOutput=inherit\nStandardError=inherit\nRestart=always\nUser=pi\n\n>[Install]\nWantedBy=multi-user.target\n```\n这个文件会在目录`WorkingDirectory `下运行命令`/usr/bin/python3 -u main.py`。当然可以替换成其它想在系统启动事件时运行的命令。\n\n将这个文件使用root权限复制到目录`/etc/systemd/system `，如：\n\n`sudo cp myscript.service /etc/systemd/system/myscript.service`\n\n复制之后，通知系统添加了新服务，进行更新：\n\n`sudo systemctl daemon-reload`\n\n系统更新服务之后，就可以对这个服务进行操作：\n\n运行服务：\n`sudo systemctl start myscript.service`\n\n停止服务：\n`sudo systemctl stop myscript.service`\n\n当你确定这个服务没有问题之后，可设置此服务为开机运行：\n\n`sudo systemctl enable myscript.service`\n\n`systemctl `命令还可以用于重启或停用相应的服务，在macOS上是`launchctl`命令\n\n**注意**\n> 服务运行时机是可以设置的，上面的例子是在启动后比较晚的时机运行的（当网络可用之后`After=network.target`）, 可根据需要设置其它的时机。\n\n## 问题\n### 运行后发邮件的问题\n当程序在所指定的时间执行后，如是有输出信息，或者错误信息，系统会将这些信息以邮件的形式发送给当前的用户，如果你不希望收到这个邮件，可以在每一行后加上`> /dev/null 2>&1`即可，如：\n\n`20 03 * * * . /etc/profile;/bin/sh /var/www/system_monitor.sh > /dev/null 2>&1 `\n\n### 脚本无法执行的问题\n如果我们使用 crontab 来定时执行脚本，无法执行，但是如果直接通过命令（如：./test.sh)又可以正常执行，这主要是因为无法读取环境变量的原因。如果有些项目有import, 还会提示`No module named scrapy`之类的。\n\n**解决方法：**\n\n*  1. 所有用来的命令写成绝对路径。如:`/home/pi/Desktop/news_monitor.sh`\n*  2. 在脚本开头运行环境变量的文件。在shell脚本开头使用代码：\n\n>\n```\n#!/bin/sh\n. /etc/profile\n```\n\n*  3. 在 /etc/crontab 中添加环境变量，在可执行命令之前添加命令 . /etc/profile;/bin/sh，使得环境变量生效，例如：\n\n>\n`20 03 * * * . /etc/profile;/bin/sh /var/www/runoob/test.sh`\n\n如果是运行python脚本，要注意cron使用的使用的python版本和你实际项目使用的python版本：\n\n`20 03 * * * /path/to/virtual/env/bin/python /home/pi/Desktop/python_projects/crawl.py`\n\n如果不是使用虚拟python环境，则使用`whereis pyhton3`找出对应的python路径\n\n[Linux进阶之环境变量文件/etc/profile、/etc/bashrc、/etc/environment](https://www.cnblogs.com/renyz/p/11351934.html)\n\n","slug":"Linux/Linux命令_crontab_计划任务","published":1,"updated":"2022-07-06T12:29:52.955Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl74l5j5o000b2a37563gertw","content":"<!--# Linux 计划任务 `Cron`-->\n\n<p>Truble Shoot:</p>\n<ol>\n<li><a href=\"https://serverfault.com/questions/449651/why-is-my-crontab-not-working-and-how-can-i-troubleshoot-it?newreg=1345265e1c3840a7a26181bd227f9fc5\">Why is my crontab not working, and how can I troubleshoot it?</a></li>\n</ol>\n<p><code>grep CRON /var/log/syslog</code> 查看系统日志</p>\n<ol start=\"2\">\n<li>注意脚本中的相对路径及绝对路径，如果在脚本中使用的了 cat &gt;&gt; ./xxxlog.txt 其中的.表示为/home/pi/路径</li>\n</ol>\n<p><code>crontab</code>(cron table)命令用来编辑当前定时任务列表，并且是针对用户的，每一个用户（包括root）都有一个自己的定时计划任务列表。</p>\n<h3 id=\"编辑计划任务列表\"><a href=\"#编辑计划任务列表\" class=\"headerlink\" title=\"编辑计划任务列表\"></a>编辑计划任务列表</h3><pre><code>crontab -e</code></pre>\n<p><code>sudo su -</code></p>\n<a id=\"more\"></a>\n\n<blockquote>\n</blockquote>\n<p>如果出现问题<code>crontab: no crontab for jjmay - using an empty one</code><br>使用root权限为用户设置：<br><code>crontab -u &lt;user_name&gt; -e</code><br><code>sudo su &lt;user_name&gt;</code></p>\n<p>首次运行<code>crontab</code>的时候，会提示选择编辑器，如不确定选择哪一个，按<code>Enter</code>键选择<code>nano</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Edit this file to introduce tasks to be run by cron.</span><br><span class=\"line\">#</span><br><span class=\"line\"># Each task to run has to be defined through a single line</span><br><span class=\"line\"># indicating with different fields when the task will be run</span><br><span class=\"line\"># and what command to run for the task</span><br><span class=\"line\">#</span><br><span class=\"line\"># To define the time you can provide concrete values for</span><br><span class=\"line\"># minute (m), hour (h), day of month (dom), month (mon),</span><br><span class=\"line\"># and day of week (dow) or use &#39;*&#39; in these fields (for &#39;any&#39;).</span><br><span class=\"line\">#</span><br><span class=\"line\"># Notice that tasks will be started based on the cron&#39;s system</span><br><span class=\"line\"># daemon&#39;s notion of time and timezones.</span><br><span class=\"line\">#</span><br><span class=\"line\"># Output of the crontab jobs (including errors) is sent through</span><br><span class=\"line\"># email to the user the crontab file belongs to (unless redirected).</span><br><span class=\"line\">#</span><br><span class=\"line\"># For example, you can run a backup of all your user accounts</span><br><span class=\"line\"># at 5 a.m every week with:</span><br><span class=\"line\"># 0 5 * * 1 tar -zcf &#x2F;var&#x2F;backups&#x2F;home.tgz &#x2F;home&#x2F;</span><br><span class=\"line\">#</span><br><span class=\"line\"># For more information see the manual pages of crontab(5) and cron(8)</span><br><span class=\"line\">#</span><br><span class=\"line\"># m h  dom mon dow   command</span><br><span class=\"line\">~                             </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"增加计划任务\"><a href=\"#增加计划任务\" class=\"headerlink\" title=\"增加计划任务\"></a>增加计划任务</h3><p>计划任务列表中的一条记录，最多由六部分组成：</p>\n<p><code># m h  dom mon dow   command</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># * * * * *  command to execute</span><br><span class=\"line\"># ┬ ┬ ┬ ┬ ┬</span><br><span class=\"line\"># │ │ │ │ │</span><br><span class=\"line\"># │ │ │ │ │</span><br><span class=\"line\"># │ │ │ │ └───── day of week (0 - 7) (0 to 6 are Sunday to Saturday, or use names; 7 is Sunday, the same as 0)</span><br><span class=\"line\"># │ │ │ └────────── month (1 - 12)</span><br><span class=\"line\"># │ │ └─────────────── day of month (1 - 31)</span><br><span class=\"line\"># │ └──────────────────── hour (0 - 23)</span><br><span class=\"line\"># └───────────────────────── min (0 - 59)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*\tany value</span><br><span class=\"line\">,\tvalue list separator</span><br><span class=\"line\">-\trange of values</span><br><span class=\"line\">&#x2F;\tstep values</span><br><span class=\"line\">@yearly\t(non-standard)</span><br><span class=\"line\">@annually\t(non-standard)</span><br><span class=\"line\">@monthly\t(non-standard)</span><br><span class=\"line\">@weekly\t(non-standard)</span><br><span class=\"line\">@daily\t(non-standard)</span><br><span class=\"line\">@hourly\t(non-standard)</span><br><span class=\"line\">@reboot\t(non-standard)</span><br></pre></td></tr></table></figure>\n\n<p><code>/</code>: step values<br>如：</p>\n<p><code>*/3 * * * *</code> 为每三分钟</p>\n<p><code>* */30 * * *</code> ：At every minute past every 3rd hour</p>\n<p><code>0 */3 * * *</code> : At minute 0 past every 3rd hour</p>\n<p>例如：</p>\n<p><code>0 0 * * *  /home/pi/backup.sh</code></p>\n<p>这一条计划任务会在每天晚上0点运行<code>backup.sh</code></p>\n<p>每个星期天5 am进行所有用户的备份：<br><code>0 5 * * 1 tar -zcf /var/backups/home.tgz /home/</code></p>\n<p>每30分钟请求一个地址：<br><code>0 */10 * * * /usr/bin/curl http://www.google.com/</code></p>\n<p>每分钟运行：<br><code>*/1 * * * * /home/local/test.sh</code></p>\n<p>在凌晨00:10运行<br><code>10 0 * * * /home/swz/aa.sh</code></p>\n<p>// 句式生成器<br><a href=\"https://crontab.guru/#*_*/30_*_*_*\">crontab guru</a></p>\n<h3 id=\"查看计划任务\"><a href=\"#查看计划任务\" class=\"headerlink\" title=\"查看计划任务\"></a>查看计划任务</h3><p><code>crontab -l</code></p>\n<p>将会列出当前保存的计划任务</p>\n<h3 id=\"清空计划任务\"><a href=\"#清空计划任务\" class=\"headerlink\" title=\"清空计划任务\"></a>清空计划任务</h3><p><code>crontab -r</code><br>将删除当前保存的所有计划任务</p>\n<p><strong>主要命令:</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">crontab –e     &#x2F;&#x2F;修改 crontab 文件，如果文件不存在会自动创建。 </span><br><span class=\"line\">crontab –l      &#x2F;&#x2F;显示 crontab 文件。 </span><br><span class=\"line\">crontab -r      &#x2F;&#x2F;删除 crontab 文件。</span><br><span class=\"line\">crontab -ir     &#x2F;&#x2F;删除 crontab 文件前提醒用户。</span><br><span class=\"line\"></span><br><span class=\"line\">service cron status     &#x2F;&#x2F;查看crontab服务状态</span><br><span class=\"line\">service cron start     &#x2F;&#x2F;启动服务 </span><br><span class=\"line\">service cron stop     &#x2F;&#x2F;关闭服务 </span><br><span class=\"line\">service cron restart     &#x2F;&#x2F;重启服务 </span><br><span class=\"line\">service cron reload     &#x2F;&#x2F;重新载入配置</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"运行系统启动时的运行任务\"><a href=\"#运行系统启动时的运行任务\" class=\"headerlink\" title=\"运行系统启动时的运行任务\"></a>运行系统启动时的运行任务</h3><p>当要设置在开机启动时的任务，用<code>@reboot</code>,而不是设置具体的时间<br><code> @reboot python /home/pi/myscript.py</code><br><code>myscript.py </code>将会在开机的时候运行。</p>\n<p>如果想如计划的任务在后台运行，不影响系统启动，可在命令后面增加<code>&amp;</code><br><code> @reboot python /home/pi/myscript.py &amp;</code></p>\n<h3 id=\"设置开机启动时的运行任务-The-systemd-Daemon\"><a href=\"#设置开机启动时的运行任务-The-systemd-Daemon\" class=\"headerlink\" title=\"设置开机启动时的运行任务 The systemd Daemon\"></a>设置开机启动时的运行任务 The systemd Daemon</h3><p>想在开机启动时运行命令或程序，可以以增加系统服务的形式实现。而且一旦增加了一个服务，用户可对服务进行 停止/开始， 停用/启用 等操作</p>\n<h4 id=\"创建一个服务\"><a href=\"#创建一个服务\" class=\"headerlink\" title=\"创建一个服务\"></a>创建一个服务</h4><p>服务文件名是后缀为<code>. service</code>的文件， 比如一个自定服务的文件名为<code>myscript.service</code>。文件内容如下：</p>\n<blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description&#x3D;My service</span><br><span class=\"line\">After&#x3D;network.target</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;[Service]</span><br><span class=\"line\">ExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;python3 -u main.py</span><br><span class=\"line\">WorkingDirectory&#x3D;&#x2F;home&#x2F;pi&#x2F;myscript</span><br><span class=\"line\">StandardOutput&#x3D;inherit</span><br><span class=\"line\">StandardError&#x3D;inherit</span><br><span class=\"line\">Restart&#x3D;always</span><br><span class=\"line\">User&#x3D;pi</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;[Install]</span><br><span class=\"line\">WantedBy&#x3D;multi-user.target</span><br></pre></td></tr></table></figure>\n<p>这个文件会在目录<code>WorkingDirectory </code>下运行命令<code>/usr/bin/python3 -u main.py</code>。当然可以替换成其它想在系统启动事件时运行的命令。</p>\n</blockquote>\n<p>将这个文件使用root权限复制到目录<code>/etc/systemd/system </code>，如：</p>\n<p><code>sudo cp myscript.service /etc/systemd/system/myscript.service</code></p>\n<p>复制之后，通知系统添加了新服务，进行更新：</p>\n<p><code>sudo systemctl daemon-reload</code></p>\n<p>系统更新服务之后，就可以对这个服务进行操作：</p>\n<p>运行服务：<br><code>sudo systemctl start myscript.service</code></p>\n<p>停止服务：<br><code>sudo systemctl stop myscript.service</code></p>\n<p>当你确定这个服务没有问题之后，可设置此服务为开机运行：</p>\n<p><code>sudo systemctl enable myscript.service</code></p>\n<p><code>systemctl </code>命令还可以用于重启或停用相应的服务，在macOS上是<code>launchctl</code>命令</p>\n<p><strong>注意</strong></p>\n<blockquote>\n<p>服务运行时机是可以设置的，上面的例子是在启动后比较晚的时机运行的（当网络可用之后<code>After=network.target</code>）, 可根据需要设置其它的时机。</p>\n</blockquote>\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><h3 id=\"运行后发邮件的问题\"><a href=\"#运行后发邮件的问题\" class=\"headerlink\" title=\"运行后发邮件的问题\"></a>运行后发邮件的问题</h3><p>当程序在所指定的时间执行后，如是有输出信息，或者错误信息，系统会将这些信息以邮件的形式发送给当前的用户，如果你不希望收到这个邮件，可以在每一行后加上<code>&gt; /dev/null 2&gt;&amp;1</code>即可，如：</p>\n<p><code>20 03 * * * . /etc/profile;/bin/sh /var/www/system_monitor.sh &gt; /dev/null 2&gt;&amp;1 </code></p>\n<h3 id=\"脚本无法执行的问题\"><a href=\"#脚本无法执行的问题\" class=\"headerlink\" title=\"脚本无法执行的问题\"></a>脚本无法执行的问题</h3><p>如果我们使用 crontab 来定时执行脚本，无法执行，但是如果直接通过命令（如：./test.sh)又可以正常执行，这主要是因为无法读取环境变量的原因。如果有些项目有import, 还会提示<code>No module named scrapy</code>之类的。</p>\n<p><strong>解决方法：</strong></p>\n<ul>\n<li><ol>\n<li>所有用来的命令写成绝对路径。如:<code>/home/pi/Desktop/news_monitor.sh</code></li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>在脚本开头运行环境变量的文件。在shell脚本开头使用代码：</li>\n</ol>\n</li>\n</ul>\n<blockquote>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!&#x2F;bin&#x2F;sh</span><br><span class=\"line\">. &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><ol start=\"3\">\n<li>在 /etc/crontab 中添加环境变量，在可执行命令之前添加命令 . /etc/profile;/bin/sh，使得环境变量生效，例如：</li>\n</ol>\n</li>\n</ul>\n<blockquote>\n</blockquote>\n<p><code>20 03 * * * . /etc/profile;/bin/sh /var/www/runoob/test.sh</code></p>\n<p>如果是运行python脚本，要注意cron使用的使用的python版本和你实际项目使用的python版本：</p>\n<p><code>20 03 * * * /path/to/virtual/env/bin/python /home/pi/Desktop/python_projects/crawl.py</code></p>\n<p>如果不是使用虚拟python环境，则使用<code>whereis pyhton3</code>找出对应的python路径</p>\n<p><a href=\"https://www.cnblogs.com/renyz/p/11351934.html\">Linux进阶之环境变量文件/etc/profile、/etc/bashrc、/etc/environment</a></p>\n","site":{"data":{}},"excerpt":"<!--# Linux 计划任务 `Cron`-->\n\n<p>Truble Shoot:</p>\n<ol>\n<li><a href=\"https://serverfault.com/questions/449651/why-is-my-crontab-not-working-and-how-can-i-troubleshoot-it?newreg=1345265e1c3840a7a26181bd227f9fc5\">Why is my crontab not working, and how can I troubleshoot it?</a></li>\n</ol>\n<p><code>grep CRON /var/log/syslog</code> 查看系统日志</p>\n<ol start=\"2\">\n<li>注意脚本中的相对路径及绝对路径，如果在脚本中使用的了 cat &gt;&gt; ./xxxlog.txt 其中的.表示为/home/pi/路径</li>\n</ol>\n<p><code>crontab</code>(cron table)命令用来编辑当前定时任务列表，并且是针对用户的，每一个用户（包括root）都有一个自己的定时计划任务列表。</p>\n<h3 id=\"编辑计划任务列表\"><a href=\"#编辑计划任务列表\" class=\"headerlink\" title=\"编辑计划任务列表\"></a>编辑计划任务列表</h3><pre><code>crontab -e</code></pre>\n<p><code>sudo su -</code></p>","more":"<blockquote>\n</blockquote>\n<p>如果出现问题<code>crontab: no crontab for jjmay - using an empty one</code><br>使用root权限为用户设置：<br><code>crontab -u &lt;user_name&gt; -e</code><br><code>sudo su &lt;user_name&gt;</code></p>\n<p>首次运行<code>crontab</code>的时候，会提示选择编辑器，如不确定选择哪一个，按<code>Enter</code>键选择<code>nano</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Edit this file to introduce tasks to be run by cron.</span><br><span class=\"line\">#</span><br><span class=\"line\"># Each task to run has to be defined through a single line</span><br><span class=\"line\"># indicating with different fields when the task will be run</span><br><span class=\"line\"># and what command to run for the task</span><br><span class=\"line\">#</span><br><span class=\"line\"># To define the time you can provide concrete values for</span><br><span class=\"line\"># minute (m), hour (h), day of month (dom), month (mon),</span><br><span class=\"line\"># and day of week (dow) or use &#39;*&#39; in these fields (for &#39;any&#39;).</span><br><span class=\"line\">#</span><br><span class=\"line\"># Notice that tasks will be started based on the cron&#39;s system</span><br><span class=\"line\"># daemon&#39;s notion of time and timezones.</span><br><span class=\"line\">#</span><br><span class=\"line\"># Output of the crontab jobs (including errors) is sent through</span><br><span class=\"line\"># email to the user the crontab file belongs to (unless redirected).</span><br><span class=\"line\">#</span><br><span class=\"line\"># For example, you can run a backup of all your user accounts</span><br><span class=\"line\"># at 5 a.m every week with:</span><br><span class=\"line\"># 0 5 * * 1 tar -zcf &#x2F;var&#x2F;backups&#x2F;home.tgz &#x2F;home&#x2F;</span><br><span class=\"line\">#</span><br><span class=\"line\"># For more information see the manual pages of crontab(5) and cron(8)</span><br><span class=\"line\">#</span><br><span class=\"line\"># m h  dom mon dow   command</span><br><span class=\"line\">~                             </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"增加计划任务\"><a href=\"#增加计划任务\" class=\"headerlink\" title=\"增加计划任务\"></a>增加计划任务</h3><p>计划任务列表中的一条记录，最多由六部分组成：</p>\n<p><code># m h  dom mon dow   command</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># * * * * *  command to execute</span><br><span class=\"line\"># ┬ ┬ ┬ ┬ ┬</span><br><span class=\"line\"># │ │ │ │ │</span><br><span class=\"line\"># │ │ │ │ │</span><br><span class=\"line\"># │ │ │ │ └───── day of week (0 - 7) (0 to 6 are Sunday to Saturday, or use names; 7 is Sunday, the same as 0)</span><br><span class=\"line\"># │ │ │ └────────── month (1 - 12)</span><br><span class=\"line\"># │ │ └─────────────── day of month (1 - 31)</span><br><span class=\"line\"># │ └──────────────────── hour (0 - 23)</span><br><span class=\"line\"># └───────────────────────── min (0 - 59)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*\tany value</span><br><span class=\"line\">,\tvalue list separator</span><br><span class=\"line\">-\trange of values</span><br><span class=\"line\">&#x2F;\tstep values</span><br><span class=\"line\">@yearly\t(non-standard)</span><br><span class=\"line\">@annually\t(non-standard)</span><br><span class=\"line\">@monthly\t(non-standard)</span><br><span class=\"line\">@weekly\t(non-standard)</span><br><span class=\"line\">@daily\t(non-standard)</span><br><span class=\"line\">@hourly\t(non-standard)</span><br><span class=\"line\">@reboot\t(non-standard)</span><br></pre></td></tr></table></figure>\n\n<p><code>/</code>: step values<br>如：</p>\n<p><code>*/3 * * * *</code> 为每三分钟</p>\n<p><code>* */30 * * *</code> ：At every minute past every 3rd hour</p>\n<p><code>0 */3 * * *</code> : At minute 0 past every 3rd hour</p>\n<p>例如：</p>\n<p><code>0 0 * * *  /home/pi/backup.sh</code></p>\n<p>这一条计划任务会在每天晚上0点运行<code>backup.sh</code></p>\n<p>每个星期天5 am进行所有用户的备份：<br><code>0 5 * * 1 tar -zcf /var/backups/home.tgz /home/</code></p>\n<p>每30分钟请求一个地址：<br><code>0 */10 * * * /usr/bin/curl http://www.google.com/</code></p>\n<p>每分钟运行：<br><code>*/1 * * * * /home/local/test.sh</code></p>\n<p>在凌晨00:10运行<br><code>10 0 * * * /home/swz/aa.sh</code></p>\n<p>// 句式生成器<br><a href=\"https://crontab.guru/#*_*/30_*_*_*\">crontab guru</a></p>\n<h3 id=\"查看计划任务\"><a href=\"#查看计划任务\" class=\"headerlink\" title=\"查看计划任务\"></a>查看计划任务</h3><p><code>crontab -l</code></p>\n<p>将会列出当前保存的计划任务</p>\n<h3 id=\"清空计划任务\"><a href=\"#清空计划任务\" class=\"headerlink\" title=\"清空计划任务\"></a>清空计划任务</h3><p><code>crontab -r</code><br>将删除当前保存的所有计划任务</p>\n<p><strong>主要命令:</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">crontab –e     &#x2F;&#x2F;修改 crontab 文件，如果文件不存在会自动创建。 </span><br><span class=\"line\">crontab –l      &#x2F;&#x2F;显示 crontab 文件。 </span><br><span class=\"line\">crontab -r      &#x2F;&#x2F;删除 crontab 文件。</span><br><span class=\"line\">crontab -ir     &#x2F;&#x2F;删除 crontab 文件前提醒用户。</span><br><span class=\"line\"></span><br><span class=\"line\">service cron status     &#x2F;&#x2F;查看crontab服务状态</span><br><span class=\"line\">service cron start     &#x2F;&#x2F;启动服务 </span><br><span class=\"line\">service cron stop     &#x2F;&#x2F;关闭服务 </span><br><span class=\"line\">service cron restart     &#x2F;&#x2F;重启服务 </span><br><span class=\"line\">service cron reload     &#x2F;&#x2F;重新载入配置</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"运行系统启动时的运行任务\"><a href=\"#运行系统启动时的运行任务\" class=\"headerlink\" title=\"运行系统启动时的运行任务\"></a>运行系统启动时的运行任务</h3><p>当要设置在开机启动时的任务，用<code>@reboot</code>,而不是设置具体的时间<br><code> @reboot python /home/pi/myscript.py</code><br><code>myscript.py </code>将会在开机的时候运行。</p>\n<p>如果想如计划的任务在后台运行，不影响系统启动，可在命令后面增加<code>&amp;</code><br><code> @reboot python /home/pi/myscript.py &amp;</code></p>\n<h3 id=\"设置开机启动时的运行任务-The-systemd-Daemon\"><a href=\"#设置开机启动时的运行任务-The-systemd-Daemon\" class=\"headerlink\" title=\"设置开机启动时的运行任务 The systemd Daemon\"></a>设置开机启动时的运行任务 The systemd Daemon</h3><p>想在开机启动时运行命令或程序，可以以增加系统服务的形式实现。而且一旦增加了一个服务，用户可对服务进行 停止/开始， 停用/启用 等操作</p>\n<h4 id=\"创建一个服务\"><a href=\"#创建一个服务\" class=\"headerlink\" title=\"创建一个服务\"></a>创建一个服务</h4><p>服务文件名是后缀为<code>. service</code>的文件， 比如一个自定服务的文件名为<code>myscript.service</code>。文件内容如下：</p>\n<blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description&#x3D;My service</span><br><span class=\"line\">After&#x3D;network.target</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;[Service]</span><br><span class=\"line\">ExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;python3 -u main.py</span><br><span class=\"line\">WorkingDirectory&#x3D;&#x2F;home&#x2F;pi&#x2F;myscript</span><br><span class=\"line\">StandardOutput&#x3D;inherit</span><br><span class=\"line\">StandardError&#x3D;inherit</span><br><span class=\"line\">Restart&#x3D;always</span><br><span class=\"line\">User&#x3D;pi</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;[Install]</span><br><span class=\"line\">WantedBy&#x3D;multi-user.target</span><br></pre></td></tr></table></figure>\n<p>这个文件会在目录<code>WorkingDirectory </code>下运行命令<code>/usr/bin/python3 -u main.py</code>。当然可以替换成其它想在系统启动事件时运行的命令。</p>\n</blockquote>\n<p>将这个文件使用root权限复制到目录<code>/etc/systemd/system </code>，如：</p>\n<p><code>sudo cp myscript.service /etc/systemd/system/myscript.service</code></p>\n<p>复制之后，通知系统添加了新服务，进行更新：</p>\n<p><code>sudo systemctl daemon-reload</code></p>\n<p>系统更新服务之后，就可以对这个服务进行操作：</p>\n<p>运行服务：<br><code>sudo systemctl start myscript.service</code></p>\n<p>停止服务：<br><code>sudo systemctl stop myscript.service</code></p>\n<p>当你确定这个服务没有问题之后，可设置此服务为开机运行：</p>\n<p><code>sudo systemctl enable myscript.service</code></p>\n<p><code>systemctl </code>命令还可以用于重启或停用相应的服务，在macOS上是<code>launchctl</code>命令</p>\n<p><strong>注意</strong></p>\n<blockquote>\n<p>服务运行时机是可以设置的，上面的例子是在启动后比较晚的时机运行的（当网络可用之后<code>After=network.target</code>）, 可根据需要设置其它的时机。</p>\n</blockquote>\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><h3 id=\"运行后发邮件的问题\"><a href=\"#运行后发邮件的问题\" class=\"headerlink\" title=\"运行后发邮件的问题\"></a>运行后发邮件的问题</h3><p>当程序在所指定的时间执行后，如是有输出信息，或者错误信息，系统会将这些信息以邮件的形式发送给当前的用户，如果你不希望收到这个邮件，可以在每一行后加上<code>&gt; /dev/null 2&gt;&amp;1</code>即可，如：</p>\n<p><code>20 03 * * * . /etc/profile;/bin/sh /var/www/system_monitor.sh &gt; /dev/null 2&gt;&amp;1 </code></p>\n<h3 id=\"脚本无法执行的问题\"><a href=\"#脚本无法执行的问题\" class=\"headerlink\" title=\"脚本无法执行的问题\"></a>脚本无法执行的问题</h3><p>如果我们使用 crontab 来定时执行脚本，无法执行，但是如果直接通过命令（如：./test.sh)又可以正常执行，这主要是因为无法读取环境变量的原因。如果有些项目有import, 还会提示<code>No module named scrapy</code>之类的。</p>\n<p><strong>解决方法：</strong></p>\n<ul>\n<li><ol>\n<li>所有用来的命令写成绝对路径。如:<code>/home/pi/Desktop/news_monitor.sh</code></li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>在脚本开头运行环境变量的文件。在shell脚本开头使用代码：</li>\n</ol>\n</li>\n</ul>\n<blockquote>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!&#x2F;bin&#x2F;sh</span><br><span class=\"line\">. &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><ol start=\"3\">\n<li>在 /etc/crontab 中添加环境变量，在可执行命令之前添加命令 . /etc/profile;/bin/sh，使得环境变量生效，例如：</li>\n</ol>\n</li>\n</ul>\n<blockquote>\n</blockquote>\n<p><code>20 03 * * * . /etc/profile;/bin/sh /var/www/runoob/test.sh</code></p>\n<p>如果是运行python脚本，要注意cron使用的使用的python版本和你实际项目使用的python版本：</p>\n<p><code>20 03 * * * /path/to/virtual/env/bin/python /home/pi/Desktop/python_projects/crawl.py</code></p>\n<p>如果不是使用虚拟python环境，则使用<code>whereis pyhton3</code>找出对应的python路径</p>\n<p><a href=\"https://www.cnblogs.com/renyz/p/11351934.html\">Linux进阶之环境变量文件/etc/profile、/etc/bashrc、/etc/environment</a></p>"},{"title":"Linux 命令：任务管理 ps","date":"2021-10-18T05:20:22.000Z","_content":"\n\n<!--# Linux 命令：任务管理 `ps`-->\n\n常用 `man ps`命令\n\n`PID` : -  This is the unique process ID\n\n`PPID` : -  This is the the Parent Process ID\n\n`S/STAT`: the current status of the process\n\n<!-- more -->\n\n\n进程状态解释：\n\n```\nI       Marks a process that is idle (sleeping for longer than about 20 seconds).\nR       Marks a runnable process.\nS       Marks a process that is sleeping for less than about 20 seconds.\nT       Marks a stopped process.\nU       Marks a process in uninterruptible wait.\nZ       Marks a dead process (a ``zombie'').\n\nAdditional characters after these, if any, indicate additional state information:\n\n+       The process is in the foreground process group of its control terminal.\n<       The process has raised CPU scheduling priority.\n>       The process has specified a soft limit on memory requirements and is currently exceeding that limit;\n       such a process is (necessarily) not swapped.\nA       the process has asked for random page replacement (VA_ANOM, from vadvise(2), for example, lisp(1) in\n       a garbage collect).\nE       The process is trying to exit.\nL       The process has pages locked in core (for example, for raw I/O).\nN       The process has reduced CPU scheduling priority (see setpriority(2)).\nS       The process has asked for FIFO page replacement (VA_SEQL, from vadvise(2), for example, a large\n       image processing program using virtual memory to sequentially address voluminous data).\ns       The process is a session leader.\nV       The process is suspended during a vfork(2).\nW       The process is swapped out.\nX       The process is being traced or debugged.\n```\n\n`%cpu` : -  percentage CPU usage (alias pcpu)\n`%mem` : -  percentage memory usage (alias pmem)\n\n`TTY` : -  the name of the console that the user is logged into\n\n`TIME` : -  the amount of CPU in minutes and seconds that the process has been running\n`CMD` : -  the name of the command that launched the process\n\nExamples:\n\n`$ ps aux`  列出当前用户进程 \n\n`$ ps -A`  列出所有进程\n\n`$ ps -A --forest`  按树状结构列出所有进程\n\n`$ ps -l`  列出所进程详细信息\n\n### 缩小范围查找\n`$ ps -C Xcode`  使用关健字键字进行过滤 **mac及rpi上待验证**\n\n`$ ps -l -p 3536`  列出出特定PID的进程\n\n`$ ps -hut`  列出出特定用户的进程\n\n`$ ps --ppid 3536`  列出PID下的线程信息 **mac及rpi上待验证**\n\n`$ ps -o user,pid,%cpu,%mem,stat,time` 根据字段查询进程信息\n\n`ps aux | egrep '(cron|syslog)'` 查找与cron 与 syslog 这两个服务有关的 PID 号码\n\n### 排序\n\n`$ ps -A --sort=pcpu` 按cup使用率排序  或：\n\n`$ ps -l | sort -nk 3 | head -3` 按cup使用率排序  \n\n`$ ps -A --sort=pmem` 按内存使用率排序  或：\n\n`$ ps -l | sort -nk 3 | head -3` 按内存使用率排序\n\n**注意：**\n> `--sort` is supported by ps from procps, other implementations may not have this option.如：\n`$ ps --sort=-pcpu | head -n 6`\n","source":"_posts/Linux/Linux命令_PS_任务管理.md","raw":"---\ntitle: Linux 命令：任务管理 ps\ndate: 2021-10-18 13:20:22\ncategories:\n- Linux\ntags:\n- Linux\n- ps\n---\n\n\n<!--# Linux 命令：任务管理 `ps`-->\n\n常用 `man ps`命令\n\n`PID` : -  This is the unique process ID\n\n`PPID` : -  This is the the Parent Process ID\n\n`S/STAT`: the current status of the process\n\n<!-- more -->\n\n\n进程状态解释：\n\n```\nI       Marks a process that is idle (sleeping for longer than about 20 seconds).\nR       Marks a runnable process.\nS       Marks a process that is sleeping for less than about 20 seconds.\nT       Marks a stopped process.\nU       Marks a process in uninterruptible wait.\nZ       Marks a dead process (a ``zombie'').\n\nAdditional characters after these, if any, indicate additional state information:\n\n+       The process is in the foreground process group of its control terminal.\n<       The process has raised CPU scheduling priority.\n>       The process has specified a soft limit on memory requirements and is currently exceeding that limit;\n       such a process is (necessarily) not swapped.\nA       the process has asked for random page replacement (VA_ANOM, from vadvise(2), for example, lisp(1) in\n       a garbage collect).\nE       The process is trying to exit.\nL       The process has pages locked in core (for example, for raw I/O).\nN       The process has reduced CPU scheduling priority (see setpriority(2)).\nS       The process has asked for FIFO page replacement (VA_SEQL, from vadvise(2), for example, a large\n       image processing program using virtual memory to sequentially address voluminous data).\ns       The process is a session leader.\nV       The process is suspended during a vfork(2).\nW       The process is swapped out.\nX       The process is being traced or debugged.\n```\n\n`%cpu` : -  percentage CPU usage (alias pcpu)\n`%mem` : -  percentage memory usage (alias pmem)\n\n`TTY` : -  the name of the console that the user is logged into\n\n`TIME` : -  the amount of CPU in minutes and seconds that the process has been running\n`CMD` : -  the name of the command that launched the process\n\nExamples:\n\n`$ ps aux`  列出当前用户进程 \n\n`$ ps -A`  列出所有进程\n\n`$ ps -A --forest`  按树状结构列出所有进程\n\n`$ ps -l`  列出所进程详细信息\n\n### 缩小范围查找\n`$ ps -C Xcode`  使用关健字键字进行过滤 **mac及rpi上待验证**\n\n`$ ps -l -p 3536`  列出出特定PID的进程\n\n`$ ps -hut`  列出出特定用户的进程\n\n`$ ps --ppid 3536`  列出PID下的线程信息 **mac及rpi上待验证**\n\n`$ ps -o user,pid,%cpu,%mem,stat,time` 根据字段查询进程信息\n\n`ps aux | egrep '(cron|syslog)'` 查找与cron 与 syslog 这两个服务有关的 PID 号码\n\n### 排序\n\n`$ ps -A --sort=pcpu` 按cup使用率排序  或：\n\n`$ ps -l | sort -nk 3 | head -3` 按cup使用率排序  \n\n`$ ps -A --sort=pmem` 按内存使用率排序  或：\n\n`$ ps -l | sort -nk 3 | head -3` 按内存使用率排序\n\n**注意：**\n> `--sort` is supported by ps from procps, other implementations may not have this option.如：\n`$ ps --sort=-pcpu | head -n 6`\n","slug":"Linux/Linux命令_PS_任务管理","published":1,"updated":"2022-07-06T12:30:17.031Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl74l5j5p000c2a37fq369tcw","content":"<!--# Linux 命令：任务管理 `ps`-->\n\n<p>常用 <code>man ps</code>命令</p>\n<p><code>PID</code> : -  This is the unique process ID</p>\n<p><code>PPID</code> : -  This is the the Parent Process ID</p>\n<p><code>S/STAT</code>: the current status of the process</p>\n<a id=\"more\"></a>\n\n\n<p>进程状态解释：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">I       Marks a process that is idle (sleeping for longer than about 20 seconds).</span><br><span class=\"line\">R       Marks a runnable process.</span><br><span class=\"line\">S       Marks a process that is sleeping for less than about 20 seconds.</span><br><span class=\"line\">T       Marks a stopped process.</span><br><span class=\"line\">U       Marks a process in uninterruptible wait.</span><br><span class=\"line\">Z       Marks a dead process (a &#96;&#96;zombie&#39;&#39;).</span><br><span class=\"line\"></span><br><span class=\"line\">Additional characters after these, if any, indicate additional state information:</span><br><span class=\"line\"></span><br><span class=\"line\">+       The process is in the foreground process group of its control terminal.</span><br><span class=\"line\">&lt;       The process has raised CPU scheduling priority.</span><br><span class=\"line\">&gt;       The process has specified a soft limit on memory requirements and is currently exceeding that limit;</span><br><span class=\"line\">       such a process is (necessarily) not swapped.</span><br><span class=\"line\">A       the process has asked for random page replacement (VA_ANOM, from vadvise(2), for example, lisp(1) in</span><br><span class=\"line\">       a garbage collect).</span><br><span class=\"line\">E       The process is trying to exit.</span><br><span class=\"line\">L       The process has pages locked in core (for example, for raw I&#x2F;O).</span><br><span class=\"line\">N       The process has reduced CPU scheduling priority (see setpriority(2)).</span><br><span class=\"line\">S       The process has asked for FIFO page replacement (VA_SEQL, from vadvise(2), for example, a large</span><br><span class=\"line\">       image processing program using virtual memory to sequentially address voluminous data).</span><br><span class=\"line\">s       The process is a session leader.</span><br><span class=\"line\">V       The process is suspended during a vfork(2).</span><br><span class=\"line\">W       The process is swapped out.</span><br><span class=\"line\">X       The process is being traced or debugged.</span><br></pre></td></tr></table></figure>\n\n<p><code>%cpu</code> : -  percentage CPU usage (alias pcpu)<br><code>%mem</code> : -  percentage memory usage (alias pmem)</p>\n<p><code>TTY</code> : -  the name of the console that the user is logged into</p>\n<p><code>TIME</code> : -  the amount of CPU in minutes and seconds that the process has been running<br><code>CMD</code> : -  the name of the command that launched the process</p>\n<p>Examples:</p>\n<p><code>$ ps aux</code>  列出当前用户进程 </p>\n<p><code>$ ps -A</code>  列出所有进程</p>\n<p><code>$ ps -A --forest</code>  按树状结构列出所有进程</p>\n<p><code>$ ps -l</code>  列出所进程详细信息</p>\n<h3 id=\"缩小范围查找\"><a href=\"#缩小范围查找\" class=\"headerlink\" title=\"缩小范围查找\"></a>缩小范围查找</h3><p><code>$ ps -C Xcode</code>  使用关健字键字进行过滤 <strong>mac及rpi上待验证</strong></p>\n<p><code>$ ps -l -p 3536</code>  列出出特定PID的进程</p>\n<p><code>$ ps -hut</code>  列出出特定用户的进程</p>\n<p><code>$ ps --ppid 3536</code>  列出PID下的线程信息 <strong>mac及rpi上待验证</strong></p>\n<p><code>$ ps -o user,pid,%cpu,%mem,stat,time</code> 根据字段查询进程信息</p>\n<p><code>ps aux | egrep &#39;(cron|syslog)&#39;</code> 查找与cron 与 syslog 这两个服务有关的 PID 号码</p>\n<h3 id=\"排序\"><a href=\"#排序\" class=\"headerlink\" title=\"排序\"></a>排序</h3><p><code>$ ps -A --sort=pcpu</code> 按cup使用率排序  或：</p>\n<p><code>$ ps -l | sort -nk 3 | head -3</code> 按cup使用率排序  </p>\n<p><code>$ ps -A --sort=pmem</code> 按内存使用率排序  或：</p>\n<p><code>$ ps -l | sort -nk 3 | head -3</code> 按内存使用率排序</p>\n<p><strong>注意：</strong></p>\n<blockquote>\n<p><code>--sort</code> is supported by ps from procps, other implementations may not have this option.如：<br><code>$ ps --sort=-pcpu | head -n 6</code></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<!--# Linux 命令：任务管理 `ps`-->\n\n<p>常用 <code>man ps</code>命令</p>\n<p><code>PID</code> : -  This is the unique process ID</p>\n<p><code>PPID</code> : -  This is the the Parent Process ID</p>\n<p><code>S/STAT</code>: the current status of the process</p>","more":"<p>进程状态解释：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">I       Marks a process that is idle (sleeping for longer than about 20 seconds).</span><br><span class=\"line\">R       Marks a runnable process.</span><br><span class=\"line\">S       Marks a process that is sleeping for less than about 20 seconds.</span><br><span class=\"line\">T       Marks a stopped process.</span><br><span class=\"line\">U       Marks a process in uninterruptible wait.</span><br><span class=\"line\">Z       Marks a dead process (a &#96;&#96;zombie&#39;&#39;).</span><br><span class=\"line\"></span><br><span class=\"line\">Additional characters after these, if any, indicate additional state information:</span><br><span class=\"line\"></span><br><span class=\"line\">+       The process is in the foreground process group of its control terminal.</span><br><span class=\"line\">&lt;       The process has raised CPU scheduling priority.</span><br><span class=\"line\">&gt;       The process has specified a soft limit on memory requirements and is currently exceeding that limit;</span><br><span class=\"line\">       such a process is (necessarily) not swapped.</span><br><span class=\"line\">A       the process has asked for random page replacement (VA_ANOM, from vadvise(2), for example, lisp(1) in</span><br><span class=\"line\">       a garbage collect).</span><br><span class=\"line\">E       The process is trying to exit.</span><br><span class=\"line\">L       The process has pages locked in core (for example, for raw I&#x2F;O).</span><br><span class=\"line\">N       The process has reduced CPU scheduling priority (see setpriority(2)).</span><br><span class=\"line\">S       The process has asked for FIFO page replacement (VA_SEQL, from vadvise(2), for example, a large</span><br><span class=\"line\">       image processing program using virtual memory to sequentially address voluminous data).</span><br><span class=\"line\">s       The process is a session leader.</span><br><span class=\"line\">V       The process is suspended during a vfork(2).</span><br><span class=\"line\">W       The process is swapped out.</span><br><span class=\"line\">X       The process is being traced or debugged.</span><br></pre></td></tr></table></figure>\n\n<p><code>%cpu</code> : -  percentage CPU usage (alias pcpu)<br><code>%mem</code> : -  percentage memory usage (alias pmem)</p>\n<p><code>TTY</code> : -  the name of the console that the user is logged into</p>\n<p><code>TIME</code> : -  the amount of CPU in minutes and seconds that the process has been running<br><code>CMD</code> : -  the name of the command that launched the process</p>\n<p>Examples:</p>\n<p><code>$ ps aux</code>  列出当前用户进程 </p>\n<p><code>$ ps -A</code>  列出所有进程</p>\n<p><code>$ ps -A --forest</code>  按树状结构列出所有进程</p>\n<p><code>$ ps -l</code>  列出所进程详细信息</p>\n<h3 id=\"缩小范围查找\"><a href=\"#缩小范围查找\" class=\"headerlink\" title=\"缩小范围查找\"></a>缩小范围查找</h3><p><code>$ ps -C Xcode</code>  使用关健字键字进行过滤 <strong>mac及rpi上待验证</strong></p>\n<p><code>$ ps -l -p 3536</code>  列出出特定PID的进程</p>\n<p><code>$ ps -hut</code>  列出出特定用户的进程</p>\n<p><code>$ ps --ppid 3536</code>  列出PID下的线程信息 <strong>mac及rpi上待验证</strong></p>\n<p><code>$ ps -o user,pid,%cpu,%mem,stat,time</code> 根据字段查询进程信息</p>\n<p><code>ps aux | egrep &#39;(cron|syslog)&#39;</code> 查找与cron 与 syslog 这两个服务有关的 PID 号码</p>\n<h3 id=\"排序\"><a href=\"#排序\" class=\"headerlink\" title=\"排序\"></a>排序</h3><p><code>$ ps -A --sort=pcpu</code> 按cup使用率排序  或：</p>\n<p><code>$ ps -l | sort -nk 3 | head -3</code> 按cup使用率排序  </p>\n<p><code>$ ps -A --sort=pmem</code> 按内存使用率排序  或：</p>\n<p><code>$ ps -l | sort -nk 3 | head -3</code> 按内存使用率排序</p>\n<p><strong>注意：</strong></p>\n<blockquote>\n<p><code>--sort</code> is supported by ps from procps, other implementations may not have this option.如：<br><code>$ ps --sort=-pcpu | head -n 6</code></p>\n</blockquote>"},{"title":"Linux 文件系统","date":"2021-10-19T03:15:18.000Z","_content":"\n<!-- # Linux 文件系统 -->\n\n## 什么是文件系统\n\n想想数据在磁盘（硬盘、U盘、光盘）是怎么存储的。文件系统就在物理磁盘上存储及管理数据的系统。\n\n<!-- more -->\n\n### 特性：\n\n* 物理磁盘分区后，需要格式化为对应的一种文件系统，之后才能在这个磁盘中进行数据的存储等操作。\n\n\t> 安装操作系统之前为什么要格式化，因为每种操作系统所设置的文件属性/权限并不相同\n\t\n* 每种计算机操作系统能够使用的文件系统并不相同\n\t* Linux 的标准文件系统: ext2， ext3, ext4, XFS\n\t* Microsoft operating system: FAT, FAT16, FAT32, NTFS, ExFAT\n\t* Mac OS: Mac OS Extended(HFS+), Apple File System (APFS)\n\n### 具体运作:\n\n#### 索引式文件系统（indexed allocation）\n\n实际的将文件存到磁盘，通常会有三个部分的数据存储下来：\n\n1. 文件的属性数据， 比如文件的权限，拥有者，文件的大小，创建时间等等。\n2. 文件的实际数据，比如电影每一帧的数据。\n3. 文件系统自身的整体信息数据。比如文件系统的格式啊，用了多少还剩多少\n\n文件系统用inode来存储文件的属性, data block来存储文件的实际数据，用superblock来记录filesystem的整体信息，具体信息如下：\n\n* superblock：记录此 filesystem 的整体信息，包括inode/block的总量、使用量、剩余量， 以及文件系统的格式与相关信息等；\n* inode：记录文件的属性，一个文件占用一个inode，同时记录此文件的数据所在的 block 号码；\n* block：实际记录文件的内容，若文件太大时，会占用多个 block 。\n\n磁盘在格式化的时候，会将磁盘分区分出几个区域，有一个区域用来专门存放superblock， 有一个区域专门用来存放 inode，还有一个区域专门用来存放data block。\n\n每一个data block和data block都有编号，每一个文件都会占用一个inode，并且inode内存有实际文件数据存放的 block号码。这样找到文件的inode就能找到对应的实际文件数据位置。\n\n> \n* inode的大小一般为128 Bytes，新的ext4或xfs可设置256 Bytes。\n* 对于目录，文件系统会分配一个 inode 与至少一块 block 给该目录。其中，inode 记录该目录的相关权限与属性，并可记录分配到的那块 block 号码； 而 block 则是记录在这个目录下的文件名与该文件名占用的 inode 号码数据。\n* superblock 中用block bitmap及inode bitmap存放有所有已用的及未用的 block 及 inode信息。\n\n磁盘在格式化的时候就会把inode和data block规划好，在使用的时候是固定不变的。除非格式化的时候会重新规划。\n\n>\n* 磁盘容量大，为了方便管理，在格式化的时候基本上是区分为多个区块群组 （block group） 的，每个区块群组都有独立的 inode/block/superblock 系统\n* 如果磁盘大的话，规划inode及block就需要很长的时间，格式化动作慢。XFS 文件系统的inode与 block 是系统需要用到时才动态产生，格式化动作快。\n* data block 的大小，可在格式化的时候指定1K, 2K 及 4K，可根据需求选择。格式化大block考虑磁盘容量浪费，格式化小block考虑磁盘的读写性能。\n* 可能会出现inode先用完，而data block没有用完的情况。\n\n#### 查看文件系统信息\n\n```\n[root@study ~]# dumpe2fs [-bh] 设备文件名\n选项与参数：\n-b ：列出保留为坏轨的部分（一般用不到吧！？）\n-h ：仅列出 superblock 的数据，不会列出其他的区段内容！\n```\n\n`blkid &lt;==` 这个指令可以叫出目前系统有被格式化的设备\n\n`fdisk -lu` 查看当前盘的每个分区情况\n\n`dumpe2fs /dev/sda2` 可列出文件系统信息\n\n#### 非索引式文件系统（indexed allocation）\nWindows中的FAT文件系统就不是索引式文件系统,像是一个链式系统，每一个数据块都存放下一个数据块的索引\n闪存文件系统：JFFS2与YAFFS\n\n `磁盘碎片整理`，`磁盘重组` 这些概念就是因为非索引式文件系统的数据块太过离散，需要将block进行整理，提高读性性能。索引式文件系统就较少需要进行碎片整理。\n\n### 文件的写入过程\n\n假设我们想要新增一个文件，此时文件系统的行为是：\n\n1. 先确定使用者对于欲新增文件的目录是否具有 w 与 x 的权限，若有的话才能新增；\n2. 根据 inode bitmap 找到没有使用的 inode 号码，并将新文件的权限/属性写入；\n3. 根据 block bitmap 找到没有使用中的 block 号码，并将实际的数据写入 block 中，且更新 inode 的 block 指向数据；\n4. 将刚刚写入的 inode 与 block 数据同步更新 inode bitmap 与 block bitmap，并更新 superblock 的内容。\n\n#### 日志式文件系统 （Journaling filesystem）\n如果系统在上述文件的写入过程中遇到断电，完成了第三步而没有完成第四步，就会产生superblock中的记录与实际的数据不一致。操作系统在开机的时候就会进行数据检查。全盘检查很费时，日志式文件系统的出现用来简化一致性检查的步骤。日志式文件系统会规划出一个区域，用来记录文件写入或修改时的步骤。如下：\n>\n1. 预备：当系统要写入一个文件时，会先在日志记录区块中纪录某个文件准备要写入的信息；\n2. 实际写入：开始写入文件的权限与数据；开始更新 metadata 的数据；\n3. 结束：完成数据与 metadata 的更新后，在日志记录区块当中完成该文件的纪录。\n\n如果出现不一致的问题，只要查日志记录区块就可以了，需不要全盘检查。\n\n## 文件系统的类型\n* 传统文件系统：ext2 / minix / MS-DOS / FAT （用 vfat 模块） / iso9660 （光盘）等等；\n* 日志式文件系统：ext3 /ext4 / ReiserFS / Windows' NTFS / IBM's JFS / SGI's XFS / ZFS / APFS\n* 网络文件系统：NFS, SMBFS, SMB, CIFS, WebDAV, AFP\n\n## 不同的操作系统支持不同的文件系统\n\n### Linux 系统 VFS\n\n很多硬盘插上就能用，而不用我们指定用什么文件系统去读取。这是VFS(Virtual Filesystem Switch)核心功能在帮忙做文件系统的读取工作。整个 Linux 认识的 filesystem 都是 VFS 在进行管理，VFS自动检测分区上的文件系统类型。\n\n查看Linux支持的文件系统： `ls -l /lib/modules/$(uname -r)/kernel/fs`\n\n查看Linux已载入到内存中的支持的文件系统： `cat /proc/filesystems`\n\n\n**主要是下面的学习资料记录：**\n\n[鸟哥私房菜 - 7.1 认识 Linux 文件系统](https://wizardforcel.gitbooks.io/vbird-linux-basic-4e/content/59.html)\n\n[漫谈Linux标准的文件系统(Ext2/Ext3/Ext4)](https://www.cnblogs.com/justmine/p/9128730.html)\n\n[一口气搞懂「文件系统」，就靠这 25 张图了](https://segmentfault.com/a/1190000023615225)","source":"_posts/Linux/Linux文件系统.md","raw":"---\ntitle: Linux 文件系统 \ndate: 2021-10-19 11:15:18\ncategories:\n- Linux\ntags:\n- Linux\n---\n\n<!-- # Linux 文件系统 -->\n\n## 什么是文件系统\n\n想想数据在磁盘（硬盘、U盘、光盘）是怎么存储的。文件系统就在物理磁盘上存储及管理数据的系统。\n\n<!-- more -->\n\n### 特性：\n\n* 物理磁盘分区后，需要格式化为对应的一种文件系统，之后才能在这个磁盘中进行数据的存储等操作。\n\n\t> 安装操作系统之前为什么要格式化，因为每种操作系统所设置的文件属性/权限并不相同\n\t\n* 每种计算机操作系统能够使用的文件系统并不相同\n\t* Linux 的标准文件系统: ext2， ext3, ext4, XFS\n\t* Microsoft operating system: FAT, FAT16, FAT32, NTFS, ExFAT\n\t* Mac OS: Mac OS Extended(HFS+), Apple File System (APFS)\n\n### 具体运作:\n\n#### 索引式文件系统（indexed allocation）\n\n实际的将文件存到磁盘，通常会有三个部分的数据存储下来：\n\n1. 文件的属性数据， 比如文件的权限，拥有者，文件的大小，创建时间等等。\n2. 文件的实际数据，比如电影每一帧的数据。\n3. 文件系统自身的整体信息数据。比如文件系统的格式啊，用了多少还剩多少\n\n文件系统用inode来存储文件的属性, data block来存储文件的实际数据，用superblock来记录filesystem的整体信息，具体信息如下：\n\n* superblock：记录此 filesystem 的整体信息，包括inode/block的总量、使用量、剩余量， 以及文件系统的格式与相关信息等；\n* inode：记录文件的属性，一个文件占用一个inode，同时记录此文件的数据所在的 block 号码；\n* block：实际记录文件的内容，若文件太大时，会占用多个 block 。\n\n磁盘在格式化的时候，会将磁盘分区分出几个区域，有一个区域用来专门存放superblock， 有一个区域专门用来存放 inode，还有一个区域专门用来存放data block。\n\n每一个data block和data block都有编号，每一个文件都会占用一个inode，并且inode内存有实际文件数据存放的 block号码。这样找到文件的inode就能找到对应的实际文件数据位置。\n\n> \n* inode的大小一般为128 Bytes，新的ext4或xfs可设置256 Bytes。\n* 对于目录，文件系统会分配一个 inode 与至少一块 block 给该目录。其中，inode 记录该目录的相关权限与属性，并可记录分配到的那块 block 号码； 而 block 则是记录在这个目录下的文件名与该文件名占用的 inode 号码数据。\n* superblock 中用block bitmap及inode bitmap存放有所有已用的及未用的 block 及 inode信息。\n\n磁盘在格式化的时候就会把inode和data block规划好，在使用的时候是固定不变的。除非格式化的时候会重新规划。\n\n>\n* 磁盘容量大，为了方便管理，在格式化的时候基本上是区分为多个区块群组 （block group） 的，每个区块群组都有独立的 inode/block/superblock 系统\n* 如果磁盘大的话，规划inode及block就需要很长的时间，格式化动作慢。XFS 文件系统的inode与 block 是系统需要用到时才动态产生，格式化动作快。\n* data block 的大小，可在格式化的时候指定1K, 2K 及 4K，可根据需求选择。格式化大block考虑磁盘容量浪费，格式化小block考虑磁盘的读写性能。\n* 可能会出现inode先用完，而data block没有用完的情况。\n\n#### 查看文件系统信息\n\n```\n[root@study ~]# dumpe2fs [-bh] 设备文件名\n选项与参数：\n-b ：列出保留为坏轨的部分（一般用不到吧！？）\n-h ：仅列出 superblock 的数据，不会列出其他的区段内容！\n```\n\n`blkid &lt;==` 这个指令可以叫出目前系统有被格式化的设备\n\n`fdisk -lu` 查看当前盘的每个分区情况\n\n`dumpe2fs /dev/sda2` 可列出文件系统信息\n\n#### 非索引式文件系统（indexed allocation）\nWindows中的FAT文件系统就不是索引式文件系统,像是一个链式系统，每一个数据块都存放下一个数据块的索引\n闪存文件系统：JFFS2与YAFFS\n\n `磁盘碎片整理`，`磁盘重组` 这些概念就是因为非索引式文件系统的数据块太过离散，需要将block进行整理，提高读性性能。索引式文件系统就较少需要进行碎片整理。\n\n### 文件的写入过程\n\n假设我们想要新增一个文件，此时文件系统的行为是：\n\n1. 先确定使用者对于欲新增文件的目录是否具有 w 与 x 的权限，若有的话才能新增；\n2. 根据 inode bitmap 找到没有使用的 inode 号码，并将新文件的权限/属性写入；\n3. 根据 block bitmap 找到没有使用中的 block 号码，并将实际的数据写入 block 中，且更新 inode 的 block 指向数据；\n4. 将刚刚写入的 inode 与 block 数据同步更新 inode bitmap 与 block bitmap，并更新 superblock 的内容。\n\n#### 日志式文件系统 （Journaling filesystem）\n如果系统在上述文件的写入过程中遇到断电，完成了第三步而没有完成第四步，就会产生superblock中的记录与实际的数据不一致。操作系统在开机的时候就会进行数据检查。全盘检查很费时，日志式文件系统的出现用来简化一致性检查的步骤。日志式文件系统会规划出一个区域，用来记录文件写入或修改时的步骤。如下：\n>\n1. 预备：当系统要写入一个文件时，会先在日志记录区块中纪录某个文件准备要写入的信息；\n2. 实际写入：开始写入文件的权限与数据；开始更新 metadata 的数据；\n3. 结束：完成数据与 metadata 的更新后，在日志记录区块当中完成该文件的纪录。\n\n如果出现不一致的问题，只要查日志记录区块就可以了，需不要全盘检查。\n\n## 文件系统的类型\n* 传统文件系统：ext2 / minix / MS-DOS / FAT （用 vfat 模块） / iso9660 （光盘）等等；\n* 日志式文件系统：ext3 /ext4 / ReiserFS / Windows' NTFS / IBM's JFS / SGI's XFS / ZFS / APFS\n* 网络文件系统：NFS, SMBFS, SMB, CIFS, WebDAV, AFP\n\n## 不同的操作系统支持不同的文件系统\n\n### Linux 系统 VFS\n\n很多硬盘插上就能用，而不用我们指定用什么文件系统去读取。这是VFS(Virtual Filesystem Switch)核心功能在帮忙做文件系统的读取工作。整个 Linux 认识的 filesystem 都是 VFS 在进行管理，VFS自动检测分区上的文件系统类型。\n\n查看Linux支持的文件系统： `ls -l /lib/modules/$(uname -r)/kernel/fs`\n\n查看Linux已载入到内存中的支持的文件系统： `cat /proc/filesystems`\n\n\n**主要是下面的学习资料记录：**\n\n[鸟哥私房菜 - 7.1 认识 Linux 文件系统](https://wizardforcel.gitbooks.io/vbird-linux-basic-4e/content/59.html)\n\n[漫谈Linux标准的文件系统(Ext2/Ext3/Ext4)](https://www.cnblogs.com/justmine/p/9128730.html)\n\n[一口气搞懂「文件系统」，就靠这 25 张图了](https://segmentfault.com/a/1190000023615225)","slug":"Linux/Linux文件系统","published":1,"updated":"2022-07-06T12:31:19.494Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl74l5j5q000g2a372o7w4dhy","content":"<!-- # Linux 文件系统 -->\n\n<h2 id=\"什么是文件系统\"><a href=\"#什么是文件系统\" class=\"headerlink\" title=\"什么是文件系统\"></a>什么是文件系统</h2><p>想想数据在磁盘（硬盘、U盘、光盘）是怎么存储的。文件系统就在物理磁盘上存储及管理数据的系统。</p>\n<a id=\"more\"></a>\n\n<h3 id=\"特性：\"><a href=\"#特性：\" class=\"headerlink\" title=\"特性：\"></a>特性：</h3><ul>\n<li><p>物理磁盘分区后，需要格式化为对应的一种文件系统，之后才能在这个磁盘中进行数据的存储等操作。</p>\n<blockquote>\n<p>安装操作系统之前为什么要格式化，因为每种操作系统所设置的文件属性/权限并不相同</p>\n</blockquote>\n</li>\n<li><p>每种计算机操作系统能够使用的文件系统并不相同</p>\n<ul>\n<li>Linux 的标准文件系统: ext2， ext3, ext4, XFS</li>\n<li>Microsoft operating system: FAT, FAT16, FAT32, NTFS, ExFAT</li>\n<li>Mac OS: Mac OS Extended(HFS+), Apple File System (APFS)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"具体运作\"><a href=\"#具体运作\" class=\"headerlink\" title=\"具体运作:\"></a>具体运作:</h3><h4 id=\"索引式文件系统（indexed-allocation）\"><a href=\"#索引式文件系统（indexed-allocation）\" class=\"headerlink\" title=\"索引式文件系统（indexed allocation）\"></a>索引式文件系统（indexed allocation）</h4><p>实际的将文件存到磁盘，通常会有三个部分的数据存储下来：</p>\n<ol>\n<li>文件的属性数据， 比如文件的权限，拥有者，文件的大小，创建时间等等。</li>\n<li>文件的实际数据，比如电影每一帧的数据。</li>\n<li>文件系统自身的整体信息数据。比如文件系统的格式啊，用了多少还剩多少</li>\n</ol>\n<p>文件系统用inode来存储文件的属性, data block来存储文件的实际数据，用superblock来记录filesystem的整体信息，具体信息如下：</p>\n<ul>\n<li>superblock：记录此 filesystem 的整体信息，包括inode/block的总量、使用量、剩余量， 以及文件系统的格式与相关信息等；</li>\n<li>inode：记录文件的属性，一个文件占用一个inode，同时记录此文件的数据所在的 block 号码；</li>\n<li>block：实际记录文件的内容，若文件太大时，会占用多个 block 。</li>\n</ul>\n<p>磁盘在格式化的时候，会将磁盘分区分出几个区域，有一个区域用来专门存放superblock， 有一个区域专门用来存放 inode，还有一个区域专门用来存放data block。</p>\n<p>每一个data block和data block都有编号，每一个文件都会占用一个inode，并且inode内存有实际文件数据存放的 block号码。这样找到文件的inode就能找到对应的实际文件数据位置。</p>\n<blockquote>\n</blockquote>\n<ul>\n<li>inode的大小一般为128 Bytes，新的ext4或xfs可设置256 Bytes。</li>\n<li>对于目录，文件系统会分配一个 inode 与至少一块 block 给该目录。其中，inode 记录该目录的相关权限与属性，并可记录分配到的那块 block 号码； 而 block 则是记录在这个目录下的文件名与该文件名占用的 inode 号码数据。</li>\n<li>superblock 中用block bitmap及inode bitmap存放有所有已用的及未用的 block 及 inode信息。</li>\n</ul>\n<p>磁盘在格式化的时候就会把inode和data block规划好，在使用的时候是固定不变的。除非格式化的时候会重新规划。</p>\n<blockquote>\n</blockquote>\n<ul>\n<li>磁盘容量大，为了方便管理，在格式化的时候基本上是区分为多个区块群组 （block group） 的，每个区块群组都有独立的 inode/block/superblock 系统</li>\n<li>如果磁盘大的话，规划inode及block就需要很长的时间，格式化动作慢。XFS 文件系统的inode与 block 是系统需要用到时才动态产生，格式化动作快。</li>\n<li>data block 的大小，可在格式化的时候指定1K, 2K 及 4K，可根据需求选择。格式化大block考虑磁盘容量浪费，格式化小block考虑磁盘的读写性能。</li>\n<li>可能会出现inode先用完，而data block没有用完的情况。</li>\n</ul>\n<h4 id=\"查看文件系统信息\"><a href=\"#查看文件系统信息\" class=\"headerlink\" title=\"查看文件系统信息\"></a>查看文件系统信息</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@study ~]# dumpe2fs [-bh] 设备文件名</span><br><span class=\"line\">选项与参数：</span><br><span class=\"line\">-b ：列出保留为坏轨的部分（一般用不到吧！？）</span><br><span class=\"line\">-h ：仅列出 superblock 的数据，不会列出其他的区段内容！</span><br></pre></td></tr></table></figure>\n\n<p><code>blkid &amp;lt;==</code> 这个指令可以叫出目前系统有被格式化的设备</p>\n<p><code>fdisk -lu</code> 查看当前盘的每个分区情况</p>\n<p><code>dumpe2fs /dev/sda2</code> 可列出文件系统信息</p>\n<h4 id=\"非索引式文件系统（indexed-allocation）\"><a href=\"#非索引式文件系统（indexed-allocation）\" class=\"headerlink\" title=\"非索引式文件系统（indexed allocation）\"></a>非索引式文件系统（indexed allocation）</h4><p>Windows中的FAT文件系统就不是索引式文件系统,像是一个链式系统，每一个数据块都存放下一个数据块的索引<br>闪存文件系统：JFFS2与YAFFS</p>\n<p> <code>磁盘碎片整理</code>，<code>磁盘重组</code> 这些概念就是因为非索引式文件系统的数据块太过离散，需要将block进行整理，提高读性性能。索引式文件系统就较少需要进行碎片整理。</p>\n<h3 id=\"文件的写入过程\"><a href=\"#文件的写入过程\" class=\"headerlink\" title=\"文件的写入过程\"></a>文件的写入过程</h3><p>假设我们想要新增一个文件，此时文件系统的行为是：</p>\n<ol>\n<li>先确定使用者对于欲新增文件的目录是否具有 w 与 x 的权限，若有的话才能新增；</li>\n<li>根据 inode bitmap 找到没有使用的 inode 号码，并将新文件的权限/属性写入；</li>\n<li>根据 block bitmap 找到没有使用中的 block 号码，并将实际的数据写入 block 中，且更新 inode 的 block 指向数据；</li>\n<li>将刚刚写入的 inode 与 block 数据同步更新 inode bitmap 与 block bitmap，并更新 superblock 的内容。</li>\n</ol>\n<h4 id=\"日志式文件系统-（Journaling-filesystem）\"><a href=\"#日志式文件系统-（Journaling-filesystem）\" class=\"headerlink\" title=\"日志式文件系统 （Journaling filesystem）\"></a>日志式文件系统 （Journaling filesystem）</h4><p>如果系统在上述文件的写入过程中遇到断电，完成了第三步而没有完成第四步，就会产生superblock中的记录与实际的数据不一致。操作系统在开机的时候就会进行数据检查。全盘检查很费时，日志式文件系统的出现用来简化一致性检查的步骤。日志式文件系统会规划出一个区域，用来记录文件写入或修改时的步骤。如下：</p>\n<blockquote>\n</blockquote>\n<ol>\n<li>预备：当系统要写入一个文件时，会先在日志记录区块中纪录某个文件准备要写入的信息；</li>\n<li>实际写入：开始写入文件的权限与数据；开始更新 metadata 的数据；</li>\n<li>结束：完成数据与 metadata 的更新后，在日志记录区块当中完成该文件的纪录。</li>\n</ol>\n<p>如果出现不一致的问题，只要查日志记录区块就可以了，需不要全盘检查。</p>\n<h2 id=\"文件系统的类型\"><a href=\"#文件系统的类型\" class=\"headerlink\" title=\"文件系统的类型\"></a>文件系统的类型</h2><ul>\n<li>传统文件系统：ext2 / minix / MS-DOS / FAT （用 vfat 模块） / iso9660 （光盘）等等；</li>\n<li>日志式文件系统：ext3 /ext4 / ReiserFS / Windows’ NTFS / IBM’s JFS / SGI’s XFS / ZFS / APFS</li>\n<li>网络文件系统：NFS, SMBFS, SMB, CIFS, WebDAV, AFP</li>\n</ul>\n<h2 id=\"不同的操作系统支持不同的文件系统\"><a href=\"#不同的操作系统支持不同的文件系统\" class=\"headerlink\" title=\"不同的操作系统支持不同的文件系统\"></a>不同的操作系统支持不同的文件系统</h2><h3 id=\"Linux-系统-VFS\"><a href=\"#Linux-系统-VFS\" class=\"headerlink\" title=\"Linux 系统 VFS\"></a>Linux 系统 VFS</h3><p>很多硬盘插上就能用，而不用我们指定用什么文件系统去读取。这是VFS(Virtual Filesystem Switch)核心功能在帮忙做文件系统的读取工作。整个 Linux 认识的 filesystem 都是 VFS 在进行管理，VFS自动检测分区上的文件系统类型。</p>\n<p>查看Linux支持的文件系统： <code>ls -l /lib/modules/$(uname -r)/kernel/fs</code></p>\n<p>查看Linux已载入到内存中的支持的文件系统： <code>cat /proc/filesystems</code></p>\n<p><strong>主要是下面的学习资料记录：</strong></p>\n<p><a href=\"https://wizardforcel.gitbooks.io/vbird-linux-basic-4e/content/59.html\">鸟哥私房菜 - 7.1 认识 Linux 文件系统</a></p>\n<p><a href=\"https://www.cnblogs.com/justmine/p/9128730.html\">漫谈Linux标准的文件系统(Ext2/Ext3/Ext4)</a></p>\n<p><a href=\"https://segmentfault.com/a/1190000023615225\">一口气搞懂「文件系统」，就靠这 25 张图了</a></p>\n","site":{"data":{}},"excerpt":"<!-- # Linux 文件系统 -->\n\n<h2 id=\"什么是文件系统\"><a href=\"#什么是文件系统\" class=\"headerlink\" title=\"什么是文件系统\"></a>什么是文件系统</h2><p>想想数据在磁盘（硬盘、U盘、光盘）是怎么存储的。文件系统就在物理磁盘上存储及管理数据的系统。</p>","more":"<h3 id=\"特性：\"><a href=\"#特性：\" class=\"headerlink\" title=\"特性：\"></a>特性：</h3><ul>\n<li><p>物理磁盘分区后，需要格式化为对应的一种文件系统，之后才能在这个磁盘中进行数据的存储等操作。</p>\n<blockquote>\n<p>安装操作系统之前为什么要格式化，因为每种操作系统所设置的文件属性/权限并不相同</p>\n</blockquote>\n</li>\n<li><p>每种计算机操作系统能够使用的文件系统并不相同</p>\n<ul>\n<li>Linux 的标准文件系统: ext2， ext3, ext4, XFS</li>\n<li>Microsoft operating system: FAT, FAT16, FAT32, NTFS, ExFAT</li>\n<li>Mac OS: Mac OS Extended(HFS+), Apple File System (APFS)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"具体运作\"><a href=\"#具体运作\" class=\"headerlink\" title=\"具体运作:\"></a>具体运作:</h3><h4 id=\"索引式文件系统（indexed-allocation）\"><a href=\"#索引式文件系统（indexed-allocation）\" class=\"headerlink\" title=\"索引式文件系统（indexed allocation）\"></a>索引式文件系统（indexed allocation）</h4><p>实际的将文件存到磁盘，通常会有三个部分的数据存储下来：</p>\n<ol>\n<li>文件的属性数据， 比如文件的权限，拥有者，文件的大小，创建时间等等。</li>\n<li>文件的实际数据，比如电影每一帧的数据。</li>\n<li>文件系统自身的整体信息数据。比如文件系统的格式啊，用了多少还剩多少</li>\n</ol>\n<p>文件系统用inode来存储文件的属性, data block来存储文件的实际数据，用superblock来记录filesystem的整体信息，具体信息如下：</p>\n<ul>\n<li>superblock：记录此 filesystem 的整体信息，包括inode/block的总量、使用量、剩余量， 以及文件系统的格式与相关信息等；</li>\n<li>inode：记录文件的属性，一个文件占用一个inode，同时记录此文件的数据所在的 block 号码；</li>\n<li>block：实际记录文件的内容，若文件太大时，会占用多个 block 。</li>\n</ul>\n<p>磁盘在格式化的时候，会将磁盘分区分出几个区域，有一个区域用来专门存放superblock， 有一个区域专门用来存放 inode，还有一个区域专门用来存放data block。</p>\n<p>每一个data block和data block都有编号，每一个文件都会占用一个inode，并且inode内存有实际文件数据存放的 block号码。这样找到文件的inode就能找到对应的实际文件数据位置。</p>\n<blockquote>\n</blockquote>\n<ul>\n<li>inode的大小一般为128 Bytes，新的ext4或xfs可设置256 Bytes。</li>\n<li>对于目录，文件系统会分配一个 inode 与至少一块 block 给该目录。其中，inode 记录该目录的相关权限与属性，并可记录分配到的那块 block 号码； 而 block 则是记录在这个目录下的文件名与该文件名占用的 inode 号码数据。</li>\n<li>superblock 中用block bitmap及inode bitmap存放有所有已用的及未用的 block 及 inode信息。</li>\n</ul>\n<p>磁盘在格式化的时候就会把inode和data block规划好，在使用的时候是固定不变的。除非格式化的时候会重新规划。</p>\n<blockquote>\n</blockquote>\n<ul>\n<li>磁盘容量大，为了方便管理，在格式化的时候基本上是区分为多个区块群组 （block group） 的，每个区块群组都有独立的 inode/block/superblock 系统</li>\n<li>如果磁盘大的话，规划inode及block就需要很长的时间，格式化动作慢。XFS 文件系统的inode与 block 是系统需要用到时才动态产生，格式化动作快。</li>\n<li>data block 的大小，可在格式化的时候指定1K, 2K 及 4K，可根据需求选择。格式化大block考虑磁盘容量浪费，格式化小block考虑磁盘的读写性能。</li>\n<li>可能会出现inode先用完，而data block没有用完的情况。</li>\n</ul>\n<h4 id=\"查看文件系统信息\"><a href=\"#查看文件系统信息\" class=\"headerlink\" title=\"查看文件系统信息\"></a>查看文件系统信息</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@study ~]# dumpe2fs [-bh] 设备文件名</span><br><span class=\"line\">选项与参数：</span><br><span class=\"line\">-b ：列出保留为坏轨的部分（一般用不到吧！？）</span><br><span class=\"line\">-h ：仅列出 superblock 的数据，不会列出其他的区段内容！</span><br></pre></td></tr></table></figure>\n\n<p><code>blkid &amp;lt;==</code> 这个指令可以叫出目前系统有被格式化的设备</p>\n<p><code>fdisk -lu</code> 查看当前盘的每个分区情况</p>\n<p><code>dumpe2fs /dev/sda2</code> 可列出文件系统信息</p>\n<h4 id=\"非索引式文件系统（indexed-allocation）\"><a href=\"#非索引式文件系统（indexed-allocation）\" class=\"headerlink\" title=\"非索引式文件系统（indexed allocation）\"></a>非索引式文件系统（indexed allocation）</h4><p>Windows中的FAT文件系统就不是索引式文件系统,像是一个链式系统，每一个数据块都存放下一个数据块的索引<br>闪存文件系统：JFFS2与YAFFS</p>\n<p> <code>磁盘碎片整理</code>，<code>磁盘重组</code> 这些概念就是因为非索引式文件系统的数据块太过离散，需要将block进行整理，提高读性性能。索引式文件系统就较少需要进行碎片整理。</p>\n<h3 id=\"文件的写入过程\"><a href=\"#文件的写入过程\" class=\"headerlink\" title=\"文件的写入过程\"></a>文件的写入过程</h3><p>假设我们想要新增一个文件，此时文件系统的行为是：</p>\n<ol>\n<li>先确定使用者对于欲新增文件的目录是否具有 w 与 x 的权限，若有的话才能新增；</li>\n<li>根据 inode bitmap 找到没有使用的 inode 号码，并将新文件的权限/属性写入；</li>\n<li>根据 block bitmap 找到没有使用中的 block 号码，并将实际的数据写入 block 中，且更新 inode 的 block 指向数据；</li>\n<li>将刚刚写入的 inode 与 block 数据同步更新 inode bitmap 与 block bitmap，并更新 superblock 的内容。</li>\n</ol>\n<h4 id=\"日志式文件系统-（Journaling-filesystem）\"><a href=\"#日志式文件系统-（Journaling-filesystem）\" class=\"headerlink\" title=\"日志式文件系统 （Journaling filesystem）\"></a>日志式文件系统 （Journaling filesystem）</h4><p>如果系统在上述文件的写入过程中遇到断电，完成了第三步而没有完成第四步，就会产生superblock中的记录与实际的数据不一致。操作系统在开机的时候就会进行数据检查。全盘检查很费时，日志式文件系统的出现用来简化一致性检查的步骤。日志式文件系统会规划出一个区域，用来记录文件写入或修改时的步骤。如下：</p>\n<blockquote>\n</blockquote>\n<ol>\n<li>预备：当系统要写入一个文件时，会先在日志记录区块中纪录某个文件准备要写入的信息；</li>\n<li>实际写入：开始写入文件的权限与数据；开始更新 metadata 的数据；</li>\n<li>结束：完成数据与 metadata 的更新后，在日志记录区块当中完成该文件的纪录。</li>\n</ol>\n<p>如果出现不一致的问题，只要查日志记录区块就可以了，需不要全盘检查。</p>\n<h2 id=\"文件系统的类型\"><a href=\"#文件系统的类型\" class=\"headerlink\" title=\"文件系统的类型\"></a>文件系统的类型</h2><ul>\n<li>传统文件系统：ext2 / minix / MS-DOS / FAT （用 vfat 模块） / iso9660 （光盘）等等；</li>\n<li>日志式文件系统：ext3 /ext4 / ReiserFS / Windows’ NTFS / IBM’s JFS / SGI’s XFS / ZFS / APFS</li>\n<li>网络文件系统：NFS, SMBFS, SMB, CIFS, WebDAV, AFP</li>\n</ul>\n<h2 id=\"不同的操作系统支持不同的文件系统\"><a href=\"#不同的操作系统支持不同的文件系统\" class=\"headerlink\" title=\"不同的操作系统支持不同的文件系统\"></a>不同的操作系统支持不同的文件系统</h2><h3 id=\"Linux-系统-VFS\"><a href=\"#Linux-系统-VFS\" class=\"headerlink\" title=\"Linux 系统 VFS\"></a>Linux 系统 VFS</h3><p>很多硬盘插上就能用，而不用我们指定用什么文件系统去读取。这是VFS(Virtual Filesystem Switch)核心功能在帮忙做文件系统的读取工作。整个 Linux 认识的 filesystem 都是 VFS 在进行管理，VFS自动检测分区上的文件系统类型。</p>\n<p>查看Linux支持的文件系统： <code>ls -l /lib/modules/$(uname -r)/kernel/fs</code></p>\n<p>查看Linux已载入到内存中的支持的文件系统： <code>cat /proc/filesystems</code></p>\n<p><strong>主要是下面的学习资料记录：</strong></p>\n<p><a href=\"https://wizardforcel.gitbooks.io/vbird-linux-basic-4e/content/59.html\">鸟哥私房菜 - 7.1 认识 Linux 文件系统</a></p>\n<p><a href=\"https://www.cnblogs.com/justmine/p/9128730.html\">漫谈Linux标准的文件系统(Ext2/Ext3/Ext4)</a></p>\n<p><a href=\"https://segmentfault.com/a/1190000023615225\">一口气搞懂「文件系统」，就靠这 25 张图了</a></p>"},{"title":"SSH远程登录和SCP远程文件传输","date":"2017-08-26T06:48:18.000Z","_content":"\n<!--## SSH远程登录和SCP远程文件传输-->\n\n### 远程登录：SSH\n\nSSH是一种网络协议，用于计算机之间的远程登录及其他网络服务。\n\n#### 1. 远程登录\n\n用登录名为 username, 远程服务地址为host\n\n\t\t$ ssh username@host\n\n<!-- more -->\n\t\t\n如指定端口号为 2222 (默认端口号为22)：\n\n\t\t$ ssh -p 2222 username@host\n\n也可以使用 -l 指定登录名\n\n\t\t$ ssh -l username -p 2222 host\n\t\t\n#### 2. 公钥登录\n如果觉得用密码账号登录特别不方便，可以试试公钥登录。\n\n> 所谓\"公钥登录\"，原理很简单，就是用户将自己的公钥储存在远程主机上。登录的时候，远程主机会向用户发送一段随机字符串，用户用自己的私钥加密后，再发回来。远程主机用事先储存的公钥进行解密，如果成功，就证明用户是可信的，直接允许登录shell，不再要求密码。\n\n首先你需要用SSH生成一对密钥：\n\n\t\t$ ssh-keygen\n\t\t\n运行上面的命令以后，系统会出现一系列提示，可以一路回车。完成之后，你应该可以在你的$HOME/.ssh/目录下看到两个文件，id_rsa就是你的私钥，而id_ras.pub则是你的公钥，现在你需要将你的公钥拷贝到服务器上，如果你的系统有ssh-copy-id命令，拷贝会很简单：\n\n\t\t$ ssh-copy-id username@host\n\t\t\n否则，你需要手动将你的私钥拷贝的服务器上的~/.ssh/authorized_keys文件中：\n\n\t\t$ ssh user@host 'mkdir -p .ssh && cat >> .ssh/authorized_keys' < ~/.ssh/id_rsa.pub\n\t\t\n> 上面这条命令由多个语句组成，依次分解开来看：\n> \n> 1. \"$ ssh user@host\"，表示登录远程主机；\n> 2. 单引号中的mkdir .ssh && cat >> .ssh/authorized_keys，表示登录后在远程shell上执行的命令：\n> 3. \"$ mkdir -p .ssh\"的作用是，如果用户主目录中的.ssh目录不存在，就创建一个；\n> 4. 'cat >> .ssh/authorized_keys' < ~/.ssh/id_rsa.pub的作用是，将本地的公钥文件~/.ssh/id_rsa.pub，重定向追加到远程文件authorized_keys的末尾。\n> \n> #### *参考资料*\n\n> [Public key authentication for SSH](https://www.ssh.com/ssh/public-key-authentication)\n\n> [SSH原理与运用（一）：远程登录](http://www.ruanyifeng.com/blog/2011/12/ssh_remote_login.html \"一些简单的SSH基础\")\n\n> [16 条技巧让你更高效使用 SSH](http://www.ruanyifeng.com/blog/2011/12/ssh_remote_login.html \"很COOL 但讲的不是很清晰SSH用法\")\n\n<br/>\n\n### 远程文件传输命令 ： SCP\n\nscp是secure copy的简写，用于在Linux下进行远程拷贝文件的命令，和它类似的命令有cp，不过cp只是在本机进行拷贝不能跨服务器，而且scp传输是加密的。\n> 1．命令格式：\n> \n> scp [参数] [原路径] [目标路径]\n\n#### 复制文件\n##### 从本地复制到远程服务器\n使用用户名username的授权，将本地桌面上的mainfest.plist文件复制到 198.168.4.85 的/home/wwwroot/common/mainfest.plist目录下面。\n\n`$ scp /Users/stoull/Desktop/LinkBox/mainfest.plist username@198.168.4.85:/home/wwwroot/common/mainfest.plist`\n\n##### 从远程服务器复制到本地\n如果要将远程的mainfest.plist文件复制到本地桌面，只要把两个参数对换即可\n\n`$ scp username@198.168.4.85:/home/wwwroot/common/mainfest.plist /Users/stoull/Desktop/LinkBox/mainfest.plist`\n\n##### 指定端口\n`$ scp -P 333333 /Users/stoull/Desktop/LinkBox/mainfest.plist username@198.168.4.85:/home/wwwroot/common/mainfest.plist`\n\n#### 复制目录\n复制目录 加参数 -r (递归复制整个目录)\n`$ scp /Users/stoull/Desktop/LinkBox/ username@198.168.4.85:/home/wwwroot/common/LinkBox`\n\n#### 参数详细说明\n\n> 1．命令格式：\n> \n> scp [参数] [原路径] [目标路径]\n>\n>命令参数：\n>\n-1  强制scp命令使用协议ssh1  \n-2  强制scp命令使用协议ssh2  \n-4  强制scp命令只使用IPv4寻址  \n-6  强制scp命令只使用IPv6寻址  \n-B  使用批处理模式（传输过程中不询问传输口令或短语）  \n-C  允许压缩。（将-C标志传递给ssh，从而打开压缩功能）  \n-p 保留原文件的修改时间，访问时间和访问权限。  \n-q  不显示传输进度条。  \n-r  递归复制整个目录。  \n-v 详细方式显示输出。scp和ssh(1)会显示出整个过程的调试信息。这些信息用于调试连接，验证和配置问题。   \n-c cipher  以cipher将数据传输进行加密，这个选项将直接传递给ssh。   \n-F ssh_config  指定一个替代的ssh配置文件，此参数直接传递给ssh。  \n-i identity_file  从指定文件中读取传输时使用的密钥文件，此参数直接传递给ssh。    \n-l limit  限定用户所能使用的带宽，以Kbit/s为单位。     \n-o ssh_option  如果习惯于使用ssh_config(5)中的参数传递方式，   \n-P port  注意是大写的P, port是指定数据传输用到的端口号   \n-S program  指定加密传输时所使用的程序。此程序必须能够理解ssh(1)的选项。\n\n","source":"_posts/SSH远程登录和SCP远程文件传输.md","raw":"---\ntitle: SSH远程登录和SCP远程文件传输\ndate: 2017-08-26 14:48:18\ncategories:\n- Linux\ntags:\n- Linux\n- ssh\n- scp\n---\n\n<!--## SSH远程登录和SCP远程文件传输-->\n\n### 远程登录：SSH\n\nSSH是一种网络协议，用于计算机之间的远程登录及其他网络服务。\n\n#### 1. 远程登录\n\n用登录名为 username, 远程服务地址为host\n\n\t\t$ ssh username@host\n\n<!-- more -->\n\t\t\n如指定端口号为 2222 (默认端口号为22)：\n\n\t\t$ ssh -p 2222 username@host\n\n也可以使用 -l 指定登录名\n\n\t\t$ ssh -l username -p 2222 host\n\t\t\n#### 2. 公钥登录\n如果觉得用密码账号登录特别不方便，可以试试公钥登录。\n\n> 所谓\"公钥登录\"，原理很简单，就是用户将自己的公钥储存在远程主机上。登录的时候，远程主机会向用户发送一段随机字符串，用户用自己的私钥加密后，再发回来。远程主机用事先储存的公钥进行解密，如果成功，就证明用户是可信的，直接允许登录shell，不再要求密码。\n\n首先你需要用SSH生成一对密钥：\n\n\t\t$ ssh-keygen\n\t\t\n运行上面的命令以后，系统会出现一系列提示，可以一路回车。完成之后，你应该可以在你的$HOME/.ssh/目录下看到两个文件，id_rsa就是你的私钥，而id_ras.pub则是你的公钥，现在你需要将你的公钥拷贝到服务器上，如果你的系统有ssh-copy-id命令，拷贝会很简单：\n\n\t\t$ ssh-copy-id username@host\n\t\t\n否则，你需要手动将你的私钥拷贝的服务器上的~/.ssh/authorized_keys文件中：\n\n\t\t$ ssh user@host 'mkdir -p .ssh && cat >> .ssh/authorized_keys' < ~/.ssh/id_rsa.pub\n\t\t\n> 上面这条命令由多个语句组成，依次分解开来看：\n> \n> 1. \"$ ssh user@host\"，表示登录远程主机；\n> 2. 单引号中的mkdir .ssh && cat >> .ssh/authorized_keys，表示登录后在远程shell上执行的命令：\n> 3. \"$ mkdir -p .ssh\"的作用是，如果用户主目录中的.ssh目录不存在，就创建一个；\n> 4. 'cat >> .ssh/authorized_keys' < ~/.ssh/id_rsa.pub的作用是，将本地的公钥文件~/.ssh/id_rsa.pub，重定向追加到远程文件authorized_keys的末尾。\n> \n> #### *参考资料*\n\n> [Public key authentication for SSH](https://www.ssh.com/ssh/public-key-authentication)\n\n> [SSH原理与运用（一）：远程登录](http://www.ruanyifeng.com/blog/2011/12/ssh_remote_login.html \"一些简单的SSH基础\")\n\n> [16 条技巧让你更高效使用 SSH](http://www.ruanyifeng.com/blog/2011/12/ssh_remote_login.html \"很COOL 但讲的不是很清晰SSH用法\")\n\n<br/>\n\n### 远程文件传输命令 ： SCP\n\nscp是secure copy的简写，用于在Linux下进行远程拷贝文件的命令，和它类似的命令有cp，不过cp只是在本机进行拷贝不能跨服务器，而且scp传输是加密的。\n> 1．命令格式：\n> \n> scp [参数] [原路径] [目标路径]\n\n#### 复制文件\n##### 从本地复制到远程服务器\n使用用户名username的授权，将本地桌面上的mainfest.plist文件复制到 198.168.4.85 的/home/wwwroot/common/mainfest.plist目录下面。\n\n`$ scp /Users/stoull/Desktop/LinkBox/mainfest.plist username@198.168.4.85:/home/wwwroot/common/mainfest.plist`\n\n##### 从远程服务器复制到本地\n如果要将远程的mainfest.plist文件复制到本地桌面，只要把两个参数对换即可\n\n`$ scp username@198.168.4.85:/home/wwwroot/common/mainfest.plist /Users/stoull/Desktop/LinkBox/mainfest.plist`\n\n##### 指定端口\n`$ scp -P 333333 /Users/stoull/Desktop/LinkBox/mainfest.plist username@198.168.4.85:/home/wwwroot/common/mainfest.plist`\n\n#### 复制目录\n复制目录 加参数 -r (递归复制整个目录)\n`$ scp /Users/stoull/Desktop/LinkBox/ username@198.168.4.85:/home/wwwroot/common/LinkBox`\n\n#### 参数详细说明\n\n> 1．命令格式：\n> \n> scp [参数] [原路径] [目标路径]\n>\n>命令参数：\n>\n-1  强制scp命令使用协议ssh1  \n-2  强制scp命令使用协议ssh2  \n-4  强制scp命令只使用IPv4寻址  \n-6  强制scp命令只使用IPv6寻址  \n-B  使用批处理模式（传输过程中不询问传输口令或短语）  \n-C  允许压缩。（将-C标志传递给ssh，从而打开压缩功能）  \n-p 保留原文件的修改时间，访问时间和访问权限。  \n-q  不显示传输进度条。  \n-r  递归复制整个目录。  \n-v 详细方式显示输出。scp和ssh(1)会显示出整个过程的调试信息。这些信息用于调试连接，验证和配置问题。   \n-c cipher  以cipher将数据传输进行加密，这个选项将直接传递给ssh。   \n-F ssh_config  指定一个替代的ssh配置文件，此参数直接传递给ssh。  \n-i identity_file  从指定文件中读取传输时使用的密钥文件，此参数直接传递给ssh。    \n-l limit  限定用户所能使用的带宽，以Kbit/s为单位。     \n-o ssh_option  如果习惯于使用ssh_config(5)中的参数传递方式，   \n-P port  注意是大写的P, port是指定数据传输用到的端口号   \n-S program  指定加密传输时所使用的程序。此程序必须能够理解ssh(1)的选项。\n\n","slug":"SSH远程登录和SCP远程文件传输","published":1,"updated":"2022-07-06T12:22:27.473Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl74l5j5r000h2a37ewylh1qd","content":"<!--## SSH远程登录和SCP远程文件传输-->\n\n<h3 id=\"远程登录：SSH\"><a href=\"#远程登录：SSH\" class=\"headerlink\" title=\"远程登录：SSH\"></a>远程登录：SSH</h3><p>SSH是一种网络协议，用于计算机之间的远程登录及其他网络服务。</p>\n<h4 id=\"1-远程登录\"><a href=\"#1-远程登录\" class=\"headerlink\" title=\"1. 远程登录\"></a>1. 远程登录</h4><p>用登录名为 username, 远程服务地址为host</p>\n<pre><code>    $ ssh username@host</code></pre>\n<a id=\"more\"></a>\n\n<p>如指定端口号为 2222 (默认端口号为22)：</p>\n<pre><code>    $ ssh -p 2222 username@host</code></pre>\n<p>也可以使用 -l 指定登录名</p>\n<pre><code>    $ ssh -l username -p 2222 host</code></pre>\n<h4 id=\"2-公钥登录\"><a href=\"#2-公钥登录\" class=\"headerlink\" title=\"2. 公钥登录\"></a>2. 公钥登录</h4><p>如果觉得用密码账号登录特别不方便，可以试试公钥登录。</p>\n<blockquote>\n<p>所谓”公钥登录”，原理很简单，就是用户将自己的公钥储存在远程主机上。登录的时候，远程主机会向用户发送一段随机字符串，用户用自己的私钥加密后，再发回来。远程主机用事先储存的公钥进行解密，如果成功，就证明用户是可信的，直接允许登录shell，不再要求密码。</p>\n</blockquote>\n<p>首先你需要用SSH生成一对密钥：</p>\n<pre><code>    $ ssh-keygen</code></pre>\n<p>运行上面的命令以后，系统会出现一系列提示，可以一路回车。完成之后，你应该可以在你的$HOME/.ssh/目录下看到两个文件，id_rsa就是你的私钥，而id_ras.pub则是你的公钥，现在你需要将你的公钥拷贝到服务器上，如果你的系统有ssh-copy-id命令，拷贝会很简单：</p>\n<pre><code>    $ ssh-copy-id username@host</code></pre>\n<p>否则，你需要手动将你的私钥拷贝的服务器上的~/.ssh/authorized_keys文件中：</p>\n<pre><code>    $ ssh user@host &#39;mkdir -p .ssh &amp;&amp; cat &gt;&gt; .ssh/authorized_keys&#39; &lt; ~/.ssh/id_rsa.pub</code></pre>\n<blockquote>\n<p>上面这条命令由多个语句组成，依次分解开来看：</p>\n<ol>\n<li>“$ ssh user@host”，表示登录远程主机；</li>\n<li>单引号中的mkdir .ssh &amp;&amp; cat &gt;&gt; .ssh/authorized_keys，表示登录后在远程shell上执行的命令：</li>\n<li>“$ mkdir -p .ssh”的作用是，如果用户主目录中的.ssh目录不存在，就创建一个；</li>\n<li>‘cat &gt;&gt; .ssh/authorized_keys’ &lt; <del>/.ssh/id_rsa.pub的作用是，将本地的公钥文件</del>/.ssh/id_rsa.pub，重定向追加到远程文件authorized_keys的末尾。</li>\n</ol>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a><em>参考资料</em></h4></blockquote>\n<blockquote>\n<p><a href=\"https://www.ssh.com/ssh/public-key-authentication\">Public key authentication for SSH</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"http://www.ruanyifeng.com/blog/2011/12/ssh_remote_login.html\" title=\"一些简单的SSH基础\">SSH原理与运用（一）：远程登录</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"http://www.ruanyifeng.com/blog/2011/12/ssh_remote_login.html\" title=\"很COOL 但讲的不是很清晰SSH用法\">16 条技巧让你更高效使用 SSH</a></p>\n</blockquote>\n<br/>\n\n<h3 id=\"远程文件传输命令-：-SCP\"><a href=\"#远程文件传输命令-：-SCP\" class=\"headerlink\" title=\"远程文件传输命令 ： SCP\"></a>远程文件传输命令 ： SCP</h3><p>scp是secure copy的简写，用于在Linux下进行远程拷贝文件的命令，和它类似的命令有cp，不过cp只是在本机进行拷贝不能跨服务器，而且scp传输是加密的。</p>\n<blockquote>\n<p>1．命令格式：</p>\n<p>scp [参数] [原路径] [目标路径]</p>\n</blockquote>\n<h4 id=\"复制文件\"><a href=\"#复制文件\" class=\"headerlink\" title=\"复制文件\"></a>复制文件</h4><h5 id=\"从本地复制到远程服务器\"><a href=\"#从本地复制到远程服务器\" class=\"headerlink\" title=\"从本地复制到远程服务器\"></a>从本地复制到远程服务器</h5><p>使用用户名username的授权，将本地桌面上的mainfest.plist文件复制到 198.168.4.85 的/home/wwwroot/common/mainfest.plist目录下面。</p>\n<p><code>$ scp /Users/stoull/Desktop/LinkBox/mainfest.plist username@198.168.4.85:/home/wwwroot/common/mainfest.plist</code></p>\n<h5 id=\"从远程服务器复制到本地\"><a href=\"#从远程服务器复制到本地\" class=\"headerlink\" title=\"从远程服务器复制到本地\"></a>从远程服务器复制到本地</h5><p>如果要将远程的mainfest.plist文件复制到本地桌面，只要把两个参数对换即可</p>\n<p><code>$ scp username@198.168.4.85:/home/wwwroot/common/mainfest.plist /Users/stoull/Desktop/LinkBox/mainfest.plist</code></p>\n<h5 id=\"指定端口\"><a href=\"#指定端口\" class=\"headerlink\" title=\"指定端口\"></a>指定端口</h5><p><code>$ scp -P 333333 /Users/stoull/Desktop/LinkBox/mainfest.plist username@198.168.4.85:/home/wwwroot/common/mainfest.plist</code></p>\n<h4 id=\"复制目录\"><a href=\"#复制目录\" class=\"headerlink\" title=\"复制目录\"></a>复制目录</h4><p>复制目录 加参数 -r (递归复制整个目录)<br><code>$ scp /Users/stoull/Desktop/LinkBox/ username@198.168.4.85:/home/wwwroot/common/LinkBox</code></p>\n<h4 id=\"参数详细说明\"><a href=\"#参数详细说明\" class=\"headerlink\" title=\"参数详细说明\"></a>参数详细说明</h4><blockquote>\n<p>1．命令格式：</p>\n<p>scp [参数] [原路径] [目标路径]</p>\n<p>命令参数：</p>\n</blockquote>\n<p>-1  强制scp命令使用协议ssh1<br>-2  强制scp命令使用协议ssh2<br>-4  强制scp命令只使用IPv4寻址<br>-6  强制scp命令只使用IPv6寻址<br>-B  使用批处理模式（传输过程中不询问传输口令或短语）<br>-C  允许压缩。（将-C标志传递给ssh，从而打开压缩功能）<br>-p 保留原文件的修改时间，访问时间和访问权限。<br>-q  不显示传输进度条。<br>-r  递归复制整个目录。<br>-v 详细方式显示输出。scp和ssh(1)会显示出整个过程的调试信息。这些信息用于调试连接，验证和配置问题。<br>-c cipher  以cipher将数据传输进行加密，这个选项将直接传递给ssh。<br>-F ssh_config  指定一个替代的ssh配置文件，此参数直接传递给ssh。<br>-i identity_file  从指定文件中读取传输时使用的密钥文件，此参数直接传递给ssh。<br>-l limit  限定用户所能使用的带宽，以Kbit/s为单位。<br>-o ssh_option  如果习惯于使用ssh_config(5)中的参数传递方式，<br>-P port  注意是大写的P, port是指定数据传输用到的端口号<br>-S program  指定加密传输时所使用的程序。此程序必须能够理解ssh(1)的选项。</p>\n","site":{"data":{}},"excerpt":"<!--## SSH远程登录和SCP远程文件传输-->\n\n<h3 id=\"远程登录：SSH\"><a href=\"#远程登录：SSH\" class=\"headerlink\" title=\"远程登录：SSH\"></a>远程登录：SSH</h3><p>SSH是一种网络协议，用于计算机之间的远程登录及其他网络服务。</p>\n<h4 id=\"1-远程登录\"><a href=\"#1-远程登录\" class=\"headerlink\" title=\"1. 远程登录\"></a>1. 远程登录</h4><p>用登录名为 username, 远程服务地址为host</p>\n<pre><code>    $ ssh username@host</code></pre>","more":"<p>如指定端口号为 2222 (默认端口号为22)：</p>\n<pre><code>    $ ssh -p 2222 username@host</code></pre>\n<p>也可以使用 -l 指定登录名</p>\n<pre><code>    $ ssh -l username -p 2222 host</code></pre>\n<h4 id=\"2-公钥登录\"><a href=\"#2-公钥登录\" class=\"headerlink\" title=\"2. 公钥登录\"></a>2. 公钥登录</h4><p>如果觉得用密码账号登录特别不方便，可以试试公钥登录。</p>\n<blockquote>\n<p>所谓”公钥登录”，原理很简单，就是用户将自己的公钥储存在远程主机上。登录的时候，远程主机会向用户发送一段随机字符串，用户用自己的私钥加密后，再发回来。远程主机用事先储存的公钥进行解密，如果成功，就证明用户是可信的，直接允许登录shell，不再要求密码。</p>\n</blockquote>\n<p>首先你需要用SSH生成一对密钥：</p>\n<pre><code>    $ ssh-keygen</code></pre>\n<p>运行上面的命令以后，系统会出现一系列提示，可以一路回车。完成之后，你应该可以在你的$HOME/.ssh/目录下看到两个文件，id_rsa就是你的私钥，而id_ras.pub则是你的公钥，现在你需要将你的公钥拷贝到服务器上，如果你的系统有ssh-copy-id命令，拷贝会很简单：</p>\n<pre><code>    $ ssh-copy-id username@host</code></pre>\n<p>否则，你需要手动将你的私钥拷贝的服务器上的~/.ssh/authorized_keys文件中：</p>\n<pre><code>    $ ssh user@host &#39;mkdir -p .ssh &amp;&amp; cat &gt;&gt; .ssh/authorized_keys&#39; &lt; ~/.ssh/id_rsa.pub</code></pre>\n<blockquote>\n<p>上面这条命令由多个语句组成，依次分解开来看：</p>\n<ol>\n<li>“$ ssh user@host”，表示登录远程主机；</li>\n<li>单引号中的mkdir .ssh &amp;&amp; cat &gt;&gt; .ssh/authorized_keys，表示登录后在远程shell上执行的命令：</li>\n<li>“$ mkdir -p .ssh”的作用是，如果用户主目录中的.ssh目录不存在，就创建一个；</li>\n<li>‘cat &gt;&gt; .ssh/authorized_keys’ &lt; <del>/.ssh/id_rsa.pub的作用是，将本地的公钥文件</del>/.ssh/id_rsa.pub，重定向追加到远程文件authorized_keys的末尾。</li>\n</ol>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a><em>参考资料</em></h4></blockquote>\n<blockquote>\n<p><a href=\"https://www.ssh.com/ssh/public-key-authentication\">Public key authentication for SSH</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"http://www.ruanyifeng.com/blog/2011/12/ssh_remote_login.html\" title=\"一些简单的SSH基础\">SSH原理与运用（一）：远程登录</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"http://www.ruanyifeng.com/blog/2011/12/ssh_remote_login.html\" title=\"很COOL 但讲的不是很清晰SSH用法\">16 条技巧让你更高效使用 SSH</a></p>\n</blockquote>\n<br/>\n\n<h3 id=\"远程文件传输命令-：-SCP\"><a href=\"#远程文件传输命令-：-SCP\" class=\"headerlink\" title=\"远程文件传输命令 ： SCP\"></a>远程文件传输命令 ： SCP</h3><p>scp是secure copy的简写，用于在Linux下进行远程拷贝文件的命令，和它类似的命令有cp，不过cp只是在本机进行拷贝不能跨服务器，而且scp传输是加密的。</p>\n<blockquote>\n<p>1．命令格式：</p>\n<p>scp [参数] [原路径] [目标路径]</p>\n</blockquote>\n<h4 id=\"复制文件\"><a href=\"#复制文件\" class=\"headerlink\" title=\"复制文件\"></a>复制文件</h4><h5 id=\"从本地复制到远程服务器\"><a href=\"#从本地复制到远程服务器\" class=\"headerlink\" title=\"从本地复制到远程服务器\"></a>从本地复制到远程服务器</h5><p>使用用户名username的授权，将本地桌面上的mainfest.plist文件复制到 198.168.4.85 的/home/wwwroot/common/mainfest.plist目录下面。</p>\n<p><code>$ scp /Users/stoull/Desktop/LinkBox/mainfest.plist username@198.168.4.85:/home/wwwroot/common/mainfest.plist</code></p>\n<h5 id=\"从远程服务器复制到本地\"><a href=\"#从远程服务器复制到本地\" class=\"headerlink\" title=\"从远程服务器复制到本地\"></a>从远程服务器复制到本地</h5><p>如果要将远程的mainfest.plist文件复制到本地桌面，只要把两个参数对换即可</p>\n<p><code>$ scp username@198.168.4.85:/home/wwwroot/common/mainfest.plist /Users/stoull/Desktop/LinkBox/mainfest.plist</code></p>\n<h5 id=\"指定端口\"><a href=\"#指定端口\" class=\"headerlink\" title=\"指定端口\"></a>指定端口</h5><p><code>$ scp -P 333333 /Users/stoull/Desktop/LinkBox/mainfest.plist username@198.168.4.85:/home/wwwroot/common/mainfest.plist</code></p>\n<h4 id=\"复制目录\"><a href=\"#复制目录\" class=\"headerlink\" title=\"复制目录\"></a>复制目录</h4><p>复制目录 加参数 -r (递归复制整个目录)<br><code>$ scp /Users/stoull/Desktop/LinkBox/ username@198.168.4.85:/home/wwwroot/common/LinkBox</code></p>\n<h4 id=\"参数详细说明\"><a href=\"#参数详细说明\" class=\"headerlink\" title=\"参数详细说明\"></a>参数详细说明</h4><blockquote>\n<p>1．命令格式：</p>\n<p>scp [参数] [原路径] [目标路径]</p>\n<p>命令参数：</p>\n</blockquote>\n<p>-1  强制scp命令使用协议ssh1<br>-2  强制scp命令使用协议ssh2<br>-4  强制scp命令只使用IPv4寻址<br>-6  强制scp命令只使用IPv6寻址<br>-B  使用批处理模式（传输过程中不询问传输口令或短语）<br>-C  允许压缩。（将-C标志传递给ssh，从而打开压缩功能）<br>-p 保留原文件的修改时间，访问时间和访问权限。<br>-q  不显示传输进度条。<br>-r  递归复制整个目录。<br>-v 详细方式显示输出。scp和ssh(1)会显示出整个过程的调试信息。这些信息用于调试连接，验证和配置问题。<br>-c cipher  以cipher将数据传输进行加密，这个选项将直接传递给ssh。<br>-F ssh_config  指定一个替代的ssh配置文件，此参数直接传递给ssh。<br>-i identity_file  从指定文件中读取传输时使用的密钥文件，此参数直接传递给ssh。<br>-l limit  限定用户所能使用的带宽，以Kbit/s为单位。<br>-o ssh_option  如果习惯于使用ssh_config(5)中的参数传递方式，<br>-P port  注意是大写的P, port是指定数据传输用到的端口号<br>-S program  指定加密传输时所使用的程序。此程序必须能够理解ssh(1)的选项。</p>"},{"title":"Linux 挂载(Mount)","date":"2021-10-21T10:15:18.000Z","_content":"\n\n<!--# Linux 挂载(Mount)-->\n\n## 挂载的意义\n在Linux中所有的数据都被当成文件，管理这些文件使用的是[目录树架构](https://www.pathname.com/fhs/pub/fhs-2.3.html#MNTMOUNTPOINTFORATEMPORARILYMOUNT)。目录树可以接入很多Linux系统可识别的设备，比如键盘、鼠标、蓝牙耳机、打印机、手机、磁盘等等，这些接入的设备都可以在目录`/dev`下以文件的形式找到。但对应的文件都只是设备的描述，只是一个文件。\n\n<!-- more -->\n\n>\n磁盘设备硬件命名:\n>\n* /dev/sd[a-p][1-128]：为实体磁盘的磁盘文件名；\n* /dev/vd[a-d][1-128]：为虚拟磁盘的磁盘文件名；\n\n如果对应的设备为你的一个磁盘，你是不能从`/dev/sda1`这个文件中进入你的磁盘的。挂载是将磁盘中的文件系统接入到Linux系统目录树下的一个目录里，实现对磁盘的读写。\n\n鼠标、耳机等不提供数据存储的设备的接入不是叫挂载，挂载只针对提供数据存储的设备接入到Linux系统。\n\n* Linux系统文件管理使用的是目录树架构，遵循FHS标准。\n* 存储设备的文件管理系统不在这个目录树架构中。\n* 将存储设备的文件管理系统按目录树的架构接入Linux系统文件管理树，就为挂载。\n\n\n<details>\n  <summary>更多关于'挂载'的不厌其烦</summary>\n  \n  在Linux中所有的数据都被当成文件(Everything Is A File)，管理这些文件使用的是目录树架构(tree-like hierarchical structure)，遵循[FHS](https://www.pathname.com/fhs/)标准([Wiki](https://en.wikipedia.org/wiki/Filesystem_Hierarchy_Standard))。在磁盘安装系统之前是不会有`/, /tec, /dev, /bin`这些目录的，所以FHS标准是写在系统代码里的。当你在安装系统的时候，系统会在内存里生成对应的目录树。但生成之后需要将这些数据保存在磁盘里，怎么存？\n\n在安装系统的时候，一般要指定安装的磁盘，系统安装的时候会将磁盘进行分区和格式化，将磁盘上的物理空间与系统按FHS标准生成的根目录对应起来的东西，就叫挂载。当系统完成安装的时候，我们就可以在磁盘上找到`/, /tec, /dev, /bin.....`这些目录。系统启动之后，只要在系统的目录树里新建或修改文件，就可以同步到磁盘里的文件系统中。\n\n磁盘设备在目录树中也是一个文件，但磁盘是作为一个设备存在于`/dev`文件夹下。存储设备都有一个文件系统，需要通过这个文件系统才能在物理磁盘进行数据的存储操作。将磁盘的文件系统接入Linux遵循FHS标准的文件系统中，就是挂载。挂载完之后才能对磁盘数据进操作。\n\n* 根目录一般会单独挂载到一个分区，主要是为了保证安全。\n* 用户的home目录会挂载到单独的一个分区。\n  </details>\n\n## 挂载的注意事项\n\n* 单一文件系统不应该重复挂载在不同的挂载点（目录）中；\n* 单一目录不应该重复挂载多个文件系统；\n* 要作为挂载点的目录，理论上应该都是空目录。\n\n所有磁盘设备及分区都以文件的形式存储在/dev/,但是这些文件不能直接使用，如果要往这些分区内写入数据就需要挂载分区。\n所谓的挂载点就是文件系统中存在的一个目录，通常情况下，创建在/mnt目录下，挂载成功后，访问挂载点就是访问新的存储设备。\n\n## 如何挂载一个磁盘\n\n### 查看系统中的磁盘信息\n\n* 使用命令`sudo fdisk -l `列出系统下磁盘及分区信息\n\n>`sudo fdisk -l | grep NTFS` 只列出特定文件的文件系统\n\n* 使用命令`lsblk`可查看系统中所有磁盘的信息，如：\n\n>\n`lsblk`: 列出本系统下的所有磁盘与磁盘内的分区信息\n`lsblk -ip /dev/device_name`: 设备内的所有数据的完整文件名\n\n* 使用命令`blkid `可列出设备的 UUID 等参数\n\n* 使用命令`mount`可列出系统已挂载的文件系统\n\n>\n```\n如：\npi@raspberrypi:/home $ mount\n/dev/mmcblk0p2 on / type ext4 (rw,noatime)\ndevtmpfs on /dev type devtmpfs (rw,relatime,size=1827468k,nr_inodes=97607,mode=755)\n/dev/mmcblk0p1 on /boot type vfat (rw,relatime,fmask=0022,dmask=0022,codepage=437,iocharset=ascii,shortname=mixed,errors=remount-ro)\n第一行：/dev/mmcblk0p2 为挂载的设备，挂载点为 / 文件系统为 ext4. rw表示可读写。\n第二行：设备名称为devtmpfs，挂载在目录/dev .....\n```\n\n\n### 磁盘分区\n\n磁盘分区使用 `gdisk`/`fdisk`工具\n\n### 磁盘格式化（创建文件系统）\n\n磁盘格式化使用`mkfs`工具\n如：\n`mkfs -t ext4 /dev/sdb1` 将设备sdb1格式化为ext4文件系统\n\n### 磁盘挂载与卸载 mount\n\n磁盘挂载与卸载使用`mount `工具：\n\n```\n[root@study ~]# mount -a\n[root@study ~]# mount [-l]\n[root@study ~]# mount [-t 文件系统] LABEL=''  挂载点\n[root@study ~]# mount [-t 文件系统] UUID=''   挂载点  # 鸟哥近期建议用这种方式喔！\n[root@study ~]# mount [-t 文件系统] 设备文件名  挂载点\n选项与参数：\n-a  ：依照配置文件 [/etc/fstab](../Text/index.html#fstab) 的数据将所有未挂载的磁盘都挂载上来\n-l  ：单纯的输入 mount 会显示目前挂载的信息。加上 -l 可增列 Label 名称！\n-t  ：可以加上文件系统种类来指定欲挂载的类型。常见的 Linux 支持类型有：xfs, ext3, ext4,\n      reiserfs, vfat, iso9660（光盘格式）, nfs, cifs, smbfs （后三种为网络文件系统类型）\n-n  ：在默认的情况下，系统会将实际挂载的情况实时写入 /etc/mtab 中，以利其他程序的运行。\n      但在某些情况下（例如单人维护模式）为了避免问题会刻意不写入。此时就得要使用 -n 选项。\n-o  ：后面可以接一些挂载时额外加上的参数！比方说帐号、密码、读写权限等：\n      async, sync:   此文件系统是否使用同步写入 （sync） 或非同步 （async） 的\n                     内存机制，请参考[文件系统运行方式](../Text/index.html#harddisk-filerun)。默认为 async。\n      atime,noatime: 是否修订文件的读取时间（atime）。为了性能，某些时刻可使用 noatime\n      ro, rw:        挂载文件系统成为只读（ro） 或可读写（rw）\n      auto, noauto:  允许此 filesystem 被以 mount -a 自动挂载（auto）\n      dev, nodev:    是否允许此 filesystem 上，可创建设备文件？ dev 为可允许\n      suid, nosuid:  是否允许此 filesystem 含有 suid/sgid 的文件格式？\n      exec, noexec:  是否允许此 filesystem 上拥有可执行 binary 文件？\n      user, nouser:  是否允许此 filesystem 让任何使用者执行 mount ？一般来说，\n                     mount 仅有 root 可以进行，但下达 user 参数，则可让\n                     一般 user 也能够对此 partition 进行 mount 。\n      defaults:      默认值为：rw, suid, dev, exec, auto, nouser, and async\n      remount:       重新挂载，这在系统出错，或重新更新参数时，很有用！\n```\n[以上mount说明粘贴自鸟哥的文章](https://wizardforcel.gitbooks.io/vbird-linux-basic-4e/content/61.html)\n\n与mount命令相关的文件：\n\n`/etc/fstab`：为自动挂载的配置文件，当运行 mount -a时，会将根据`/etc/fstab` 中配置的所有挂载点都挂上(一般是在系统启动时的脚本中调用，自己最好别用！)。\n\n`/etc/mtab`，`/etc/mounts`：mount 和 umount 命令会在 `/etc/mtab` 文件中维护当前挂载的文件系统的列表。\n\n\n#### 查看当系统支持的文件类型\n当挂载一个当前系统不支持的文件系统类型时，它是没有办法工作的。常见的 Linux 支持类型有：xfs, ext3, ext4,\n      reiserfs, vfat, iso9660（光盘格式）, nfs, cifs, smbfs\n\n* 查看Linux支持的文件系统： `ls -l /lib/modules/$(uname -r)/kernel/fs`\n\n* 查看Linux已载入到内存中的支持的文件系统：\n\n `cat /proc/filesystems`\n \n > 此命令打印的第一列说明文件系统是否需要挂载在一个块设备上， nodev 表明后面的文件系统不需要挂接在设备上。 第二列是内核支持的文件系统。\n \n * Linux支持的文件系统驱动文件都放在：`/lib/modules/$(uname -r)/kernel/fs/`目录下\n\n\n#### 开始挂载\n\n>可先用`sudo fdisk -l`查看磁盘是否已经挂载，如已挂载先卸载`sudo umount /media/ntfs`\n\n确保磁盘的文件系统格式是系统支持的然后开始挂载。根据[Filesystem Hierarchy Standard](https://www.pathname.com/fhs/pub/fhs-2.3.html#MNTMOUNTPOINTFORATEMPORARILYMOUNT) 标准, 挂载一般挂载在`/media`及`/mnt`目录下。\n\n* `/media`: 用来挂载可移动设备的\n>\n>/media : Mount point for removeable media \n>\nPurpose This directory contains subdirectories which are used as mount points for removeable media such as floppy disks, cdroms and zip disks.\n\n* `/mnt`: 临时挂载点，给管理员临时手动挂载用\n>\n/mnt : Mount point for a temporarily mounted filesystem \n>\nPurpose This directory is provided so that the system administrator may temporarily mount a filesystem as needed. The content of this directory is a local issue and should not affect the manner in which any program is run. This directory must not be used by installation programs: a suitable temporary directory not in use by the system must be used instead.\n\n\n1. 新建一个用于挂载的空目录\n>\n`mkdir -p /media/Transfer`\n>\n> 使用`-p`让创建者对挂载点有权限\n\n2. 将设备名将sda1挂载到`/media/Transfer`目录下：\n>\n`sudo mount /dev/sda1 /media/Transfer`\n>\n>这里不同使用`-t`去指定对应设备的文件系统，是系统会使用`/etc/filesystems`中系统指定的尝试挂载文件系统类型，按优先顺序进行尝试，匹配成功的文件系统就进挂载。\n>\n>`/proc/filesystems`中的是系统已载入的文件系统。\n\n3. 除了使用设备名还可以使用设备的UUID(比设备名更具唯一性)，进行挂载：\n>\n```\n使用blkid找出设备或分区的UUID\npi@raspberrypi:/home $ sudo blkid /dev/sda1\n/dev/sda1: LABEL=\"Transfer\" UUID=\"7170-2B5B\" TYPE=\"exfat\" PARTLABEL=\"Basic data partition\" PARTUUID=\"43726c47-de96-4e14-a274-97d5798293fb\"\n>\n使用UUID进行挂载\npi@raspberrypi:/home $ sudo mount UUID=\"7170-2B5B\" /media/Transfer\n>\npi@raspberrypi:/home $ df /media/Transfer/\nFilesystem     1K-blocks  Used Available Use% Mounted on\n/dev/sda1       52429824 12160  52417664   1% /media/Transfer\n确认挂载成功\n```\n\n4. 其它常用的命令 \n>以只读的方式挂载\n>\n>`sudo mount -o ro /dev/sda1 /media/Transfer`\n>\n>把只读的挂载重新挂载为读写模式\n>\n>`sudo mount /media/Transfer -o rw,remount`\n\n\n#### 挂载NTFS\n\nNTFS是微软开发的文件系。但微软提供了一个非商用版本的 `ntfs-3g`可读写NTFS文件系统。LInux上实现对NTFS文凭系统主要依赖`ntfs-3g`及`fuse`工具，这两个工具很有可以linux系统默认是已经安装了的\n\n1. 安装`ntfs-3`及`fuse `\n> `sudo apt install ntfs-3g`\n> \n> `sudo apt install fuse `\n\n2. 将设备`/dev/sda2`挂载到目录`/media/ntfs`下\n>\npi@raspberrypi:~ $ sudo mkdir -p /media/ntfs\n>\npi@raspberrypi:~ $ sudo blkid /dev/sda2\n>\n/dev/sda2: LABEL=\"Data\" UUID=\"4F35CAF7CAA10FF7\" TYPE=\"ntfs\" PARTLABEL=\"Basic data partition\" PARTUUID=\"1181fbd8-3209-4e7a-be4a-0888462da65c\"\n>\n>pi@raspberrypi:~ $ sudo mount -t ntfs UUID=\"4F35CAF7CAA10FF7\" /media/ntfs\n>\n>pi@raspberrypi:~ $ mount | grep ntfs\n/dev/sda2 on /media/ntfs type ntfs (rw,relatime,uid=0,gid=0,fmask=0177,dmask=077,nls=utf8,errors=continue,mft_zone_multiplier=1)\n\n#### 解除挂载\n\n`sudo umount /media/ntfs`\n\n#### 开机自动挂载\n\n`/etc/fstab`：为自动挂载的配置文件，当运行 `mount -a`时，会将根据`/etc/fstab` 中配置的所有挂载点都挂上。平常不要使用`mount -a`, 但可以更改`/etc/fstab`中的配置信息，实现自动挂载。\n\n如果要将设备`/dev/sda2`中的NTFS文件系统，在开机时自动挂载到目录`/media/ntfs`下，可在`/etc/fstab`文件中增加如下的一行配置信息：\n\n`/dev/sda2 /media/ntfs ntfs defaults 0 0`\n\n详解：\n>第一列：`/dev/sda2` 为实际的分区名称，也可以是卷标（Label）\n>\n>第二列：`/media/ntfs` 为挂载点\n>\n>第三列：`ntfs` 为此分区中的文件类型\n>\n>第四列：`defaults` 挂载的选项，用于设备挂载参数 \n>\n\tauto: 系统自动挂载，fstab默认就是这个选项\n\tdefaults: rw, suid, dev, exec, auto, nouser, and async.\n\tnoauto 开机不自动挂载\n\tnouser 只有超级用户可以挂载\n\tro 按只读权限挂载\n\trw 按可读可写权限挂载\n\tuser 任何用户都可以挂载\n\t\n>第五列：`0` 当其值设置为1时，将允许dump备份程序备份；设置为0时，忽略备份操作；\n>\n>第六列：`0` fsck磁盘检查设置。其值是一个顺序。当其值为0时，永远不检查；而 / 根目录分区永远都为1。其它分区从2开始，数字越小越先检查，如果两个分区的数字相同，则同时检查。\n\n\n[Linux mount 命令](https://www.cnblogs.com/sparkdev/p/9015312.html)\n\n[7.3 磁盘的分区、格式化、检验与挂载](https://wizardforcel.gitbooks.io/vbird-linux-basic-4e/content/61.html)","source":"_posts/Linux/Linux挂载Mount.md","raw":"---\ntitle: Linux 挂载(Mount)\ndate: 2021-10-21 18:15:18\ncategories:\n- Linux\ntags:\n- Linux\n- Mount\n---\n\n\n<!--# Linux 挂载(Mount)-->\n\n## 挂载的意义\n在Linux中所有的数据都被当成文件，管理这些文件使用的是[目录树架构](https://www.pathname.com/fhs/pub/fhs-2.3.html#MNTMOUNTPOINTFORATEMPORARILYMOUNT)。目录树可以接入很多Linux系统可识别的设备，比如键盘、鼠标、蓝牙耳机、打印机、手机、磁盘等等，这些接入的设备都可以在目录`/dev`下以文件的形式找到。但对应的文件都只是设备的描述，只是一个文件。\n\n<!-- more -->\n\n>\n磁盘设备硬件命名:\n>\n* /dev/sd[a-p][1-128]：为实体磁盘的磁盘文件名；\n* /dev/vd[a-d][1-128]：为虚拟磁盘的磁盘文件名；\n\n如果对应的设备为你的一个磁盘，你是不能从`/dev/sda1`这个文件中进入你的磁盘的。挂载是将磁盘中的文件系统接入到Linux系统目录树下的一个目录里，实现对磁盘的读写。\n\n鼠标、耳机等不提供数据存储的设备的接入不是叫挂载，挂载只针对提供数据存储的设备接入到Linux系统。\n\n* Linux系统文件管理使用的是目录树架构，遵循FHS标准。\n* 存储设备的文件管理系统不在这个目录树架构中。\n* 将存储设备的文件管理系统按目录树的架构接入Linux系统文件管理树，就为挂载。\n\n\n<details>\n  <summary>更多关于'挂载'的不厌其烦</summary>\n  \n  在Linux中所有的数据都被当成文件(Everything Is A File)，管理这些文件使用的是目录树架构(tree-like hierarchical structure)，遵循[FHS](https://www.pathname.com/fhs/)标准([Wiki](https://en.wikipedia.org/wiki/Filesystem_Hierarchy_Standard))。在磁盘安装系统之前是不会有`/, /tec, /dev, /bin`这些目录的，所以FHS标准是写在系统代码里的。当你在安装系统的时候，系统会在内存里生成对应的目录树。但生成之后需要将这些数据保存在磁盘里，怎么存？\n\n在安装系统的时候，一般要指定安装的磁盘，系统安装的时候会将磁盘进行分区和格式化，将磁盘上的物理空间与系统按FHS标准生成的根目录对应起来的东西，就叫挂载。当系统完成安装的时候，我们就可以在磁盘上找到`/, /tec, /dev, /bin.....`这些目录。系统启动之后，只要在系统的目录树里新建或修改文件，就可以同步到磁盘里的文件系统中。\n\n磁盘设备在目录树中也是一个文件，但磁盘是作为一个设备存在于`/dev`文件夹下。存储设备都有一个文件系统，需要通过这个文件系统才能在物理磁盘进行数据的存储操作。将磁盘的文件系统接入Linux遵循FHS标准的文件系统中，就是挂载。挂载完之后才能对磁盘数据进操作。\n\n* 根目录一般会单独挂载到一个分区，主要是为了保证安全。\n* 用户的home目录会挂载到单独的一个分区。\n  </details>\n\n## 挂载的注意事项\n\n* 单一文件系统不应该重复挂载在不同的挂载点（目录）中；\n* 单一目录不应该重复挂载多个文件系统；\n* 要作为挂载点的目录，理论上应该都是空目录。\n\n所有磁盘设备及分区都以文件的形式存储在/dev/,但是这些文件不能直接使用，如果要往这些分区内写入数据就需要挂载分区。\n所谓的挂载点就是文件系统中存在的一个目录，通常情况下，创建在/mnt目录下，挂载成功后，访问挂载点就是访问新的存储设备。\n\n## 如何挂载一个磁盘\n\n### 查看系统中的磁盘信息\n\n* 使用命令`sudo fdisk -l `列出系统下磁盘及分区信息\n\n>`sudo fdisk -l | grep NTFS` 只列出特定文件的文件系统\n\n* 使用命令`lsblk`可查看系统中所有磁盘的信息，如：\n\n>\n`lsblk`: 列出本系统下的所有磁盘与磁盘内的分区信息\n`lsblk -ip /dev/device_name`: 设备内的所有数据的完整文件名\n\n* 使用命令`blkid `可列出设备的 UUID 等参数\n\n* 使用命令`mount`可列出系统已挂载的文件系统\n\n>\n```\n如：\npi@raspberrypi:/home $ mount\n/dev/mmcblk0p2 on / type ext4 (rw,noatime)\ndevtmpfs on /dev type devtmpfs (rw,relatime,size=1827468k,nr_inodes=97607,mode=755)\n/dev/mmcblk0p1 on /boot type vfat (rw,relatime,fmask=0022,dmask=0022,codepage=437,iocharset=ascii,shortname=mixed,errors=remount-ro)\n第一行：/dev/mmcblk0p2 为挂载的设备，挂载点为 / 文件系统为 ext4. rw表示可读写。\n第二行：设备名称为devtmpfs，挂载在目录/dev .....\n```\n\n\n### 磁盘分区\n\n磁盘分区使用 `gdisk`/`fdisk`工具\n\n### 磁盘格式化（创建文件系统）\n\n磁盘格式化使用`mkfs`工具\n如：\n`mkfs -t ext4 /dev/sdb1` 将设备sdb1格式化为ext4文件系统\n\n### 磁盘挂载与卸载 mount\n\n磁盘挂载与卸载使用`mount `工具：\n\n```\n[root@study ~]# mount -a\n[root@study ~]# mount [-l]\n[root@study ~]# mount [-t 文件系统] LABEL=''  挂载点\n[root@study ~]# mount [-t 文件系统] UUID=''   挂载点  # 鸟哥近期建议用这种方式喔！\n[root@study ~]# mount [-t 文件系统] 设备文件名  挂载点\n选项与参数：\n-a  ：依照配置文件 [/etc/fstab](../Text/index.html#fstab) 的数据将所有未挂载的磁盘都挂载上来\n-l  ：单纯的输入 mount 会显示目前挂载的信息。加上 -l 可增列 Label 名称！\n-t  ：可以加上文件系统种类来指定欲挂载的类型。常见的 Linux 支持类型有：xfs, ext3, ext4,\n      reiserfs, vfat, iso9660（光盘格式）, nfs, cifs, smbfs （后三种为网络文件系统类型）\n-n  ：在默认的情况下，系统会将实际挂载的情况实时写入 /etc/mtab 中，以利其他程序的运行。\n      但在某些情况下（例如单人维护模式）为了避免问题会刻意不写入。此时就得要使用 -n 选项。\n-o  ：后面可以接一些挂载时额外加上的参数！比方说帐号、密码、读写权限等：\n      async, sync:   此文件系统是否使用同步写入 （sync） 或非同步 （async） 的\n                     内存机制，请参考[文件系统运行方式](../Text/index.html#harddisk-filerun)。默认为 async。\n      atime,noatime: 是否修订文件的读取时间（atime）。为了性能，某些时刻可使用 noatime\n      ro, rw:        挂载文件系统成为只读（ro） 或可读写（rw）\n      auto, noauto:  允许此 filesystem 被以 mount -a 自动挂载（auto）\n      dev, nodev:    是否允许此 filesystem 上，可创建设备文件？ dev 为可允许\n      suid, nosuid:  是否允许此 filesystem 含有 suid/sgid 的文件格式？\n      exec, noexec:  是否允许此 filesystem 上拥有可执行 binary 文件？\n      user, nouser:  是否允许此 filesystem 让任何使用者执行 mount ？一般来说，\n                     mount 仅有 root 可以进行，但下达 user 参数，则可让\n                     一般 user 也能够对此 partition 进行 mount 。\n      defaults:      默认值为：rw, suid, dev, exec, auto, nouser, and async\n      remount:       重新挂载，这在系统出错，或重新更新参数时，很有用！\n```\n[以上mount说明粘贴自鸟哥的文章](https://wizardforcel.gitbooks.io/vbird-linux-basic-4e/content/61.html)\n\n与mount命令相关的文件：\n\n`/etc/fstab`：为自动挂载的配置文件，当运行 mount -a时，会将根据`/etc/fstab` 中配置的所有挂载点都挂上(一般是在系统启动时的脚本中调用，自己最好别用！)。\n\n`/etc/mtab`，`/etc/mounts`：mount 和 umount 命令会在 `/etc/mtab` 文件中维护当前挂载的文件系统的列表。\n\n\n#### 查看当系统支持的文件类型\n当挂载一个当前系统不支持的文件系统类型时，它是没有办法工作的。常见的 Linux 支持类型有：xfs, ext3, ext4,\n      reiserfs, vfat, iso9660（光盘格式）, nfs, cifs, smbfs\n\n* 查看Linux支持的文件系统： `ls -l /lib/modules/$(uname -r)/kernel/fs`\n\n* 查看Linux已载入到内存中的支持的文件系统：\n\n `cat /proc/filesystems`\n \n > 此命令打印的第一列说明文件系统是否需要挂载在一个块设备上， nodev 表明后面的文件系统不需要挂接在设备上。 第二列是内核支持的文件系统。\n \n * Linux支持的文件系统驱动文件都放在：`/lib/modules/$(uname -r)/kernel/fs/`目录下\n\n\n#### 开始挂载\n\n>可先用`sudo fdisk -l`查看磁盘是否已经挂载，如已挂载先卸载`sudo umount /media/ntfs`\n\n确保磁盘的文件系统格式是系统支持的然后开始挂载。根据[Filesystem Hierarchy Standard](https://www.pathname.com/fhs/pub/fhs-2.3.html#MNTMOUNTPOINTFORATEMPORARILYMOUNT) 标准, 挂载一般挂载在`/media`及`/mnt`目录下。\n\n* `/media`: 用来挂载可移动设备的\n>\n>/media : Mount point for removeable media \n>\nPurpose This directory contains subdirectories which are used as mount points for removeable media such as floppy disks, cdroms and zip disks.\n\n* `/mnt`: 临时挂载点，给管理员临时手动挂载用\n>\n/mnt : Mount point for a temporarily mounted filesystem \n>\nPurpose This directory is provided so that the system administrator may temporarily mount a filesystem as needed. The content of this directory is a local issue and should not affect the manner in which any program is run. This directory must not be used by installation programs: a suitable temporary directory not in use by the system must be used instead.\n\n\n1. 新建一个用于挂载的空目录\n>\n`mkdir -p /media/Transfer`\n>\n> 使用`-p`让创建者对挂载点有权限\n\n2. 将设备名将sda1挂载到`/media/Transfer`目录下：\n>\n`sudo mount /dev/sda1 /media/Transfer`\n>\n>这里不同使用`-t`去指定对应设备的文件系统，是系统会使用`/etc/filesystems`中系统指定的尝试挂载文件系统类型，按优先顺序进行尝试，匹配成功的文件系统就进挂载。\n>\n>`/proc/filesystems`中的是系统已载入的文件系统。\n\n3. 除了使用设备名还可以使用设备的UUID(比设备名更具唯一性)，进行挂载：\n>\n```\n使用blkid找出设备或分区的UUID\npi@raspberrypi:/home $ sudo blkid /dev/sda1\n/dev/sda1: LABEL=\"Transfer\" UUID=\"7170-2B5B\" TYPE=\"exfat\" PARTLABEL=\"Basic data partition\" PARTUUID=\"43726c47-de96-4e14-a274-97d5798293fb\"\n>\n使用UUID进行挂载\npi@raspberrypi:/home $ sudo mount UUID=\"7170-2B5B\" /media/Transfer\n>\npi@raspberrypi:/home $ df /media/Transfer/\nFilesystem     1K-blocks  Used Available Use% Mounted on\n/dev/sda1       52429824 12160  52417664   1% /media/Transfer\n确认挂载成功\n```\n\n4. 其它常用的命令 \n>以只读的方式挂载\n>\n>`sudo mount -o ro /dev/sda1 /media/Transfer`\n>\n>把只读的挂载重新挂载为读写模式\n>\n>`sudo mount /media/Transfer -o rw,remount`\n\n\n#### 挂载NTFS\n\nNTFS是微软开发的文件系。但微软提供了一个非商用版本的 `ntfs-3g`可读写NTFS文件系统。LInux上实现对NTFS文凭系统主要依赖`ntfs-3g`及`fuse`工具，这两个工具很有可以linux系统默认是已经安装了的\n\n1. 安装`ntfs-3`及`fuse `\n> `sudo apt install ntfs-3g`\n> \n> `sudo apt install fuse `\n\n2. 将设备`/dev/sda2`挂载到目录`/media/ntfs`下\n>\npi@raspberrypi:~ $ sudo mkdir -p /media/ntfs\n>\npi@raspberrypi:~ $ sudo blkid /dev/sda2\n>\n/dev/sda2: LABEL=\"Data\" UUID=\"4F35CAF7CAA10FF7\" TYPE=\"ntfs\" PARTLABEL=\"Basic data partition\" PARTUUID=\"1181fbd8-3209-4e7a-be4a-0888462da65c\"\n>\n>pi@raspberrypi:~ $ sudo mount -t ntfs UUID=\"4F35CAF7CAA10FF7\" /media/ntfs\n>\n>pi@raspberrypi:~ $ mount | grep ntfs\n/dev/sda2 on /media/ntfs type ntfs (rw,relatime,uid=0,gid=0,fmask=0177,dmask=077,nls=utf8,errors=continue,mft_zone_multiplier=1)\n\n#### 解除挂载\n\n`sudo umount /media/ntfs`\n\n#### 开机自动挂载\n\n`/etc/fstab`：为自动挂载的配置文件，当运行 `mount -a`时，会将根据`/etc/fstab` 中配置的所有挂载点都挂上。平常不要使用`mount -a`, 但可以更改`/etc/fstab`中的配置信息，实现自动挂载。\n\n如果要将设备`/dev/sda2`中的NTFS文件系统，在开机时自动挂载到目录`/media/ntfs`下，可在`/etc/fstab`文件中增加如下的一行配置信息：\n\n`/dev/sda2 /media/ntfs ntfs defaults 0 0`\n\n详解：\n>第一列：`/dev/sda2` 为实际的分区名称，也可以是卷标（Label）\n>\n>第二列：`/media/ntfs` 为挂载点\n>\n>第三列：`ntfs` 为此分区中的文件类型\n>\n>第四列：`defaults` 挂载的选项，用于设备挂载参数 \n>\n\tauto: 系统自动挂载，fstab默认就是这个选项\n\tdefaults: rw, suid, dev, exec, auto, nouser, and async.\n\tnoauto 开机不自动挂载\n\tnouser 只有超级用户可以挂载\n\tro 按只读权限挂载\n\trw 按可读可写权限挂载\n\tuser 任何用户都可以挂载\n\t\n>第五列：`0` 当其值设置为1时，将允许dump备份程序备份；设置为0时，忽略备份操作；\n>\n>第六列：`0` fsck磁盘检查设置。其值是一个顺序。当其值为0时，永远不检查；而 / 根目录分区永远都为1。其它分区从2开始，数字越小越先检查，如果两个分区的数字相同，则同时检查。\n\n\n[Linux mount 命令](https://www.cnblogs.com/sparkdev/p/9015312.html)\n\n[7.3 磁盘的分区、格式化、检验与挂载](https://wizardforcel.gitbooks.io/vbird-linux-basic-4e/content/61.html)","slug":"Linux/Linux挂载Mount","published":1,"updated":"2022-07-06T12:30:50.164Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl74l5j63001r2a37h6p7blfu","content":"<!--# Linux 挂载(Mount)-->\n\n<h2 id=\"挂载的意义\"><a href=\"#挂载的意义\" class=\"headerlink\" title=\"挂载的意义\"></a>挂载的意义</h2><p>在Linux中所有的数据都被当成文件，管理这些文件使用的是<a href=\"https://www.pathname.com/fhs/pub/fhs-2.3.html#MNTMOUNTPOINTFORATEMPORARILYMOUNT\">目录树架构</a>。目录树可以接入很多Linux系统可识别的设备，比如键盘、鼠标、蓝牙耳机、打印机、手机、磁盘等等，这些接入的设备都可以在目录<code>/dev</code>下以文件的形式找到。但对应的文件都只是设备的描述，只是一个文件。</p>\n<a id=\"more\"></a>\n\n<blockquote>\n</blockquote>\n<p>磁盘设备硬件命名:</p>\n<blockquote>\n</blockquote>\n<ul>\n<li>/dev/sd[a-p][1-128]：为实体磁盘的磁盘文件名；</li>\n<li>/dev/vd[a-d][1-128]：为虚拟磁盘的磁盘文件名；</li>\n</ul>\n<p>如果对应的设备为你的一个磁盘，你是不能从<code>/dev/sda1</code>这个文件中进入你的磁盘的。挂载是将磁盘中的文件系统接入到Linux系统目录树下的一个目录里，实现对磁盘的读写。</p>\n<p>鼠标、耳机等不提供数据存储的设备的接入不是叫挂载，挂载只针对提供数据存储的设备接入到Linux系统。</p>\n<ul>\n<li>Linux系统文件管理使用的是目录树架构，遵循FHS标准。</li>\n<li>存储设备的文件管理系统不在这个目录树架构中。</li>\n<li>将存储设备的文件管理系统按目录树的架构接入Linux系统文件管理树，就为挂载。</li>\n</ul>\n<details>\n  <summary>更多关于'挂载'的不厌其烦</summary>\n\n<p>  在Linux中所有的数据都被当成文件(Everything Is A File)，管理这些文件使用的是目录树架构(tree-like hierarchical structure)，遵循<a href=\"https://www.pathname.com/fhs/\">FHS</a>标准(<a href=\"https://en.wikipedia.org/wiki/Filesystem_Hierarchy_Standard\">Wiki</a>)。在磁盘安装系统之前是不会有<code>/, /tec, /dev, /bin</code>这些目录的，所以FHS标准是写在系统代码里的。当你在安装系统的时候，系统会在内存里生成对应的目录树。但生成之后需要将这些数据保存在磁盘里，怎么存？</p>\n<p>在安装系统的时候，一般要指定安装的磁盘，系统安装的时候会将磁盘进行分区和格式化，将磁盘上的物理空间与系统按FHS标准生成的根目录对应起来的东西，就叫挂载。当系统完成安装的时候，我们就可以在磁盘上找到<code>/, /tec, /dev, /bin.....</code>这些目录。系统启动之后，只要在系统的目录树里新建或修改文件，就可以同步到磁盘里的文件系统中。</p>\n<p>磁盘设备在目录树中也是一个文件，但磁盘是作为一个设备存在于<code>/dev</code>文件夹下。存储设备都有一个文件系统，需要通过这个文件系统才能在物理磁盘进行数据的存储操作。将磁盘的文件系统接入Linux遵循FHS标准的文件系统中，就是挂载。挂载完之后才能对磁盘数据进操作。</p>\n<ul>\n<li>根目录一般会单独挂载到一个分区，主要是为了保证安全。</li>\n<li>用户的home目录会挂载到单独的一个分区。</details>\n\n</li>\n</ul>\n<h2 id=\"挂载的注意事项\"><a href=\"#挂载的注意事项\" class=\"headerlink\" title=\"挂载的注意事项\"></a>挂载的注意事项</h2><ul>\n<li>单一文件系统不应该重复挂载在不同的挂载点（目录）中；</li>\n<li>单一目录不应该重复挂载多个文件系统；</li>\n<li>要作为挂载点的目录，理论上应该都是空目录。</li>\n</ul>\n<p>所有磁盘设备及分区都以文件的形式存储在/dev/,但是这些文件不能直接使用，如果要往这些分区内写入数据就需要挂载分区。<br>所谓的挂载点就是文件系统中存在的一个目录，通常情况下，创建在/mnt目录下，挂载成功后，访问挂载点就是访问新的存储设备。</p>\n<h2 id=\"如何挂载一个磁盘\"><a href=\"#如何挂载一个磁盘\" class=\"headerlink\" title=\"如何挂载一个磁盘\"></a>如何挂载一个磁盘</h2><h3 id=\"查看系统中的磁盘信息\"><a href=\"#查看系统中的磁盘信息\" class=\"headerlink\" title=\"查看系统中的磁盘信息\"></a>查看系统中的磁盘信息</h3><ul>\n<li>使用命令<code>sudo fdisk -l </code>列出系统下磁盘及分区信息</li>\n</ul>\n<blockquote>\n<p><code>sudo fdisk -l | grep NTFS</code> 只列出特定文件的文件系统</p>\n</blockquote>\n<ul>\n<li>使用命令<code>lsblk</code>可查看系统中所有磁盘的信息，如：</li>\n</ul>\n<blockquote>\n</blockquote>\n<p><code>lsblk</code>: 列出本系统下的所有磁盘与磁盘内的分区信息<br><code>lsblk -ip /dev/device_name</code>: 设备内的所有数据的完整文件名</p>\n<ul>\n<li><p>使用命令<code>blkid </code>可列出设备的 UUID 等参数</p>\n</li>\n<li><p>使用命令<code>mount</code>可列出系统已挂载的文件系统</p>\n</li>\n</ul>\n<blockquote>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如：</span><br><span class=\"line\">pi@raspberrypi:&#x2F;home $ mount</span><br><span class=\"line\">&#x2F;dev&#x2F;mmcblk0p2 on &#x2F; type ext4 (rw,noatime)</span><br><span class=\"line\">devtmpfs on &#x2F;dev type devtmpfs (rw,relatime,size&#x3D;1827468k,nr_inodes&#x3D;97607,mode&#x3D;755)</span><br><span class=\"line\">&#x2F;dev&#x2F;mmcblk0p1 on &#x2F;boot type vfat (rw,relatime,fmask&#x3D;0022,dmask&#x3D;0022,codepage&#x3D;437,iocharset&#x3D;ascii,shortname&#x3D;mixed,errors&#x3D;remount-ro)</span><br><span class=\"line\">第一行：&#x2F;dev&#x2F;mmcblk0p2 为挂载的设备，挂载点为 &#x2F; 文件系统为 ext4. rw表示可读写。</span><br><span class=\"line\">第二行：设备名称为devtmpfs，挂载在目录&#x2F;dev .....</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"磁盘分区\"><a href=\"#磁盘分区\" class=\"headerlink\" title=\"磁盘分区\"></a>磁盘分区</h3><p>磁盘分区使用 <code>gdisk</code>/<code>fdisk</code>工具</p>\n<h3 id=\"磁盘格式化（创建文件系统）\"><a href=\"#磁盘格式化（创建文件系统）\" class=\"headerlink\" title=\"磁盘格式化（创建文件系统）\"></a>磁盘格式化（创建文件系统）</h3><p>磁盘格式化使用<code>mkfs</code>工具<br>如：<br><code>mkfs -t ext4 /dev/sdb1</code> 将设备sdb1格式化为ext4文件系统</p>\n<h3 id=\"磁盘挂载与卸载-mount\"><a href=\"#磁盘挂载与卸载-mount\" class=\"headerlink\" title=\"磁盘挂载与卸载 mount\"></a>磁盘挂载与卸载 mount</h3><p>磁盘挂载与卸载使用<code>mount </code>工具：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@study ~]# mount -a</span><br><span class=\"line\">[root@study ~]# mount [-l]</span><br><span class=\"line\">[root@study ~]# mount [-t 文件系统] LABEL&#x3D;&#39;&#39;  挂载点</span><br><span class=\"line\">[root@study ~]# mount [-t 文件系统] UUID&#x3D;&#39;&#39;   挂载点  # 鸟哥近期建议用这种方式喔！</span><br><span class=\"line\">[root@study ~]# mount [-t 文件系统] 设备文件名  挂载点</span><br><span class=\"line\">选项与参数：</span><br><span class=\"line\">-a  ：依照配置文件 [&#x2F;etc&#x2F;fstab](..&#x2F;Text&#x2F;index.html#fstab) 的数据将所有未挂载的磁盘都挂载上来</span><br><span class=\"line\">-l  ：单纯的输入 mount 会显示目前挂载的信息。加上 -l 可增列 Label 名称！</span><br><span class=\"line\">-t  ：可以加上文件系统种类来指定欲挂载的类型。常见的 Linux 支持类型有：xfs, ext3, ext4,</span><br><span class=\"line\">      reiserfs, vfat, iso9660（光盘格式）, nfs, cifs, smbfs （后三种为网络文件系统类型）</span><br><span class=\"line\">-n  ：在默认的情况下，系统会将实际挂载的情况实时写入 &#x2F;etc&#x2F;mtab 中，以利其他程序的运行。</span><br><span class=\"line\">      但在某些情况下（例如单人维护模式）为了避免问题会刻意不写入。此时就得要使用 -n 选项。</span><br><span class=\"line\">-o  ：后面可以接一些挂载时额外加上的参数！比方说帐号、密码、读写权限等：</span><br><span class=\"line\">      async, sync:   此文件系统是否使用同步写入 （sync） 或非同步 （async） 的</span><br><span class=\"line\">                     内存机制，请参考[文件系统运行方式](..&#x2F;Text&#x2F;index.html#harddisk-filerun)。默认为 async。</span><br><span class=\"line\">      atime,noatime: 是否修订文件的读取时间（atime）。为了性能，某些时刻可使用 noatime</span><br><span class=\"line\">      ro, rw:        挂载文件系统成为只读（ro） 或可读写（rw）</span><br><span class=\"line\">      auto, noauto:  允许此 filesystem 被以 mount -a 自动挂载（auto）</span><br><span class=\"line\">      dev, nodev:    是否允许此 filesystem 上，可创建设备文件？ dev 为可允许</span><br><span class=\"line\">      suid, nosuid:  是否允许此 filesystem 含有 suid&#x2F;sgid 的文件格式？</span><br><span class=\"line\">      exec, noexec:  是否允许此 filesystem 上拥有可执行 binary 文件？</span><br><span class=\"line\">      user, nouser:  是否允许此 filesystem 让任何使用者执行 mount ？一般来说，</span><br><span class=\"line\">                     mount 仅有 root 可以进行，但下达 user 参数，则可让</span><br><span class=\"line\">                     一般 user 也能够对此 partition 进行 mount 。</span><br><span class=\"line\">      defaults:      默认值为：rw, suid, dev, exec, auto, nouser, and async</span><br><span class=\"line\">      remount:       重新挂载，这在系统出错，或重新更新参数时，很有用！</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://wizardforcel.gitbooks.io/vbird-linux-basic-4e/content/61.html\">以上mount说明粘贴自鸟哥的文章</a></p>\n<p>与mount命令相关的文件：</p>\n<p><code>/etc/fstab</code>：为自动挂载的配置文件，当运行 mount -a时，会将根据<code>/etc/fstab</code> 中配置的所有挂载点都挂上(一般是在系统启动时的脚本中调用，自己最好别用！)。</p>\n<p><code>/etc/mtab</code>，<code>/etc/mounts</code>：mount 和 umount 命令会在 <code>/etc/mtab</code> 文件中维护当前挂载的文件系统的列表。</p>\n<h4 id=\"查看当系统支持的文件类型\"><a href=\"#查看当系统支持的文件类型\" class=\"headerlink\" title=\"查看当系统支持的文件类型\"></a>查看当系统支持的文件类型</h4><p>当挂载一个当前系统不支持的文件系统类型时，它是没有办法工作的。常见的 Linux 支持类型有：xfs, ext3, ext4,<br>      reiserfs, vfat, iso9660（光盘格式）, nfs, cifs, smbfs</p>\n<ul>\n<li><p>查看Linux支持的文件系统： <code>ls -l /lib/modules/$(uname -r)/kernel/fs</code></p>\n</li>\n<li><p>查看Linux已载入到内存中的支持的文件系统：</p>\n<p><code>cat /proc/filesystems</code></p>\n<blockquote>\n<p>此命令打印的第一列说明文件系统是否需要挂载在一个块设备上， nodev 表明后面的文件系统不需要挂接在设备上。 第二列是内核支持的文件系统。</p>\n</blockquote>\n</li>\n<li><p>Linux支持的文件系统驱动文件都放在：<code>/lib/modules/$(uname -r)/kernel/fs/</code>目录下</p>\n</li>\n</ul>\n<h4 id=\"开始挂载\"><a href=\"#开始挂载\" class=\"headerlink\" title=\"开始挂载\"></a>开始挂载</h4><blockquote>\n<p>可先用<code>sudo fdisk -l</code>查看磁盘是否已经挂载，如已挂载先卸载<code>sudo umount /media/ntfs</code></p>\n</blockquote>\n<p>确保磁盘的文件系统格式是系统支持的然后开始挂载。根据<a href=\"https://www.pathname.com/fhs/pub/fhs-2.3.html#MNTMOUNTPOINTFORATEMPORARILYMOUNT\">Filesystem Hierarchy Standard</a> 标准, 挂载一般挂载在<code>/media</code>及<code>/mnt</code>目录下。</p>\n<ul>\n<li><p><code>/media</code>: 用来挂载可移动设备的</p>\n<blockquote>\n<p>/media : Mount point for removeable media </p>\n</blockquote>\n<p>Purpose This directory contains subdirectories which are used as mount points for removeable media such as floppy disks, cdroms and zip disks.</p>\n</li>\n<li><p><code>/mnt</code>: 临时挂载点，给管理员临时手动挂载用</p>\n<blockquote>\n</blockquote>\n<p>/mnt : Mount point for a temporarily mounted filesystem </p>\n<blockquote>\n</blockquote>\n<p>Purpose This directory is provided so that the system administrator may temporarily mount a filesystem as needed. The content of this directory is a local issue and should not affect the manner in which any program is run. This directory must not be used by installation programs: a suitable temporary directory not in use by the system must be used instead.</p>\n</li>\n</ul>\n<ol>\n<li><p>新建一个用于挂载的空目录</p>\n<blockquote>\n</blockquote>\n<p><code>mkdir -p /media/Transfer</code></p>\n<blockquote>\n<p>使用<code>-p</code>让创建者对挂载点有权限</p>\n</blockquote>\n</li>\n<li><p>将设备名将sda1挂载到<code>/media/Transfer</code>目录下：</p>\n<blockquote>\n</blockquote>\n<p><code>sudo mount /dev/sda1 /media/Transfer</code></p>\n<blockquote>\n<p>这里不同使用<code>-t</code>去指定对应设备的文件系统，是系统会使用<code>/etc/filesystems</code>中系统指定的尝试挂载文件系统类型，按优先顺序进行尝试，匹配成功的文件系统就进挂载。</p>\n<p><code>/proc/filesystems</code>中的是系统已载入的文件系统。</p>\n</blockquote>\n</li>\n<li><p>除了使用设备名还可以使用设备的UUID(比设备名更具唯一性)，进行挂载：</p>\n<blockquote>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用blkid找出设备或分区的UUID</span><br><span class=\"line\">pi@raspberrypi:&#x2F;home $ sudo blkid &#x2F;dev&#x2F;sda1</span><br><span class=\"line\">&#x2F;dev&#x2F;sda1: LABEL&#x3D;&quot;Transfer&quot; UUID&#x3D;&quot;7170-2B5B&quot; TYPE&#x3D;&quot;exfat&quot; PARTLABEL&#x3D;&quot;Basic data partition&quot; PARTUUID&#x3D;&quot;43726c47-de96-4e14-a274-97d5798293fb&quot;</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">使用UUID进行挂载</span><br><span class=\"line\">pi@raspberrypi:&#x2F;home $ sudo mount UUID&#x3D;&quot;7170-2B5B&quot; &#x2F;media&#x2F;Transfer</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">pi@raspberrypi:&#x2F;home $ df &#x2F;media&#x2F;Transfer&#x2F;</span><br><span class=\"line\">Filesystem     1K-blocks  Used Available Use% Mounted on</span><br><span class=\"line\">&#x2F;dev&#x2F;sda1       52429824 12160  52417664   1% &#x2F;media&#x2F;Transfer</span><br><span class=\"line\">确认挂载成功</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>其它常用的命令 </p>\n<blockquote>\n<p>以只读的方式挂载</p>\n<p><code>sudo mount -o ro /dev/sda1 /media/Transfer</code></p>\n<p>把只读的挂载重新挂载为读写模式</p>\n<p><code>sudo mount /media/Transfer -o rw,remount</code></p>\n</blockquote>\n</li>\n</ol>\n<h4 id=\"挂载NTFS\"><a href=\"#挂载NTFS\" class=\"headerlink\" title=\"挂载NTFS\"></a>挂载NTFS</h4><p>NTFS是微软开发的文件系。但微软提供了一个非商用版本的 <code>ntfs-3g</code>可读写NTFS文件系统。LInux上实现对NTFS文凭系统主要依赖<code>ntfs-3g</code>及<code>fuse</code>工具，这两个工具很有可以linux系统默认是已经安装了的</p>\n<ol>\n<li><p>安装<code>ntfs-3</code>及<code>fuse </code></p>\n<blockquote>\n<p><code>sudo apt install ntfs-3g</code></p>\n<p><code>sudo apt install fuse </code></p>\n</blockquote>\n</li>\n<li><p>将设备<code>/dev/sda2</code>挂载到目录<code>/media/ntfs</code>下</p>\n<blockquote>\n</blockquote>\n<p>pi@raspberrypi:~ $ sudo mkdir -p /media/ntfs</p>\n<blockquote>\n</blockquote>\n<p>pi@raspberrypi:~ $ sudo blkid /dev/sda2</p>\n<blockquote>\n</blockquote>\n<p>/dev/sda2: LABEL=”Data” UUID=”4F35CAF7CAA10FF7” TYPE=”ntfs” PARTLABEL=”Basic data partition” PARTUUID=”1181fbd8-3209-4e7a-be4a-0888462da65c”</p>\n<blockquote>\n<p>pi@raspberrypi:~ $ sudo mount -t ntfs UUID=”4F35CAF7CAA10FF7” /media/ntfs</p>\n<p>pi@raspberrypi:~ $ mount | grep ntfs<br>/dev/sda2 on /media/ntfs type ntfs (rw,relatime,uid=0,gid=0,fmask=0177,dmask=077,nls=utf8,errors=continue,mft_zone_multiplier=1)</p>\n</blockquote>\n</li>\n</ol>\n<h4 id=\"解除挂载\"><a href=\"#解除挂载\" class=\"headerlink\" title=\"解除挂载\"></a>解除挂载</h4><p><code>sudo umount /media/ntfs</code></p>\n<h4 id=\"开机自动挂载\"><a href=\"#开机自动挂载\" class=\"headerlink\" title=\"开机自动挂载\"></a>开机自动挂载</h4><p><code>/etc/fstab</code>：为自动挂载的配置文件，当运行 <code>mount -a</code>时，会将根据<code>/etc/fstab</code> 中配置的所有挂载点都挂上。平常不要使用<code>mount -a</code>, 但可以更改<code>/etc/fstab</code>中的配置信息，实现自动挂载。</p>\n<p>如果要将设备<code>/dev/sda2</code>中的NTFS文件系统，在开机时自动挂载到目录<code>/media/ntfs</code>下，可在<code>/etc/fstab</code>文件中增加如下的一行配置信息：</p>\n<p><code>/dev/sda2 /media/ntfs ntfs defaults 0 0</code></p>\n<p>详解：</p>\n<blockquote>\n<p>第一列：<code>/dev/sda2</code> 为实际的分区名称，也可以是卷标（Label）</p>\n<p>第二列：<code>/media/ntfs</code> 为挂载点</p>\n<p>第三列：<code>ntfs</code> 为此分区中的文件类型</p>\n<p>第四列：<code>defaults</code> 挂载的选项，用于设备挂载参数 </p>\n</blockquote>\n<pre><code>auto: 系统自动挂载，fstab默认就是这个选项\ndefaults: rw, suid, dev, exec, auto, nouser, and async.\nnoauto 开机不自动挂载\nnouser 只有超级用户可以挂载\nro 按只读权限挂载\nrw 按可读可写权限挂载\nuser 任何用户都可以挂载</code></pre>\n<blockquote>\n<p>第五列：<code>0</code> 当其值设置为1时，将允许dump备份程序备份；设置为0时，忽略备份操作；</p>\n<p>第六列：<code>0</code> fsck磁盘检查设置。其值是一个顺序。当其值为0时，永远不检查；而 / 根目录分区永远都为1。其它分区从2开始，数字越小越先检查，如果两个分区的数字相同，则同时检查。</p>\n</blockquote>\n<p><a href=\"https://www.cnblogs.com/sparkdev/p/9015312.html\">Linux mount 命令</a></p>\n<p><a href=\"https://wizardforcel.gitbooks.io/vbird-linux-basic-4e/content/61.html\">7.3 磁盘的分区、格式化、检验与挂载</a></p>\n","site":{"data":{}},"excerpt":"<!--# Linux 挂载(Mount)-->\n\n<h2 id=\"挂载的意义\"><a href=\"#挂载的意义\" class=\"headerlink\" title=\"挂载的意义\"></a>挂载的意义</h2><p>在Linux中所有的数据都被当成文件，管理这些文件使用的是<a href=\"https://www.pathname.com/fhs/pub/fhs-2.3.html#MNTMOUNTPOINTFORATEMPORARILYMOUNT\">目录树架构</a>。目录树可以接入很多Linux系统可识别的设备，比如键盘、鼠标、蓝牙耳机、打印机、手机、磁盘等等，这些接入的设备都可以在目录<code>/dev</code>下以文件的形式找到。但对应的文件都只是设备的描述，只是一个文件。</p>","more":"<blockquote>\n</blockquote>\n<p>磁盘设备硬件命名:</p>\n<blockquote>\n</blockquote>\n<ul>\n<li>/dev/sd[a-p][1-128]：为实体磁盘的磁盘文件名；</li>\n<li>/dev/vd[a-d][1-128]：为虚拟磁盘的磁盘文件名；</li>\n</ul>\n<p>如果对应的设备为你的一个磁盘，你是不能从<code>/dev/sda1</code>这个文件中进入你的磁盘的。挂载是将磁盘中的文件系统接入到Linux系统目录树下的一个目录里，实现对磁盘的读写。</p>\n<p>鼠标、耳机等不提供数据存储的设备的接入不是叫挂载，挂载只针对提供数据存储的设备接入到Linux系统。</p>\n<ul>\n<li>Linux系统文件管理使用的是目录树架构，遵循FHS标准。</li>\n<li>存储设备的文件管理系统不在这个目录树架构中。</li>\n<li>将存储设备的文件管理系统按目录树的架构接入Linux系统文件管理树，就为挂载。</li>\n</ul>\n<details>\n  <summary>更多关于'挂载'的不厌其烦</summary>\n\n<p>  在Linux中所有的数据都被当成文件(Everything Is A File)，管理这些文件使用的是目录树架构(tree-like hierarchical structure)，遵循<a href=\"https://www.pathname.com/fhs/\">FHS</a>标准(<a href=\"https://en.wikipedia.org/wiki/Filesystem_Hierarchy_Standard\">Wiki</a>)。在磁盘安装系统之前是不会有<code>/, /tec, /dev, /bin</code>这些目录的，所以FHS标准是写在系统代码里的。当你在安装系统的时候，系统会在内存里生成对应的目录树。但生成之后需要将这些数据保存在磁盘里，怎么存？</p>\n<p>在安装系统的时候，一般要指定安装的磁盘，系统安装的时候会将磁盘进行分区和格式化，将磁盘上的物理空间与系统按FHS标准生成的根目录对应起来的东西，就叫挂载。当系统完成安装的时候，我们就可以在磁盘上找到<code>/, /tec, /dev, /bin.....</code>这些目录。系统启动之后，只要在系统的目录树里新建或修改文件，就可以同步到磁盘里的文件系统中。</p>\n<p>磁盘设备在目录树中也是一个文件，但磁盘是作为一个设备存在于<code>/dev</code>文件夹下。存储设备都有一个文件系统，需要通过这个文件系统才能在物理磁盘进行数据的存储操作。将磁盘的文件系统接入Linux遵循FHS标准的文件系统中，就是挂载。挂载完之后才能对磁盘数据进操作。</p>\n<ul>\n<li>根目录一般会单独挂载到一个分区，主要是为了保证安全。</li>\n<li>用户的home目录会挂载到单独的一个分区。</details>\n\n</li>\n</ul>\n<h2 id=\"挂载的注意事项\"><a href=\"#挂载的注意事项\" class=\"headerlink\" title=\"挂载的注意事项\"></a>挂载的注意事项</h2><ul>\n<li>单一文件系统不应该重复挂载在不同的挂载点（目录）中；</li>\n<li>单一目录不应该重复挂载多个文件系统；</li>\n<li>要作为挂载点的目录，理论上应该都是空目录。</li>\n</ul>\n<p>所有磁盘设备及分区都以文件的形式存储在/dev/,但是这些文件不能直接使用，如果要往这些分区内写入数据就需要挂载分区。<br>所谓的挂载点就是文件系统中存在的一个目录，通常情况下，创建在/mnt目录下，挂载成功后，访问挂载点就是访问新的存储设备。</p>\n<h2 id=\"如何挂载一个磁盘\"><a href=\"#如何挂载一个磁盘\" class=\"headerlink\" title=\"如何挂载一个磁盘\"></a>如何挂载一个磁盘</h2><h3 id=\"查看系统中的磁盘信息\"><a href=\"#查看系统中的磁盘信息\" class=\"headerlink\" title=\"查看系统中的磁盘信息\"></a>查看系统中的磁盘信息</h3><ul>\n<li>使用命令<code>sudo fdisk -l </code>列出系统下磁盘及分区信息</li>\n</ul>\n<blockquote>\n<p><code>sudo fdisk -l | grep NTFS</code> 只列出特定文件的文件系统</p>\n</blockquote>\n<ul>\n<li>使用命令<code>lsblk</code>可查看系统中所有磁盘的信息，如：</li>\n</ul>\n<blockquote>\n</blockquote>\n<p><code>lsblk</code>: 列出本系统下的所有磁盘与磁盘内的分区信息<br><code>lsblk -ip /dev/device_name</code>: 设备内的所有数据的完整文件名</p>\n<ul>\n<li><p>使用命令<code>blkid </code>可列出设备的 UUID 等参数</p>\n</li>\n<li><p>使用命令<code>mount</code>可列出系统已挂载的文件系统</p>\n</li>\n</ul>\n<blockquote>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如：</span><br><span class=\"line\">pi@raspberrypi:&#x2F;home $ mount</span><br><span class=\"line\">&#x2F;dev&#x2F;mmcblk0p2 on &#x2F; type ext4 (rw,noatime)</span><br><span class=\"line\">devtmpfs on &#x2F;dev type devtmpfs (rw,relatime,size&#x3D;1827468k,nr_inodes&#x3D;97607,mode&#x3D;755)</span><br><span class=\"line\">&#x2F;dev&#x2F;mmcblk0p1 on &#x2F;boot type vfat (rw,relatime,fmask&#x3D;0022,dmask&#x3D;0022,codepage&#x3D;437,iocharset&#x3D;ascii,shortname&#x3D;mixed,errors&#x3D;remount-ro)</span><br><span class=\"line\">第一行：&#x2F;dev&#x2F;mmcblk0p2 为挂载的设备，挂载点为 &#x2F; 文件系统为 ext4. rw表示可读写。</span><br><span class=\"line\">第二行：设备名称为devtmpfs，挂载在目录&#x2F;dev .....</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"磁盘分区\"><a href=\"#磁盘分区\" class=\"headerlink\" title=\"磁盘分区\"></a>磁盘分区</h3><p>磁盘分区使用 <code>gdisk</code>/<code>fdisk</code>工具</p>\n<h3 id=\"磁盘格式化（创建文件系统）\"><a href=\"#磁盘格式化（创建文件系统）\" class=\"headerlink\" title=\"磁盘格式化（创建文件系统）\"></a>磁盘格式化（创建文件系统）</h3><p>磁盘格式化使用<code>mkfs</code>工具<br>如：<br><code>mkfs -t ext4 /dev/sdb1</code> 将设备sdb1格式化为ext4文件系统</p>\n<h3 id=\"磁盘挂载与卸载-mount\"><a href=\"#磁盘挂载与卸载-mount\" class=\"headerlink\" title=\"磁盘挂载与卸载 mount\"></a>磁盘挂载与卸载 mount</h3><p>磁盘挂载与卸载使用<code>mount </code>工具：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@study ~]# mount -a</span><br><span class=\"line\">[root@study ~]# mount [-l]</span><br><span class=\"line\">[root@study ~]# mount [-t 文件系统] LABEL&#x3D;&#39;&#39;  挂载点</span><br><span class=\"line\">[root@study ~]# mount [-t 文件系统] UUID&#x3D;&#39;&#39;   挂载点  # 鸟哥近期建议用这种方式喔！</span><br><span class=\"line\">[root@study ~]# mount [-t 文件系统] 设备文件名  挂载点</span><br><span class=\"line\">选项与参数：</span><br><span class=\"line\">-a  ：依照配置文件 [&#x2F;etc&#x2F;fstab](..&#x2F;Text&#x2F;index.html#fstab) 的数据将所有未挂载的磁盘都挂载上来</span><br><span class=\"line\">-l  ：单纯的输入 mount 会显示目前挂载的信息。加上 -l 可增列 Label 名称！</span><br><span class=\"line\">-t  ：可以加上文件系统种类来指定欲挂载的类型。常见的 Linux 支持类型有：xfs, ext3, ext4,</span><br><span class=\"line\">      reiserfs, vfat, iso9660（光盘格式）, nfs, cifs, smbfs （后三种为网络文件系统类型）</span><br><span class=\"line\">-n  ：在默认的情况下，系统会将实际挂载的情况实时写入 &#x2F;etc&#x2F;mtab 中，以利其他程序的运行。</span><br><span class=\"line\">      但在某些情况下（例如单人维护模式）为了避免问题会刻意不写入。此时就得要使用 -n 选项。</span><br><span class=\"line\">-o  ：后面可以接一些挂载时额外加上的参数！比方说帐号、密码、读写权限等：</span><br><span class=\"line\">      async, sync:   此文件系统是否使用同步写入 （sync） 或非同步 （async） 的</span><br><span class=\"line\">                     内存机制，请参考[文件系统运行方式](..&#x2F;Text&#x2F;index.html#harddisk-filerun)。默认为 async。</span><br><span class=\"line\">      atime,noatime: 是否修订文件的读取时间（atime）。为了性能，某些时刻可使用 noatime</span><br><span class=\"line\">      ro, rw:        挂载文件系统成为只读（ro） 或可读写（rw）</span><br><span class=\"line\">      auto, noauto:  允许此 filesystem 被以 mount -a 自动挂载（auto）</span><br><span class=\"line\">      dev, nodev:    是否允许此 filesystem 上，可创建设备文件？ dev 为可允许</span><br><span class=\"line\">      suid, nosuid:  是否允许此 filesystem 含有 suid&#x2F;sgid 的文件格式？</span><br><span class=\"line\">      exec, noexec:  是否允许此 filesystem 上拥有可执行 binary 文件？</span><br><span class=\"line\">      user, nouser:  是否允许此 filesystem 让任何使用者执行 mount ？一般来说，</span><br><span class=\"line\">                     mount 仅有 root 可以进行，但下达 user 参数，则可让</span><br><span class=\"line\">                     一般 user 也能够对此 partition 进行 mount 。</span><br><span class=\"line\">      defaults:      默认值为：rw, suid, dev, exec, auto, nouser, and async</span><br><span class=\"line\">      remount:       重新挂载，这在系统出错，或重新更新参数时，很有用！</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://wizardforcel.gitbooks.io/vbird-linux-basic-4e/content/61.html\">以上mount说明粘贴自鸟哥的文章</a></p>\n<p>与mount命令相关的文件：</p>\n<p><code>/etc/fstab</code>：为自动挂载的配置文件，当运行 mount -a时，会将根据<code>/etc/fstab</code> 中配置的所有挂载点都挂上(一般是在系统启动时的脚本中调用，自己最好别用！)。</p>\n<p><code>/etc/mtab</code>，<code>/etc/mounts</code>：mount 和 umount 命令会在 <code>/etc/mtab</code> 文件中维护当前挂载的文件系统的列表。</p>\n<h4 id=\"查看当系统支持的文件类型\"><a href=\"#查看当系统支持的文件类型\" class=\"headerlink\" title=\"查看当系统支持的文件类型\"></a>查看当系统支持的文件类型</h4><p>当挂载一个当前系统不支持的文件系统类型时，它是没有办法工作的。常见的 Linux 支持类型有：xfs, ext3, ext4,<br>      reiserfs, vfat, iso9660（光盘格式）, nfs, cifs, smbfs</p>\n<ul>\n<li><p>查看Linux支持的文件系统： <code>ls -l /lib/modules/$(uname -r)/kernel/fs</code></p>\n</li>\n<li><p>查看Linux已载入到内存中的支持的文件系统：</p>\n<p><code>cat /proc/filesystems</code></p>\n<blockquote>\n<p>此命令打印的第一列说明文件系统是否需要挂载在一个块设备上， nodev 表明后面的文件系统不需要挂接在设备上。 第二列是内核支持的文件系统。</p>\n</blockquote>\n</li>\n<li><p>Linux支持的文件系统驱动文件都放在：<code>/lib/modules/$(uname -r)/kernel/fs/</code>目录下</p>\n</li>\n</ul>\n<h4 id=\"开始挂载\"><a href=\"#开始挂载\" class=\"headerlink\" title=\"开始挂载\"></a>开始挂载</h4><blockquote>\n<p>可先用<code>sudo fdisk -l</code>查看磁盘是否已经挂载，如已挂载先卸载<code>sudo umount /media/ntfs</code></p>\n</blockquote>\n<p>确保磁盘的文件系统格式是系统支持的然后开始挂载。根据<a href=\"https://www.pathname.com/fhs/pub/fhs-2.3.html#MNTMOUNTPOINTFORATEMPORARILYMOUNT\">Filesystem Hierarchy Standard</a> 标准, 挂载一般挂载在<code>/media</code>及<code>/mnt</code>目录下。</p>\n<ul>\n<li><p><code>/media</code>: 用来挂载可移动设备的</p>\n<blockquote>\n<p>/media : Mount point for removeable media </p>\n</blockquote>\n<p>Purpose This directory contains subdirectories which are used as mount points for removeable media such as floppy disks, cdroms and zip disks.</p>\n</li>\n<li><p><code>/mnt</code>: 临时挂载点，给管理员临时手动挂载用</p>\n<blockquote>\n</blockquote>\n<p>/mnt : Mount point for a temporarily mounted filesystem </p>\n<blockquote>\n</blockquote>\n<p>Purpose This directory is provided so that the system administrator may temporarily mount a filesystem as needed. The content of this directory is a local issue and should not affect the manner in which any program is run. This directory must not be used by installation programs: a suitable temporary directory not in use by the system must be used instead.</p>\n</li>\n</ul>\n<ol>\n<li><p>新建一个用于挂载的空目录</p>\n<blockquote>\n</blockquote>\n<p><code>mkdir -p /media/Transfer</code></p>\n<blockquote>\n<p>使用<code>-p</code>让创建者对挂载点有权限</p>\n</blockquote>\n</li>\n<li><p>将设备名将sda1挂载到<code>/media/Transfer</code>目录下：</p>\n<blockquote>\n</blockquote>\n<p><code>sudo mount /dev/sda1 /media/Transfer</code></p>\n<blockquote>\n<p>这里不同使用<code>-t</code>去指定对应设备的文件系统，是系统会使用<code>/etc/filesystems</code>中系统指定的尝试挂载文件系统类型，按优先顺序进行尝试，匹配成功的文件系统就进挂载。</p>\n<p><code>/proc/filesystems</code>中的是系统已载入的文件系统。</p>\n</blockquote>\n</li>\n<li><p>除了使用设备名还可以使用设备的UUID(比设备名更具唯一性)，进行挂载：</p>\n<blockquote>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用blkid找出设备或分区的UUID</span><br><span class=\"line\">pi@raspberrypi:&#x2F;home $ sudo blkid &#x2F;dev&#x2F;sda1</span><br><span class=\"line\">&#x2F;dev&#x2F;sda1: LABEL&#x3D;&quot;Transfer&quot; UUID&#x3D;&quot;7170-2B5B&quot; TYPE&#x3D;&quot;exfat&quot; PARTLABEL&#x3D;&quot;Basic data partition&quot; PARTUUID&#x3D;&quot;43726c47-de96-4e14-a274-97d5798293fb&quot;</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">使用UUID进行挂载</span><br><span class=\"line\">pi@raspberrypi:&#x2F;home $ sudo mount UUID&#x3D;&quot;7170-2B5B&quot; &#x2F;media&#x2F;Transfer</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">pi@raspberrypi:&#x2F;home $ df &#x2F;media&#x2F;Transfer&#x2F;</span><br><span class=\"line\">Filesystem     1K-blocks  Used Available Use% Mounted on</span><br><span class=\"line\">&#x2F;dev&#x2F;sda1       52429824 12160  52417664   1% &#x2F;media&#x2F;Transfer</span><br><span class=\"line\">确认挂载成功</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>其它常用的命令 </p>\n<blockquote>\n<p>以只读的方式挂载</p>\n<p><code>sudo mount -o ro /dev/sda1 /media/Transfer</code></p>\n<p>把只读的挂载重新挂载为读写模式</p>\n<p><code>sudo mount /media/Transfer -o rw,remount</code></p>\n</blockquote>\n</li>\n</ol>\n<h4 id=\"挂载NTFS\"><a href=\"#挂载NTFS\" class=\"headerlink\" title=\"挂载NTFS\"></a>挂载NTFS</h4><p>NTFS是微软开发的文件系。但微软提供了一个非商用版本的 <code>ntfs-3g</code>可读写NTFS文件系统。LInux上实现对NTFS文凭系统主要依赖<code>ntfs-3g</code>及<code>fuse</code>工具，这两个工具很有可以linux系统默认是已经安装了的</p>\n<ol>\n<li><p>安装<code>ntfs-3</code>及<code>fuse </code></p>\n<blockquote>\n<p><code>sudo apt install ntfs-3g</code></p>\n<p><code>sudo apt install fuse </code></p>\n</blockquote>\n</li>\n<li><p>将设备<code>/dev/sda2</code>挂载到目录<code>/media/ntfs</code>下</p>\n<blockquote>\n</blockquote>\n<p>pi@raspberrypi:~ $ sudo mkdir -p /media/ntfs</p>\n<blockquote>\n</blockquote>\n<p>pi@raspberrypi:~ $ sudo blkid /dev/sda2</p>\n<blockquote>\n</blockquote>\n<p>/dev/sda2: LABEL=”Data” UUID=”4F35CAF7CAA10FF7” TYPE=”ntfs” PARTLABEL=”Basic data partition” PARTUUID=”1181fbd8-3209-4e7a-be4a-0888462da65c”</p>\n<blockquote>\n<p>pi@raspberrypi:~ $ sudo mount -t ntfs UUID=”4F35CAF7CAA10FF7” /media/ntfs</p>\n<p>pi@raspberrypi:~ $ mount | grep ntfs<br>/dev/sda2 on /media/ntfs type ntfs (rw,relatime,uid=0,gid=0,fmask=0177,dmask=077,nls=utf8,errors=continue,mft_zone_multiplier=1)</p>\n</blockquote>\n</li>\n</ol>\n<h4 id=\"解除挂载\"><a href=\"#解除挂载\" class=\"headerlink\" title=\"解除挂载\"></a>解除挂载</h4><p><code>sudo umount /media/ntfs</code></p>\n<h4 id=\"开机自动挂载\"><a href=\"#开机自动挂载\" class=\"headerlink\" title=\"开机自动挂载\"></a>开机自动挂载</h4><p><code>/etc/fstab</code>：为自动挂载的配置文件，当运行 <code>mount -a</code>时，会将根据<code>/etc/fstab</code> 中配置的所有挂载点都挂上。平常不要使用<code>mount -a</code>, 但可以更改<code>/etc/fstab</code>中的配置信息，实现自动挂载。</p>\n<p>如果要将设备<code>/dev/sda2</code>中的NTFS文件系统，在开机时自动挂载到目录<code>/media/ntfs</code>下，可在<code>/etc/fstab</code>文件中增加如下的一行配置信息：</p>\n<p><code>/dev/sda2 /media/ntfs ntfs defaults 0 0</code></p>\n<p>详解：</p>\n<blockquote>\n<p>第一列：<code>/dev/sda2</code> 为实际的分区名称，也可以是卷标（Label）</p>\n<p>第二列：<code>/media/ntfs</code> 为挂载点</p>\n<p>第三列：<code>ntfs</code> 为此分区中的文件类型</p>\n<p>第四列：<code>defaults</code> 挂载的选项，用于设备挂载参数 </p>\n</blockquote>\n<pre><code>auto: 系统自动挂载，fstab默认就是这个选项\ndefaults: rw, suid, dev, exec, auto, nouser, and async.\nnoauto 开机不自动挂载\nnouser 只有超级用户可以挂载\nro 按只读权限挂载\nrw 按可读可写权限挂载\nuser 任何用户都可以挂载</code></pre>\n<blockquote>\n<p>第五列：<code>0</code> 当其值设置为1时，将允许dump备份程序备份；设置为0时，忽略备份操作；</p>\n<p>第六列：<code>0</code> fsck磁盘检查设置。其值是一个顺序。当其值为0时，永远不检查；而 / 根目录分区永远都为1。其它分区从2开始，数字越小越先检查，如果两个分区的数字相同，则同时检查。</p>\n</blockquote>\n<p><a href=\"https://www.cnblogs.com/sparkdev/p/9015312.html\">Linux mount 命令</a></p>\n<p><a href=\"https://wizardforcel.gitbooks.io/vbird-linux-basic-4e/content/61.html\">7.3 磁盘的分区、格式化、检验与挂载</a></p>"},{"title":"秋天的野果","date":"2022-08-20T12:36:00.000Z","_content":"\n<!--# 秋天的野果 -->\n![秋天野果](/images/秋天野果/0title_banner.png)\n\n在那个小山村里，小时候没有零食，也没有零食这个概念。以前村里与城市没有多少联系，村里小孩能最方便获得的‘零食’就是山里野的野果子，这也可能导致后来大量外来零食流入时，像'干脆面', '辣条'，我们都统称叫这些零食叫'果子'，可能是因为它们像山里的野果一样，是一种零食，区别是一个是从山里摘，一个是用钱买。\n\n<!-- more -->\n\n在我知道钱可以随手买到好吃的‘果子’之前，我已经在山里转悠了好些年了。在那个时候钱也是个稀缺的东西。记得有个夏天，我们一家人在收稻子，突然有个小伙子骑着自行车过来吆喝卖冰棍。那也可能是我能记得最任性的一次，父母说没钱，但我带着我妹妹在水稻田里赖命，‘罢工’，也不知道父母最后怎么给我们弄来两根冰棍的，家里可能都没有钱，收稻子怎么可能会带钱呢。因为这些原因，我还是在山里转了很多年，在我有足够的钱买想吃就吃的‘果子’时，我已经长大离开那个村子了，所以对山野里的果子有说不出的感受。\n\n秋天里的野果最多了，而且随着秋天变着颜色。初秋时，很多青涩的果子，小伙伴们个个啃得龇牙咧嘴，但随着秋天变深，果子也慢慢成熟变红变黄，在深秋打霜之后，经常是冻得满脸鼻涕，手指发木，还要摘一颗熟透的野果子塞嘴里，和牛一前一后的走进晨雾里。\n\n<div class=\"gallery\">\n      <img alt=\"\" src=\"/images/秋天野果/1.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/2.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/3.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/4.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/5.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/6.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/7.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/8.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/9.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/10.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/11.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/12.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/13.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/14.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/15.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/16.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/17.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/18.jpeg\">\n</div>\n\n[大些的照片](https://stoull.github.io/HTML/秋天的野果.html)\n\n<style>\n        .gallery {\n          display: flex;\n          flex-direction: row;\n          flex-wrap: wrap;\n          justify-content: center;\n          align-items: center;\n          gap: 16px;\n          max-width: 1400px;\n          margin: 0 auto;\n          padding: 0px 0px;\n        }\n\n        .gallery img {\n          width: 100%;\n          max-width: 220px;\n          height: 120px;\n          object-fit: cover;\n          border-radius: 6px;\n        }\n    </style>","source":"_posts/Life/秋天野果.md","raw":"---\ntitle: 秋天的野果\ndate: 2022-08-20 20:36:00\ncategories:\n- 生活\ntags:\n- 生活\n- 小时候\n---\n\n<!--# 秋天的野果 -->\n![秋天野果](/images/秋天野果/0title_banner.png)\n\n在那个小山村里，小时候没有零食，也没有零食这个概念。以前村里与城市没有多少联系，村里小孩能最方便获得的‘零食’就是山里野的野果子，这也可能导致后来大量外来零食流入时，像'干脆面', '辣条'，我们都统称叫这些零食叫'果子'，可能是因为它们像山里的野果一样，是一种零食，区别是一个是从山里摘，一个是用钱买。\n\n<!-- more -->\n\n在我知道钱可以随手买到好吃的‘果子’之前，我已经在山里转悠了好些年了。在那个时候钱也是个稀缺的东西。记得有个夏天，我们一家人在收稻子，突然有个小伙子骑着自行车过来吆喝卖冰棍。那也可能是我能记得最任性的一次，父母说没钱，但我带着我妹妹在水稻田里赖命，‘罢工’，也不知道父母最后怎么给我们弄来两根冰棍的，家里可能都没有钱，收稻子怎么可能会带钱呢。因为这些原因，我还是在山里转了很多年，在我有足够的钱买想吃就吃的‘果子’时，我已经长大离开那个村子了，所以对山野里的果子有说不出的感受。\n\n秋天里的野果最多了，而且随着秋天变着颜色。初秋时，很多青涩的果子，小伙伴们个个啃得龇牙咧嘴，但随着秋天变深，果子也慢慢成熟变红变黄，在深秋打霜之后，经常是冻得满脸鼻涕，手指发木，还要摘一颗熟透的野果子塞嘴里，和牛一前一后的走进晨雾里。\n\n<div class=\"gallery\">\n      <img alt=\"\" src=\"/images/秋天野果/1.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/2.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/3.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/4.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/5.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/6.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/7.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/8.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/9.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/10.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/11.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/12.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/13.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/14.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/15.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/16.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/17.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/18.jpeg\">\n</div>\n\n[大些的照片](https://stoull.github.io/HTML/秋天的野果.html)\n\n<style>\n        .gallery {\n          display: flex;\n          flex-direction: row;\n          flex-wrap: wrap;\n          justify-content: center;\n          align-items: center;\n          gap: 16px;\n          max-width: 1400px;\n          margin: 0 auto;\n          padding: 0px 0px;\n        }\n\n        .gallery img {\n          width: 100%;\n          max-width: 220px;\n          height: 120px;\n          object-fit: cover;\n          border-radius: 6px;\n        }\n    </style>","slug":"Life/秋天野果","published":1,"updated":"2022-08-23T03:52:40.850Z","_id":"cl75n5ct70000uc379bdce2ze","comments":1,"layout":"post","photos":[],"link":"","content":"<!--# 秋天的野果 -->\n<p><img src=\"/images/%E7%A7%8B%E5%A4%A9%E9%87%8E%E6%9E%9C/0title_banner.png\" alt=\"秋天野果\"></p>\n<p>在那个小山村里，小时候没有零食，也没有零食这个概念。以前村里与城市没有多少联系，村里小孩能最方便获得的‘零食’就是山里野的野果子，这也可能导致后来大量外来零食流入时，像’干脆面’, ‘辣条’，我们都统称叫这些零食叫’果子’，可能是因为它们像山里的野果一样，是一种零食，区别是一个是从山里摘，一个是用钱买。</p>\n<a id=\"more\"></a>\n\n<p>在我知道钱可以随手买到好吃的‘果子’之前，我已经在山里转悠了好些年了。在那个时候钱也是个稀缺的东西。记得有个夏天，我们一家人在收稻子，突然有个小伙子骑着自行车过来吆喝卖冰棍。那也可能是我能记得最任性的一次，父母说没钱，但我带着我妹妹在水稻田里赖命，‘罢工’，也不知道父母最后怎么给我们弄来两根冰棍的，家里可能都没有钱，收稻子怎么可能会带钱呢。因为这些原因，我还是在山里转了很多年，在我有足够的钱买想吃就吃的‘果子’时，我已经长大离开那个村子了，所以对山野里的果子有说不出的感受。</p>\n<p>秋天里的野果最多了，而且随着秋天变着颜色。初秋时，很多青涩的果子，小伙伴们个个啃得龇牙咧嘴，但随着秋天变深，果子也慢慢成熟变红变黄，在深秋打霜之后，经常是冻得满脸鼻涕，手指发木，还要摘一颗熟透的野果子塞嘴里，和牛一前一后的走进晨雾里。</p>\n<div class=\"gallery\">\n      <img alt=\"\" src=\"/images/秋天野果/1.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/2.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/3.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/4.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/5.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/6.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/7.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/8.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/9.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/10.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/11.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/12.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/13.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/14.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/15.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/16.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/17.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/18.jpeg\">\n</div>\n\n<p><a href=\"https://stoull.github.io/HTML/%E7%A7%8B%E5%A4%A9%E7%9A%84%E9%87%8E%E6%9E%9C.html\">大些的照片</a></p>\n<style>\n        .gallery {\n          display: flex;\n          flex-direction: row;\n          flex-wrap: wrap;\n          justify-content: center;\n          align-items: center;\n          gap: 16px;\n          max-width: 1400px;\n          margin: 0 auto;\n          padding: 0px 0px;\n        }\n\n        .gallery img {\n          width: 100%;\n          max-width: 220px;\n          height: 120px;\n          object-fit: cover;\n          border-radius: 6px;\n        }\n    </style>","site":{"data":{}},"excerpt":"<!--# 秋天的野果 -->\n<p><img src=\"/images/%E7%A7%8B%E5%A4%A9%E9%87%8E%E6%9E%9C/0title_banner.png\" alt=\"秋天野果\"></p>\n<p>在那个小山村里，小时候没有零食，也没有零食这个概念。以前村里与城市没有多少联系，村里小孩能最方便获得的‘零食’就是山里野的野果子，这也可能导致后来大量外来零食流入时，像’干脆面’, ‘辣条’，我们都统称叫这些零食叫’果子’，可能是因为它们像山里的野果一样，是一种零食，区别是一个是从山里摘，一个是用钱买。</p>","more":"<p>在我知道钱可以随手买到好吃的‘果子’之前，我已经在山里转悠了好些年了。在那个时候钱也是个稀缺的东西。记得有个夏天，我们一家人在收稻子，突然有个小伙子骑着自行车过来吆喝卖冰棍。那也可能是我能记得最任性的一次，父母说没钱，但我带着我妹妹在水稻田里赖命，‘罢工’，也不知道父母最后怎么给我们弄来两根冰棍的，家里可能都没有钱，收稻子怎么可能会带钱呢。因为这些原因，我还是在山里转了很多年，在我有足够的钱买想吃就吃的‘果子’时，我已经长大离开那个村子了，所以对山野里的果子有说不出的感受。</p>\n<p>秋天里的野果最多了，而且随着秋天变着颜色。初秋时，很多青涩的果子，小伙伴们个个啃得龇牙咧嘴，但随着秋天变深，果子也慢慢成熟变红变黄，在深秋打霜之后，经常是冻得满脸鼻涕，手指发木，还要摘一颗熟透的野果子塞嘴里，和牛一前一后的走进晨雾里。</p>\n<div class=\"gallery\">\n      <img alt=\"\" src=\"/images/秋天野果/1.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/2.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/3.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/4.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/5.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/6.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/7.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/8.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/9.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/10.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/11.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/12.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/13.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/14.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/15.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/16.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/17.jpeg\">\n      <img alt=\"\" src=\"/images/秋天野果/18.jpeg\">\n</div>\n\n<p><a href=\"https://stoull.github.io/HTML/%E7%A7%8B%E5%A4%A9%E7%9A%84%E9%87%8E%E6%9E%9C.html\">大些的照片</a></p>\n<style>\n        .gallery {\n          display: flex;\n          flex-direction: row;\n          flex-wrap: wrap;\n          justify-content: center;\n          align-items: center;\n          gap: 16px;\n          max-width: 1400px;\n          margin: 0 auto;\n          padding: 0px 0px;\n        }\n\n        .gallery img {\n          width: 100%;\n          max-width: 220px;\n          height: 120px;\n          object-fit: cover;\n          border-radius: 6px;\n        }\n    </style>"}],"PostAsset":[],"PostCategory":[{"post_id":"cl74l5j5d00012a37dpqa8o2n","category_id":"cl74l5j5i00032a3711zm3rov","_id":"cl74l5j5p000d2a376ul8aua5"},{"post_id":"cl74l5j5g00022a373c991eqx","category_id":"cl74l5j5n00082a37as843b67","_id":"cl74l5j5s000i2a3741il6dq7"},{"post_id":"cl74l5j5l00062a371gnlef8i","category_id":"cl74l5j5s000j2a37diii5jh8","_id":"cl74l5j5t000q2a379xesawgs"},{"post_id":"cl74l5j5m00072a374ljj3zlj","category_id":"cl74l5j5t000n2a377s8edznv","_id":"cl74l5j5w000u2a377e1r1nrp"},{"post_id":"cl74l5j5o000b2a37563gertw","category_id":"cl74l5j5t000n2a377s8edznv","_id":"cl74l5j5x000y2a37cpdc8cp7"},{"post_id":"cl74l5j5p000c2a37fq369tcw","category_id":"cl74l5j5t000n2a377s8edznv","_id":"cl74l5j5y00122a37f0hlbylw"},{"post_id":"cl74l5j5q000g2a372o7w4dhy","category_id":"cl74l5j5t000n2a377s8edznv","_id":"cl74l5j5y00152a374wf6dzfh"},{"post_id":"cl74l5j5k00052a37dzoz5zp9","category_id":"cl74l5j5p000e2a37d9sw0nob","_id":"cl74l5j5z00192a3772601a0u"},{"post_id":"cl74l5j5k00052a37dzoz5zp9","category_id":"cl74l5j5x00112a376u5q7ifx","_id":"cl74l5j5z001b2a372t6w4xtr"},{"post_id":"cl74l5j5r000h2a37ewylh1qd","category_id":"cl74l5j5t000n2a377s8edznv","_id":"cl74l5j5z001d2a37ezk71yvh"},{"post_id":"cl74l5j63001r2a37h6p7blfu","category_id":"cl74l5j5t000n2a377s8edznv","_id":"cl74l5j64001t2a37dz595ecb"},{"post_id":"cl75n5ct70000uc379bdce2ze","category_id":"cl75jsxcp0001wr37exo7cvn4","_id":"cl75n5ctf0003uc378h6phqyd"}],"PostTag":[{"post_id":"cl74l5j5d00012a37dpqa8o2n","tag_id":"cl74l5j5k00042a37el103no0","_id":"cl74l5j5n000a2a376p325s7e"},{"post_id":"cl74l5j5g00022a373c991eqx","tag_id":"cl74l5j5n00092a378uj5cy3j","_id":"cl74l5j5t000l2a373zfx9nvo"},{"post_id":"cl74l5j5g00022a373c991eqx","tag_id":"cl74l5j5q000f2a375kfr77zb","_id":"cl74l5j5t000m2a373hl35gnt"},{"post_id":"cl74l5j5k00052a37dzoz5zp9","tag_id":"cl74l5j5s000k2a3799lyeuwz","_id":"cl74l5j5t000p2a3753jpcqj1"},{"post_id":"cl74l5j5l00062a371gnlef8i","tag_id":"cl74l5j5t000o2a372y300x3e","_id":"cl74l5j5w000w2a374i6nahko"},{"post_id":"cl74l5j5l00062a371gnlef8i","tag_id":"cl74l5j5u000s2a377oq24uyf","_id":"cl74l5j5x000z2a372iayh8j1"},{"post_id":"cl74l5j5m00072a374ljj3zlj","tag_id":"cl74l5j5w000v2a37hcfybt90","_id":"cl74l5j5y00142a37guvic33x"},{"post_id":"cl74l5j5m00072a374ljj3zlj","tag_id":"cl74l5j5x00102a37g9lt2f6o","_id":"cl74l5j5y00172a377i4tg6xo"},{"post_id":"cl74l5j5o000b2a37563gertw","tag_id":"cl74l5j5w000v2a37hcfybt90","_id":"cl74l5j5z001c2a37hmdodfsq"},{"post_id":"cl74l5j5o000b2a37563gertw","tag_id":"cl74l5j5y00182a376kbsgox4","_id":"cl74l5j60001e2a370us1blls"},{"post_id":"cl74l5j5p000c2a37fq369tcw","tag_id":"cl74l5j5w000v2a37hcfybt90","_id":"cl74l5j60001h2a37f7348g7c"},{"post_id":"cl74l5j5p000c2a37fq369tcw","tag_id":"cl74l5j60001f2a377yof1be1","_id":"cl74l5j60001i2a378c1yeesn"},{"post_id":"cl74l5j5q000g2a372o7w4dhy","tag_id":"cl74l5j5w000v2a37hcfybt90","_id":"cl74l5j61001k2a376hym8cy0"},{"post_id":"cl74l5j5r000h2a37ewylh1qd","tag_id":"cl74l5j5w000v2a37hcfybt90","_id":"cl74l5j61001n2a376wyd6p2i"},{"post_id":"cl74l5j5r000h2a37ewylh1qd","tag_id":"cl74l5j61001l2a37525g5tg9","_id":"cl74l5j61001o2a374dfzcezp"},{"post_id":"cl74l5j5r000h2a37ewylh1qd","tag_id":"cl74l5j61001m2a376iwoamxv","_id":"cl74l5j61001p2a37co495eq8"},{"post_id":"cl74l5j63001r2a37h6p7blfu","tag_id":"cl74l5j5w000v2a37hcfybt90","_id":"cl74l5j64001u2a37bw0x4hjb"},{"post_id":"cl74l5j63001r2a37h6p7blfu","tag_id":"cl74l5j63001s2a3764b0cdmm","_id":"cl74l5j64001v2a37gco9gosq"},{"post_id":"cl75n5ct70000uc379bdce2ze","tag_id":"cl75jsxcs0002wr37g63i56es","_id":"cl75n5ctd0001uc37gpna1ifg"},{"post_id":"cl75n5ct70000uc379bdce2ze","tag_id":"cl75jsxct0003wr370rtb5ffe","_id":"cl75n5ctf0002uc372gku7k8y"}],"Tag":[{"name":"vim","_id":"cl74l5j5k00042a37el103no0"},{"name":"Mac","_id":"cl74l5j5n00092a378uj5cy3j"},{"name":"NTFS","_id":"cl74l5j5q000f2a375kfr77zb"},{"name":"Animation","_id":"cl74l5j5s000k2a3799lyeuwz"},{"name":"颜色","_id":"cl74l5j5t000o2a372y300x3e"},{"name":"Color Space","_id":"cl74l5j5u000s2a377oq24uyf"},{"name":"Linux","_id":"cl74l5j5w000v2a37hcfybt90"},{"name":"APT","_id":"cl74l5j5x00102a37g9lt2f6o"},{"name":"Cron","_id":"cl74l5j5y00182a376kbsgox4"},{"name":"ps","_id":"cl74l5j60001f2a377yof1be1"},{"name":"ssh","_id":"cl74l5j61001l2a37525g5tg9"},{"name":"scp","_id":"cl74l5j61001m2a376iwoamxv"},{"name":"Mount","_id":"cl74l5j63001s2a3764b0cdmm"},{"name":"生活","_id":"cl75jsxcs0002wr37g63i56es"},{"name":"小时候","_id":"cl75jsxct0003wr370rtb5ffe"}]}}